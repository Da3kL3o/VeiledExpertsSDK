// Class Engine.StreamableRenderAsset
// Size : 0x40 (Inherited : 0x28)
struct UStreamableRenderAsset : UObject {
	double ForceMipLevelsToBeResidentTimestamp; // 0x28(0x8)
	int32_t NumCinematicMipLevels; // 0x30(0x4)
	int32_t StreamingIndex; // 0x34(0x4)
	int32_t CachedCombinedLODBias; // 0x38(0x4)
	enum class None CachedNumResidentLODs; // 0x3C(0x1)
	unsigned char bCachedReadyForStreaming : 1; // 0x3D(0x1)
	unsigned char NeverStream : 1; // 0x3D(0x1)
	unsigned char bGlobalForceMipLevelsToBeResident : 1; // 0x3D(0x1)
	unsigned char bIsStreamable : 1; // 0x3D(0x1)
	unsigned char bHasStreamingUpdatePending : 1; // 0x3D(0x1)
	unsigned char bForceMiplevelsToBeResident : 1; // 0x3D(0x1)
	unsigned char bIgnoreStreamingMipBias : 1; // 0x3D(0x1)
	unsigned char bUseCinematicMipLevels : 1; // 0x3D(0x1)
	unsigned char UnknownData_3E[0x0002]; // 0x3E(0x2)
};

// Class Engine.Texture
// Size : 0xB8 (Inherited : 0x40)
struct UTexture : UStreamableRenderAsset {
	unsigned char UnknownData_40[0x0008]; // 0x40(0x8)
	struct FGuid LightingGuid; // 0x48(0x10)
	int32_t LODBias; // 0x58(0x4)
	enum class TextureCompressionSettings CompressionSettings; // 0x5C(0x1)
	enum class TextureFilter Filter; // 0x5D(0x1)
	enum class ETextureMipLoadOptions MipLoadOptions; // 0x5E(0x1)
	enum class TextureGroup LODGroup; // 0x5F(0x1)
	unsigned char SRGB : 1; // 0x60(0x1)
	unsigned char bNoTiling : 1; // 0x60(0x1)
	unsigned char VirtualTextureStreaming : 1; // 0x60(0x1)
	unsigned char CompressionYCoCg : 1; // 0x60(0x1)
	unsigned char bAsyncResourceReleaseHasBeenStarted : 1; // 0x60(0x1)
	unsigned char UnknownData_60_5 : 3; // 0x60(0x1)
	unsigned char UnknownData_61[0x0007]; // 0x61(0x7)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x68(0x10)
	unsigned char UnknownData_78[0x0040]; // 0x78(0x40)
};

// Class Engine.Texture2DDynamic
// Size : 0xD0 (Inherited : 0xB8)
struct UTexture2DDynamic : UTexture {
	unsigned char UnknownData_B8[0x0008]; // 0xB8(0x8)
	enum class EPixelFormat Format; // 0xC0(0x1)
	unsigned char UnknownData_C1[0x000F]; // 0xC1(0xF)
};

// Class Engine.BlueprintFunctionLibrary
// Size : 0x28 (Inherited : 0x28)
struct UBlueprintFunctionLibrary : UObject {
};

// Class Engine.Actor
// Size : 0x220 (Inherited : 0x28)
struct AActor : UObject {
	struct FActorTickFunction PrimaryActorTick; // 0x28(0x30)
	unsigned char bNetTemporary : 1; // 0x58(0x1)
	unsigned char bNetStartup : 1; // 0x58(0x1)
	unsigned char bOnlyRelevantToOwner : 1; // 0x58(0x1)
	unsigned char bAlwaysRelevant : 1; // 0x58(0x1)
	unsigned char bReplicateMovement : 1; // 0x58(0x1)
	unsigned char bHidden : 1; // 0x58(0x1)
	unsigned char bTearOff : 1; // 0x58(0x1)
	unsigned char bExchangedRoles : 1; // 0x58(0x1)
	unsigned char bNetLoadOnClient : 1; // 0x59(0x1)
	unsigned char bNetUseOwnerRelevancy : 1; // 0x59(0x1)
	unsigned char bRelevantForNetworkReplays : 1; // 0x59(0x1)
	unsigned char bRelevantForLevelBounds : 1; // 0x59(0x1)
	unsigned char bReplayRewindable : 1; // 0x59(0x1)
	unsigned char bAllowTickBeforeBeginPlay : 1; // 0x59(0x1)
	unsigned char bAutoDestroyWhenFinished : 1; // 0x59(0x1)
	unsigned char bCanBeDamaged : 1; // 0x59(0x1)
	unsigned char bBlockInput : 1; // 0x5A(0x1)
	unsigned char bCollideWhenPlacing : 1; // 0x5A(0x1)
	unsigned char bFindCameraComponentWhenViewTarget : 1; // 0x5A(0x1)
	unsigned char bGenerateOverlapEventsDuringLevelStreaming : 1; // 0x5A(0x1)
	unsigned char bIgnoresOriginShifting : 1; // 0x5A(0x1)
	unsigned char bEnableAutoLODGeneration : 1; // 0x5A(0x1)
	unsigned char bIsEditorOnlyActor : 1; // 0x5A(0x1)
	unsigned char bActorSeamlessTraveled : 1; // 0x5A(0x1)
	unsigned char bReplicates : 1; // 0x5B(0x1)
	unsigned char bCanBeInCluster : 1; // 0x5B(0x1)
	unsigned char bAllowReceiveTickEventOnDedicatedServer : 1; // 0x5B(0x1)
	unsigned char UnknownData_5B_3 : 5; // 0x5B(0x1)
	unsigned char UnknownData_5C_0 : 2; // 0x5C(0x1)
	unsigned char bActorEnableCollision : 1; // 0x5C(0x1)
	unsigned char bActorIsBeingDestroyed : 1; // 0x5C(0x1)
	unsigned char UnknownData_5C_4 : 4; // 0x5C(0x1)
	enum class EActorUpdateOverlapsMethod UpdateOverlapsMethodDuringLevelStreaming; // 0x5D(0x1)
	enum class EActorUpdateOverlapsMethod DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0x5E(0x1)
	enum class ENetRole RemoteRole; // 0x5F(0x1)
	struct FRepMovement ReplicatedMovement; // 0x60(0x34)
	float InitialLifeSpan; // 0x94(0x4)
	float CustomTimeDilation; // 0x98(0x4)
	unsigned char UnknownData_9C[0x0004]; // 0x9C(0x4)
	struct FRepAttachment AttachmentReplication; // 0xA0(0x40)
	struct AActor* Owner; // 0xE0(0x8)
	struct FName NetDriverName; // 0xE8(0x8)
	enum class ENetRole Role; // 0xF0(0x1)
	enum class ENetDormancy NetDormancy; // 0xF1(0x1)
	enum class ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod; // 0xF2(0x1)
	enum class EAutoReceiveInput AutoReceiveInput; // 0xF3(0x1)
	int32_t InputPriority; // 0xF4(0x4)
	struct UInputComponent* InputComponent; // 0xF8(0x8)
	float NetCullDistanceSquared; // 0x100(0x4)
	int32_t NetTag; // 0x104(0x4)
	float NetUpdateFrequency; // 0x108(0x4)
	float MinNetUpdateFrequency; // 0x10C(0x4)
	float NetPriority; // 0x110(0x4)
	unsigned char UnknownData_114[0x0004]; // 0x114(0x4)
	struct APawn* Instigator; // 0x118(0x8)
	struct TArray<struct AActor*> Children; // 0x120(0x10)
	struct USceneComponent* RootComponent; // 0x130(0x8)
	struct TArray<struct AMatineeActor*> ControllingMatineeActors; // 0x138(0x10)
	unsigned char UnknownData_148[0x0008]; // 0x148(0x8)
	struct TArray<struct FName> Layers; // 0x150(0x10)
	struct FWeakObjectPtr<struct UChildActorComponent> ParentComponent; // 0x160(0x8)
	unsigned char UnknownData_168[0x0008]; // 0x168(0x8)
	struct TArray<struct FName> Tags; // 0x170(0x10)
	struct FMulticastSparseDelegate OnTakeAnyDamage; // 0x180(0x1)
	struct FMulticastSparseDelegate OnTakePointDamage; // 0x181(0x1)
	struct FMulticastSparseDelegate OnTakeRadialDamage; // 0x182(0x1)
	struct FMulticastSparseDelegate OnActorBeginOverlap; // 0x183(0x1)
	struct FMulticastSparseDelegate OnActorEndOverlap; // 0x184(0x1)
	struct FMulticastSparseDelegate OnBeginCursorOver; // 0x185(0x1)
	struct FMulticastSparseDelegate OnEndCursorOver; // 0x186(0x1)
	struct FMulticastSparseDelegate OnClicked; // 0x187(0x1)
	struct FMulticastSparseDelegate OnReleased; // 0x188(0x1)
	struct FMulticastSparseDelegate OnInputTouchBegin; // 0x189(0x1)
	struct FMulticastSparseDelegate OnInputTouchEnd; // 0x18A(0x1)
	struct FMulticastSparseDelegate OnInputTouchEnter; // 0x18B(0x1)
	struct FMulticastSparseDelegate OnInputTouchLeave; // 0x18C(0x1)
	struct FMulticastSparseDelegate OnActorHit; // 0x18D(0x1)
	struct FMulticastSparseDelegate OnDestroyed; // 0x18E(0x1)
	struct FMulticastSparseDelegate OnEndPlay; // 0x18F(0x1)
	unsigned char UnknownData_190[0x0060]; // 0x190(0x60)
	struct TArray<struct UActorComponent*> InstanceComponents; // 0x1F0(0x10)
	struct TArray<struct UActorComponent*> BlueprintCreatedComponents; // 0x200(0x10)
	unsigned char UnknownData_210[0x0010]; // 0x210(0x10)

	bool WasRecentlyRendered(float Tolerance); // Function Engine.Actor.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x5, 0x7FF6556A4260
	void UserConstructionScript(); // Function Engine.Actor.UserConstructionScript // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void TearOff(); // Function Engine.Actor.TearOff // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A144F0
	void SnapRootComponentTo(struct AActor* InParentActor, struct FName InSocketName); // Function Engine.Actor.SnapRootComponentTo // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556A41A0
	void SetTickGroup(enum class ETickingGroup NewTickGroup); // Function Engine.Actor.SetTickGroup // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A4090
	void SetTickableWhenPaused(bool bTickableWhenPaused); // Function Engine.Actor.SetTickableWhenPaused // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A4110
	void SetReplicates(bool bInReplicates); // Function Engine.Actor.SetReplicates // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A4000
	void SetReplicateMovement(bool bInReplicateMovement); // Function Engine.Actor.SetReplicateMovement // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A3F70
	void SetOwner(struct AActor* NewOwner); // Function Engine.Actor.SetOwner // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A3EE0
	void SetNetDormancy(enum class ENetDormancy NewDormancy); // Function Engine.Actor.SetNetDormancy // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A3E60
	void SetLifeSpan(float InLifespan); // Function Engine.Actor.SetLifeSpan // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556A3DE0
	void SetAutoDestroyWhenFinished(bool bVal); // Function Engine.Actor.SetAutoDestroyWhenFinished // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A3D50
	void SetActorTickInterval(float TickInterval); // Function Engine.Actor.SetActorTickInterval // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556A3CD0
	void SetActorTickEnabled(bool bEnabled); // Function Engine.Actor.SetActorTickEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A3C40
	void SetActorScale3D(struct FVector NewScale3D); // Function Engine.Actor.SetActorScale3D // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6556A3BB0
	void SetActorRelativeScale3D(struct FVector NewRelativeScale); // Function Engine.Actor.SetActorRelativeScale3D // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6556A3B20
	void SetActorHiddenInGame(bool bNewHidden); // Function Engine.Actor.SetActorHiddenInGame // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A3A90
	void SetActorEnableCollision(bool bNewActorEnableCollision); // Function Engine.Actor.SetActorEnableCollision // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A3A00
	void RemoveTickPrerequisiteComponent(struct UActorComponent* PrerequisiteComponent); // Function Engine.Actor.RemoveTickPrerequisiteComponent // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A3970
	void RemoveTickPrerequisiteActor(struct AActor* PrerequisiteActor); // Function Engine.Actor.RemoveTickPrerequisiteActor // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A38E0
	void ReceiveTick(float DeltaSeconds); // Function Engine.Actor.ReceiveTick // (Event|Public|BlueprintEvent) // Param Size : 0x4, 0x7FF653FAFDF0
	void ReceiveRadialDamage(float DamageReceived, struct UDamageType* DamageType, struct FVector Origin, struct FHitResult HitInfo, struct AController* InstigatedBy, struct AActor* DamageCauser); // Function Engine.Actor.ReceiveRadialDamage // (BlueprintAuthorityOnly|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0xB8, 0x7FF653FAFDF0
	void ReceivePointDamage(float Damage, struct UDamageType* DamageType, struct FVector HitLocation, struct FVector HitNormal, struct UPrimitiveComponent* HitComponent, struct FName BoneName, struct FVector ShotFromDirection, struct AController* InstigatedBy, struct AActor* DamageCauser, struct FHitResult HitInfo); // Function Engine.Actor.ReceivePointDamage // (BlueprintAuthorityOnly|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0xE0, 0x7FF653FAFDF0
	void ReceiveHit(struct UPrimitiveComponent* MyComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, bool bSelfMoved, struct FVector HitLocation, struct FVector HitNormal, struct FVector NormalImpulse, struct FHitResult Hit); // Function Engine.Actor.ReceiveHit // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0xC8, 0x7FF653FAFDF0
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason); // Function Engine.Actor.ReceiveEndPlay // (Event|Protected|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void ReceiveDestroyed(); // Function Engine.Actor.ReceiveDestroyed // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void ReceiveBeginPlay(); // Function Engine.Actor.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void ReceiveAnyDamage(float Damage, struct UDamageType* DamageType, struct AController* InstigatedBy, struct AActor* DamageCauser); // Function Engine.Actor.ReceiveAnyDamage // (BlueprintAuthorityOnly|Event|Public|BlueprintEvent) // Param Size : 0x20, 0x7FF653FAFDF0
	void ReceiveActorOnReleased(struct FKey ButtonReleased); // Function Engine.Actor.ReceiveActorOnReleased // (Event|Public|BlueprintEvent) // Param Size : 0x18, 0x7FF653FAFDF0
	void ReceiveActorOnInputTouchLeave(enum class ETouchIndex FingerIndex); // Function Engine.Actor.ReceiveActorOnInputTouchLeave // (Event|Public|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void ReceiveActorOnInputTouchEnter(enum class ETouchIndex FingerIndex); // Function Engine.Actor.ReceiveActorOnInputTouchEnter // (Event|Public|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void ReceiveActorOnInputTouchEnd(enum class ETouchIndex FingerIndex); // Function Engine.Actor.ReceiveActorOnInputTouchEnd // (Event|Public|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void ReceiveActorOnInputTouchBegin(enum class ETouchIndex FingerIndex); // Function Engine.Actor.ReceiveActorOnInputTouchBegin // (Event|Public|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void ReceiveActorOnClicked(struct FKey ButtonPressed); // Function Engine.Actor.ReceiveActorOnClicked // (Event|Public|BlueprintEvent) // Param Size : 0x18, 0x7FF653FAFDF0
	void ReceiveActorEndOverlap(struct AActor* OtherActor); // Function Engine.Actor.ReceiveActorEndOverlap // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveActorEndCursorOver(); // Function Engine.Actor.ReceiveActorEndCursorOver // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void ReceiveActorBeginOverlap(struct AActor* OtherActor); // Function Engine.Actor.ReceiveActorBeginOverlap // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveActorBeginCursorOver(); // Function Engine.Actor.ReceiveActorBeginCursorOver // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void PrestreamTextures(float Seconds, bool bEnableStreaming, int32_t CinematicTextureGroups); // Function Engine.Actor.PrestreamTextures // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556A37D0
	void OnRep_ReplicateMovement(); // Function Engine.Actor.OnRep_ReplicateMovement // (Native|Public) // Param Size : 0x0, 0x7FF654A144D0
	void OnRep_ReplicatedMovement(); // Function Engine.Actor.OnRep_ReplicatedMovement // (Native|Public) // Param Size : 0x0, 0x7FF6556A37B0
	void OnRep_Owner(); // Function Engine.Actor.OnRep_Owner // (Native|Protected) // Param Size : 0x0, 0x7FF654E502F0
	void OnRep_Instigator(); // Function Engine.Actor.OnRep_Instigator // (Native|Public) // Param Size : 0x0, 0x7FF6556A3790
	void OnRep_AttachmentReplication(); // Function Engine.Actor.OnRep_AttachmentReplication // (Native|Public) // Param Size : 0x0, 0x7FF654A14350
	void MakeNoise(float Loudness, struct APawn* NoiseInstigator, struct FVector NoiseLocation, float MaxRange, struct FName Tag); // Function Engine.Actor.MakeNoise // (Final|BlueprintAuthorityOnly|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF6556A3600
	struct UMaterialInstanceDynamic* MakeMIDForMaterial(struct UMaterialInterface* Parent); // Function Engine.Actor.MakeMIDForMaterial // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556A3570
	bool K2_TeleportTo(struct FVector DestLocation, struct FRotator DestRotation); // Function Engine.Actor.K2_TeleportTo // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x19, 0x7FF6556A3480
	bool K2_SetActorTransform(struct FTransform NewTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_SetActorTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBE, 0x7FF6556A3290
	bool K2_SetActorRotation(struct FRotator NewRotation, bool bTeleportPhysics); // Function Engine.Actor.K2_SetActorRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xE, 0x7FF6556A31B0
	void K2_SetActorRelativeTransform(struct FTransform NewRelativeTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_SetActorRelativeTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6556A2FC0
	void K2_SetActorRelativeRotation(struct FRotator NewRelativeRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_SetActorRelativeRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6556A2E10
	void K2_SetActorRelativeLocation(struct FVector NewRelativeLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_SetActorRelativeLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6556A2C60
	bool K2_SetActorLocationAndRotation(struct FVector NewLocation, struct FRotator NewRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_SetActorLocationAndRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xA6, 0x7FF6556A2A70
	bool K2_SetActorLocation(struct FVector NewLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_SetActorLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x9A, 0x7FF6556A28C0
	void K2_OnReset(); // Function Engine.Actor.K2_OnReset // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void K2_OnEndViewTarget(struct APlayerController* PC); // Function Engine.Actor.K2_OnEndViewTarget // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void K2_OnBecomeViewTarget(struct APlayerController* PC); // Function Engine.Actor.K2_OnBecomeViewTarget // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	struct USceneComponent* K2_GetRootComponent(); // Function Engine.Actor.K2_GetRootComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A28A0
	struct TArray<struct UActorComponent*> K2_GetComponentsByClass(class UActorComponent* ComponentClass); // Function Engine.Actor.K2_GetComponentsByClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6556A27C0
	struct FRotator K2_GetActorRotation(); // Function Engine.Actor.K2_GetActorRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A2700
	struct FVector K2_GetActorLocation(); // Function Engine.Actor.K2_GetActorLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A2680
	void K2_DetachFromActor(enum class EDetachmentRule LocationRule, enum class EDetachmentRule RotationRule, enum class EDetachmentRule ScaleRule); // Function Engine.Actor.K2_DetachFromActor // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF6556A2580
	void K2_DestroyComponent(struct UActorComponent* Component); // Function Engine.Actor.K2_DestroyComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A2500
	void K2_DestroyActor(); // Function Engine.Actor.K2_DestroyActor // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556A24E0
	void K2_AttachToComponent(struct USceneComponent* Parent, struct FName SocketName, enum class EAttachmentRule LocationRule, enum class EAttachmentRule RotationRule, enum class EAttachmentRule ScaleRule, bool bWeldSimulatedBodies); // Function Engine.Actor.K2_AttachToComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6556A2320
	void K2_AttachToActor(struct AActor* ParentActor, struct FName SocketName, enum class EAttachmentRule LocationRule, enum class EAttachmentRule RotationRule, enum class EAttachmentRule ScaleRule, bool bWeldSimulatedBodies); // Function Engine.Actor.K2_AttachToActor // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6556A2160
	void K2_AttachRootComponentToActor(struct AActor* InParentActor, struct FName InSocketName, enum class EAttachLocation AttachLocationType, bool bWeldSimulatedBodies); // Function Engine.Actor.K2_AttachRootComponentToActor // (Final|Native|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF6556A2010
	void K2_AttachRootComponentTo(struct USceneComponent* InParent, struct FName InSocketName, enum class EAttachLocation AttachLocationType, bool bWeldSimulatedBodies); // Function Engine.Actor.K2_AttachRootComponentTo // (Final|Native|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF6556A1EC0
	void K2_AddActorWorldTransform(struct FTransform DeltaTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_AddActorWorldTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6556A1CD0
	void K2_AddActorWorldRotation(struct FRotator DeltaRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_AddActorWorldRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6556A1B20
	void K2_AddActorWorldOffset(struct FVector DeltaLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_AddActorWorldOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6556A1970
	void K2_AddActorLocalTransform(struct FTransform NewTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_AddActorLocalTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6556A1780
	void K2_AddActorLocalRotation(struct FRotator DeltaRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_AddActorLocalRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6556A15D0
	void K2_AddActorLocalOffset(struct FVector DeltaLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.Actor.K2_AddActorLocalOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6556A1420
	bool IsOverlappingActor(struct AActor* Other); // Function Engine.Actor.IsOverlappingActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6556A1390
	bool IsChildActor(); // Function Engine.Actor.IsChildActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A1360
	bool IsActorTickEnabled(); // Function Engine.Actor.IsActorTickEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A1330
	bool IsActorBeingDestroyed(); // Function Engine.Actor.IsActorBeingDestroyed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A1300
	bool HasAuthority(); // Function Engine.Actor.HasAuthority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A12D0
	float GetVerticalDistanceTo(struct AActor* OtherActor); // Function Engine.Actor.GetVerticalDistanceTo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A1230
	struct FVector GetVelocity(); // Function Engine.Actor.GetVelocity // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A11F0
	struct FTransform GetTransform(); // Function Engine.Actor.GetTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x30, 0x7FF6556A11A0
	bool GetTickableWhenPaused(); // Function Engine.Actor.GetTickableWhenPaused // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A1170
	float GetSquaredDistanceTo(struct AActor* OtherActor); // Function Engine.Actor.GetSquaredDistanceTo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A10D0
	enum class ENetRole GetRemoteRole(); // Function Engine.Actor.GetRemoteRole // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A10B0
	struct UChildActorComponent* GetParentComponent(); // Function Engine.Actor.GetParentComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A1080
	struct AActor* GetParentActor(); // Function Engine.Actor.GetParentActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A1050
	struct AActor* GetOwner(); // Function Engine.Actor.GetOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF654D72C20
	void GetOverlappingComponents(struct TArray<struct UPrimitiveComponent*> OverlappingComponents); // Function Engine.Actor.GetOverlappingComponents // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556A0FA0
	void GetOverlappingActors(struct TArray<struct AActor*> OverlappingActors, class AActor* ClassFilter); // Function Engine.Actor.GetOverlappingActors // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6556A0EB0
	enum class ENetRole GetLocalRole(); // Function Engine.Actor.GetLocalRole // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65312E9B0
	float GetLifeSpan(); // Function Engine.Actor.GetLifeSpan // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556A0E70
	struct AController* GetInstigatorController(); // Function Engine.Actor.GetInstigatorController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A0E40
	struct APawn* GetInstigator(); // Function Engine.Actor.GetInstigator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A0E10
	struct FVector GetInputVectorAxisValue(struct FKey InputAxisKey); // Function Engine.Actor.GetInputVectorAxisValue // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x24, 0x7FF6556A0D10
	float GetInputAxisValue(struct FName InputAxisName); // Function Engine.Actor.GetInputAxisValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A0C70
	float GetInputAxisKeyValue(struct FKey InputAxisKey); // Function Engine.Actor.GetInputAxisKeyValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6556A0B80
	float GetHorizontalDotProductTo(struct AActor* OtherActor); // Function Engine.Actor.GetHorizontalDotProductTo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A0AE0
	float GetHorizontalDistanceTo(struct AActor* OtherActor); // Function Engine.Actor.GetHorizontalDistanceTo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A0A40
	float GetGameTimeSinceCreation(); // Function Engine.Actor.GetGameTimeSinceCreation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556A0A10
	float GetDotProductTo(struct AActor* OtherActor); // Function Engine.Actor.GetDotProductTo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A0970
	float GetDistanceTo(struct AActor* OtherActor); // Function Engine.Actor.GetDistanceTo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A08D0
	struct TArray<struct UActorComponent*> GetComponentsByTag(class UActorComponent* ComponentClass, struct FName Tag); // Function Engine.Actor.GetComponentsByTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x20, 0x7FF6556A07D0
	struct TArray<struct UActorComponent*> GetComponentsByInterface(class UInterface* Interface); // Function Engine.Actor.GetComponentsByInterface // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6556A06F0
	struct UActorComponent* GetComponentByClass(class UActorComponent* ComponentClass); // Function Engine.Actor.GetComponentByClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556A0660
	struct FName GetAttachParentSocketName(); // Function Engine.Actor.GetAttachParentSocketName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A0520
	struct AActor* GetAttachParentActor(); // Function Engine.Actor.GetAttachParentActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A04F0
	void GetAttachedActors(struct TArray<struct AActor*> OutActors, bool bResetArray); // Function Engine.Actor.GetAttachedActors // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x11, 0x7FF6556A0560
	void GetAllChildActors(struct TArray<struct AActor*> ChildActors, bool bIncludeDescendants); // Function Engine.Actor.GetAllChildActors // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x11, 0x7FF6556A03F0
	struct FVector GetActorUpVector(); // Function Engine.Actor.GetActorUpVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A0380
	float GetActorTimeDilation(); // Function Engine.Actor.GetActorTimeDilation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556A0350
	float GetActorTickInterval(); // Function Engine.Actor.GetActorTickInterval // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556A0320
	struct FVector GetActorScale3D(); // Function Engine.Actor.GetActorScale3D // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A02E0
	struct FVector GetActorRightVector(); // Function Engine.Actor.GetActorRightVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A0270
	struct FVector GetActorRelativeScale3D(); // Function Engine.Actor.GetActorRelativeScale3D // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A0230
	struct FVector GetActorForwardVector(); // Function Engine.Actor.GetActorForwardVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556A01C0
	void GetActorEyesViewPoint(struct FVector OutLocation, struct FRotator OutRotation); // Function Engine.Actor.GetActorEyesViewPoint // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6556A00D0
	bool GetActorEnableCollision(); // Function Engine.Actor.GetActorEnableCollision // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A00A0
	void GetActorBounds(bool bOnlyCollidingComponents, struct FVector Origin, struct FVector BoxExtent, bool bIncludeFromChildActors); // Function Engine.Actor.GetActorBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1D, 0x7FF65569FF20
	void ForceNetUpdate(); // Function Engine.Actor.ForceNetUpdate // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65569FF00
	void FlushNetDormancy(); // Function Engine.Actor.FlushNetDormancy // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65569FEE0
	void EnableInput(struct APlayerController* PlayerController); // Function Engine.Actor.EnableInput // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF654E4C3E0
	void DisableInput(struct APlayerController* PlayerController); // Function Engine.Actor.DisableInput // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF654E39420
	void DetachRootComponentFromParent(bool bMaintainWorldPosition); // Function Engine.Actor.DetachRootComponentFromParent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65569FE50
	void AddTickPrerequisiteComponent(struct UActorComponent* PrerequisiteComponent); // Function Engine.Actor.AddTickPrerequisiteComponent // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65569FDC0
	void AddTickPrerequisiteActor(struct AActor* PrerequisiteActor); // Function Engine.Actor.AddTickPrerequisiteActor // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65569FD30
	struct UActorComponent* AddComponent(struct FName TemplateName, bool bManualAttachment, struct FTransform RelativeTransform, struct UObject* ComponentTemplateContext); // Function Engine.Actor.AddComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF65569FB70
	bool ActorHasTag(struct FName Tag); // Function Engine.Actor.ActorHasTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF65569FAE0
};

// Class Engine.ActorComponent
// Size : 0xB0 (Inherited : 0x28)
struct UActorComponent : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct FActorComponentTickFunction PrimaryComponentTick; // 0x30(0x30)
	struct TArray<struct FName> ComponentTags; // 0x60(0x10)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x70(0x10)
	unsigned char UnknownData_80[0x0004]; // 0x80(0x4)
	int32_t UCSSerializationIndex; // 0x84(0x4)
	unsigned char UnknownData_88_0 : 3; // 0x88(0x1)
	unsigned char bNetAddressable : 1; // 0x88(0x1)
	unsigned char bReplicates : 1; // 0x88(0x1)
	unsigned char UnknownData_88_5 : 3; // 0x88(0x1)
	unsigned char UnknownData_89_0 : 7; // 0x89(0x1)
	unsigned char bAutoActivate : 1; // 0x89(0x1)
	unsigned char bIsActive : 1; // 0x8A(0x1)
	unsigned char bEditableWhenInherited : 1; // 0x8A(0x1)
	unsigned char UnknownData_8A_2 : 1; // 0x8A(0x1)
	unsigned char bCanEverAffectNavigation : 1; // 0x8A(0x1)
	unsigned char UnknownData_8A_4 : 1; // 0x8A(0x1)
	unsigned char bIsEditorOnly : 1; // 0x8A(0x1)
	unsigned char UnknownData_8A_6 : 2; // 0x8A(0x1)
	unsigned char UnknownData_8B[0x0001]; // 0x8B(0x1)
	enum class EComponentCreationMethod CreationMethod; // 0x8C(0x1)
	struct FMulticastSparseDelegate OnComponentActivated; // 0x8D(0x1)
	struct FMulticastSparseDelegate OnComponentDeactivated; // 0x8E(0x1)
	unsigned char UnknownData_8F[0x0001]; // 0x8F(0x1)
	struct TArray<struct FSimpleMemberReference> UCSModifiedProperties; // 0x90(0x10)
	unsigned char UnknownData_A0[0x0010]; // 0xA0(0x10)

	void ToggleActive(); // Function Engine.ActorComponent.ToggleActive // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654E502F0
	void SetTickGroup(enum class ETickingGroup NewTickGroup); // Function Engine.ActorComponent.SetTickGroup // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A7BB0
	void SetTickableWhenPaused(bool bTickableWhenPaused); // Function Engine.ActorComponent.SetTickableWhenPaused // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A7C30
	void SetIsReplicated(bool ShouldReplicate); // Function Engine.ActorComponent.SetIsReplicated // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A7B20
	void SetComponentTickInterval(float TickInterval); // Function Engine.ActorComponent.SetComponentTickInterval // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556A7AA0
	void SetComponentTickEnabled(bool bEnabled); // Function Engine.ActorComponent.SetComponentTickEnabled // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A7A10
	void SetAutoActivate(bool bNewAutoActivate); // Function Engine.ActorComponent.SetAutoActivate // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A3F70
	void SetActive(bool bNewActive, bool bReset); // Function Engine.ActorComponent.SetActive // (Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6556A7940
	void RemoveTickPrerequisiteComponent(struct UActorComponent* PrerequisiteComponent); // Function Engine.ActorComponent.RemoveTickPrerequisiteComponent // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A78B0
	void RemoveTickPrerequisiteActor(struct AActor* PrerequisiteActor); // Function Engine.ActorComponent.RemoveTickPrerequisiteActor // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A7820
	void ReceiveTick(float DeltaSeconds); // Function Engine.ActorComponent.ReceiveTick // (Event|Public|BlueprintEvent) // Param Size : 0x4, 0x7FF653FAFDF0
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason); // Function Engine.ActorComponent.ReceiveEndPlay // (Event|Public|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void ReceiveBeginPlay(); // Function Engine.ActorComponent.ReceiveBeginPlay // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void OnRep_IsActive(); // Function Engine.ActorComponent.OnRep_IsActive // (Native|Public) // Param Size : 0x0, 0x7FF654A144D0
	void K2_DestroyComponent(struct UObject* Object); // Function Engine.ActorComponent.K2_DestroyComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A7720
	bool IsComponentTickEnabled(); // Function Engine.ActorComponent.IsComponentTickEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A76F0
	bool IsBeingDestroyed(); // Function Engine.ActorComponent.IsBeingDestroyed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A76C0
	bool IsActive(); // Function Engine.ActorComponent.IsActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556A7690
	struct AActor* GetOwner(); // Function Engine.ActorComponent.GetOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556A7670
	float GetComponentTickInterval(); // Function Engine.ActorComponent.GetComponentTickInterval // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556A7640
	void Deactivate(); // Function Engine.ActorComponent.Deactivate // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A144B0
	bool ComponentHasTag(struct FName Tag); // Function Engine.ActorComponent.ComponentHasTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6556A7430
	void AddTickPrerequisiteComponent(struct UActorComponent* PrerequisiteComponent); // Function Engine.ActorComponent.AddTickPrerequisiteComponent // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A72E0
	void AddTickPrerequisiteActor(struct AActor* PrerequisiteActor); // Function Engine.ActorComponent.AddTickPrerequisiteActor // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A7250
	void Activate(bool bReset); // Function Engine.ActorComponent.Activate // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF654E50590
};

// Class Engine.SceneComponent
// Size : 0x1F0 (Inherited : 0xB0)
struct USceneComponent : UActorComponent {
	unsigned char UnknownData_B0[0x0008]; // 0xB0(0x8)
	struct FWeakObjectPtr<struct APhysicsVolume> PhysicsVolume; // 0xB8(0x8)
	struct USceneComponent* AttachParent; // 0xC0(0x8)
	struct FName AttachSocketName; // 0xC8(0x8)
	struct TArray<struct USceneComponent*> AttachChildren; // 0xD0(0x10)
	struct TArray<struct USceneComponent*> ClientAttachedChildren; // 0xE0(0x10)
	unsigned char UnknownData_F0[0x002C]; // 0xF0(0x2C)
	struct FVector RelativeLocation; // 0x11C(0xC)
	struct FRotator RelativeRotation; // 0x128(0xC)
	struct FVector RelativeScale3D; // 0x134(0xC)
	struct FVector ComponentVelocity; // 0x140(0xC)
	unsigned char bComponentToWorldUpdated : 1; // 0x14C(0x1)
	unsigned char UnknownData_14C_1 : 1; // 0x14C(0x1)
	unsigned char bAbsoluteLocation : 1; // 0x14C(0x1)
	unsigned char bAbsoluteRotation : 1; // 0x14C(0x1)
	unsigned char bAbsoluteScale : 1; // 0x14C(0x1)
	unsigned char bVisible : 1; // 0x14C(0x1)
	unsigned char bShouldBeAttached : 1; // 0x14C(0x1)
	unsigned char bShouldSnapLocationWhenAttached : 1; // 0x14C(0x1)
	unsigned char bShouldSnapRotationWhenAttached : 1; // 0x14D(0x1)
	unsigned char bShouldUpdatePhysicsVolume : 1; // 0x14D(0x1)
	unsigned char bHiddenInGame : 1; // 0x14D(0x1)
	unsigned char bBoundsChangeTriggersStreamingDataRebuild : 1; // 0x14D(0x1)
	unsigned char bUseAttachParentBound : 1; // 0x14D(0x1)
	unsigned char UnknownData_14D_5 : 3; // 0x14D(0x1)
	unsigned char UnknownData_14E[0x0001]; // 0x14E(0x1)
	enum class EComponentMobility Mobility; // 0x14F(0x1)
	enum class EDetailMode DetailMode; // 0x150(0x1)
	struct FMulticastSparseDelegate PhysicsVolumeChangedDelegate; // 0x151(0x1)
	unsigned char UnknownData_152[0x009E]; // 0x152(0x9E)

	void ToggleVisibility(bool bPropagateToChildren); // Function Engine.SceneComponent.ToggleVisibility // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557D7D40
	bool SnapTo(struct USceneComponent* InParent, struct FName InSocketName); // Function Engine.SceneComponent.SnapTo // (Final|Native|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF6557D7C80
	void SetWorldScale3D(struct FVector NewScale); // Function Engine.SceneComponent.SetWorldScale3D // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557D7AA0
	void SetVisibility(bool bNewVisibility, bool bPropagateToChildren); // Function Engine.SceneComponent.SetVisibility // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557D79D0
	void SetShouldUpdatePhysicsVolume(bool bInShouldUpdatePhysicsVolume); // Function Engine.SceneComponent.SetShouldUpdatePhysicsVolume // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557D7940
	void SetRelativeScale3D(struct FVector NewScale3D); // Function Engine.SceneComponent.SetRelativeScale3D // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557D78B0
	void SetMobility(enum class EComponentMobility NewMobility); // Function Engine.SceneComponent.SetMobility // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557D7830
	void SetHiddenInGame(bool NewHidden, bool bPropagateToChildren); // Function Engine.SceneComponent.SetHiddenInGame // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557D7760
	void SetAbsolute(bool bNewAbsoluteLocation, bool bNewAbsoluteRotation, bool bNewAbsoluteScale); // Function Engine.SceneComponent.SetAbsolute // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF6557D75C0
	void ResetRelativeTransform(); // Function Engine.SceneComponent.ResetRelativeTransform // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557D75A0
	void OnRep_Visibility(bool OldValue); // Function Engine.SceneComponent.OnRep_Visibility // (Final|Native|Private) // Param Size : 0x1, 0x7FF6557D73C0
	void OnRep_Transform(); // Function Engine.SceneComponent.OnRep_Transform // (Final|Native|Private) // Param Size : 0x0, 0x7FF6557D73A0
	void OnRep_AttachSocketName(); // Function Engine.SceneComponent.OnRep_AttachSocketName // (Final|Native|Private) // Param Size : 0x0, 0x7FF6557D7380
	void OnRep_AttachParent(); // Function Engine.SceneComponent.OnRep_AttachParent // (Final|Native|Private) // Param Size : 0x0, 0x7FF6557D7380
	void OnRep_AttachChildren(); // Function Engine.SceneComponent.OnRep_AttachChildren // (Final|Native|Private) // Param Size : 0x0, 0x7FF6557D7360
	void K2_SetWorldTransform(struct FTransform NewTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetWorldTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6557D7170
	void K2_SetWorldRotation(struct FRotator NewRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetWorldRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D6FC0
	void K2_SetWorldLocationAndRotation(struct FVector NewLocation, struct FRotator NewRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetWorldLocationAndRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xA5, 0x7FF6557D6DE0
	void K2_SetWorldLocation(struct FVector NewLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D6C30
	void K2_SetRelativeTransform(struct FTransform NewTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetRelativeTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6557D6A40
	void K2_SetRelativeRotation(struct FRotator NewRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetRelativeRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D6890
	void K2_SetRelativeLocationAndRotation(struct FVector NewLocation, struct FRotator NewRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetRelativeLocationAndRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xA5, 0x7FF6557D66B0
	void K2_SetRelativeLocation(struct FVector NewLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_SetRelativeLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D6500
	struct FTransform K2_GetComponentToWorld(); // Function Engine.SceneComponent.K2_GetComponentToWorld // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x30, 0x7FF6557D64A0
	struct FVector K2_GetComponentScale(); // Function Engine.SceneComponent.K2_GetComponentScale // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557D6460
	struct FRotator K2_GetComponentRotation(); // Function Engine.SceneComponent.K2_GetComponentRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557D6420
	struct FVector K2_GetComponentLocation(); // Function Engine.SceneComponent.K2_GetComponentLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557D63E0
	void K2_DetachFromComponent(enum class EDetachmentRule LocationRule, enum class EDetachmentRule RotationRule, enum class EDetachmentRule ScaleRule, bool bCallModify); // Function Engine.SceneComponent.K2_DetachFromComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557D6290
	bool K2_AttachToComponent(struct USceneComponent* Parent, struct FName SocketName, enum class EAttachmentRule LocationRule, enum class EAttachmentRule RotationRule, enum class EAttachmentRule ScaleRule, bool bWeldSimulatedBodies); // Function Engine.SceneComponent.K2_AttachToComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x15, 0x7FF6557D60E0
	bool K2_AttachTo(struct USceneComponent* InParent, struct FName InSocketName, enum class EAttachLocation AttachType, bool bWeldSimulatedBodies); // Function Engine.SceneComponent.K2_AttachTo // (Final|Native|Public|BlueprintCallable) // Param Size : 0x13, 0x7FF6557D5F90
	void K2_AddWorldTransform(struct FTransform DeltaTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddWorldTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6557D5DA0
	void K2_AddWorldRotation(struct FRotator DeltaRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddWorldRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D5BF0
	void K2_AddWorldOffset(struct FVector DeltaLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddWorldOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D5A40
	void K2_AddRelativeRotation(struct FRotator DeltaRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddRelativeRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D5890
	void K2_AddRelativeLocation(struct FVector DeltaLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddRelativeLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D56E0
	void K2_AddLocalTransform(struct FTransform DeltaTransform, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddLocalTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6557D54F0
	void K2_AddLocalRotation(struct FRotator DeltaRotation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddLocalRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D5340
	void K2_AddLocalOffset(struct FVector DeltaLocation, bool bSweep, struct FHitResult SweepHitResult, bool bTeleport); // Function Engine.SceneComponent.K2_AddLocalOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557D5190
	bool IsVisible(); // Function Engine.SceneComponent.IsVisible // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557D5160
	bool IsSimulatingPhysics(struct FName BoneName); // Function Engine.SceneComponent.IsSimulatingPhysics // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6557D50C0
	bool IsAnySimulatingPhysics(); // Function Engine.SceneComponent.IsAnySimulatingPhysics // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557D5090
	struct FVector GetUpVector(); // Function Engine.SceneComponent.GetUpVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557D4F00
	struct FTransform GetSocketTransform(struct FName InSocketName, enum class ERelativeTransformSpace TransformSpace); // Function Engine.SceneComponent.GetSocketTransform // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557D4E00
	struct FRotator GetSocketRotation(struct FName InSocketName); // Function Engine.SceneComponent.GetSocketRotation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557D4D50
	struct FQuat GetSocketQuaternion(struct FName InSocketName); // Function Engine.SceneComponent.GetSocketQuaternion // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x20, 0x7FF6557D4CB0
	struct FVector GetSocketLocation(struct FName InSocketName); // Function Engine.SceneComponent.GetSocketLocation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557D4C00
	bool GetShouldUpdatePhysicsVolume(); // Function Engine.SceneComponent.GetShouldUpdatePhysicsVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557D4BD0
	struct FVector GetRightVector(); // Function Engine.SceneComponent.GetRightVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557D4B90
	struct FTransform GetRelativeTransform(); // Function Engine.SceneComponent.GetRelativeTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x30, 0x7FF6557D4B30
	struct APhysicsVolume* GetPhysicsVolume(); // Function Engine.SceneComponent.GetPhysicsVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557D4B00
	void GetParentComponents(struct TArray<struct USceneComponent*> Parents); // Function Engine.SceneComponent.GetParentComponents // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557D4A50
	int32_t GetNumChildrenComponents(); // Function Engine.SceneComponent.GetNumChildrenComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557D4A20
	struct FVector GetForwardVector(); // Function Engine.SceneComponent.GetForwardVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557B1610
	struct FVector GetComponentVelocity(); // Function Engine.SceneComponent.GetComponentVelocity // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557D49E0
	void GetChildrenComponents(bool bIncludeAllDescendants, struct TArray<struct USceneComponent*> Children); // Function Engine.SceneComponent.GetChildrenComponents // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557D48E0
	struct USceneComponent* GetChildComponent(int32_t ChildIndex); // Function Engine.SceneComponent.GetChildComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557D4850
	struct FName GetAttachSocketName(); // Function Engine.SceneComponent.GetAttachSocketName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF654F9EC90
	struct USceneComponent* GetAttachParent(); // Function Engine.SceneComponent.GetAttachParent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557D4830
	struct TArray<struct FName> GetAllSocketNames(); // Function Engine.SceneComponent.GetAllSocketNames // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557D47B0
	bool DoesSocketExist(struct FName InSocketName); // Function Engine.SceneComponent.DoesSocketExist // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6557D4710
	void DetachFromParent(bool bMaintainWorldPosition, bool bCallModify); // Function Engine.SceneComponent.DetachFromParent // (Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557D4640
};

// Class Engine.AssetUserData
// Size : 0x28 (Inherited : 0x28)
struct UAssetUserData : UObject {
};

// Class Engine.DeveloperSettings
// Size : 0x38 (Inherited : 0x28)
struct UDeveloperSettings : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
};

// Class Engine.SaveGame
// Size : 0x28 (Inherited : 0x28)
struct USaveGame : UObject {
};

// Class Engine.PrimitiveComponent
// Size : 0x410 (Inherited : 0x1F0)
struct UPrimitiveComponent : USceneComponent {
	unsigned char UnknownData_1F0[0x0008]; // 0x1F0(0x8)
	float MinDrawDistance; // 0x1F8(0x4)
	float LDMaxDrawDistance; // 0x1FC(0x4)
	float CachedMaxDrawDistance; // 0x200(0x4)
	enum class ESceneDepthPriorityGroup DepthPriorityGroup; // 0x204(0x1)
	enum class ESceneDepthPriorityGroup ViewOwnerDepthPriorityGroup; // 0x205(0x1)
	enum class EIndirectLightingCacheQuality IndirectLightingCacheQuality; // 0x206(0x1)
	enum class ELightmapType LightmapType; // 0x207(0x1)
	unsigned char bUseMaxLODAsImposter : 1; // 0x208(0x1)
	unsigned char bBatchImpostersAsInstances : 1; // 0x208(0x1)
	unsigned char bNeverDistanceCull : 1; // 0x208(0x1)
	unsigned char UnknownData_208_3 : 4; // 0x208(0x1)
	unsigned char bAlwaysCreatePhysicsState : 1; // 0x208(0x1)
	unsigned char bGenerateOverlapEvents : 1; // 0x209(0x1)
	unsigned char bMultiBodyOverlap : 1; // 0x209(0x1)
	unsigned char bTraceComplexOnMove : 1; // 0x209(0x1)
	unsigned char bReturnMaterialOnMove : 1; // 0x209(0x1)
	unsigned char bUseViewOwnerDepthPriorityGroup : 1; // 0x209(0x1)
	unsigned char bAllowCullDistanceVolume : 1; // 0x209(0x1)
	unsigned char bHasMotionBlurVelocityMeshes : 1; // 0x209(0x1)
	unsigned char bVisibleInReflectionCaptures : 1; // 0x209(0x1)
	unsigned char bVisibleInRayTracing : 1; // 0x20A(0x1)
	unsigned char bRenderInMainPass : 1; // 0x20A(0x1)
	unsigned char bRenderInDepthPass : 1; // 0x20A(0x1)
	unsigned char bReceivesDecals : 1; // 0x20A(0x1)
	unsigned char bOwnerNoSee : 1; // 0x20A(0x1)
	unsigned char bOnlyOwnerSee : 1; // 0x20A(0x1)
	unsigned char bTreatAsBackgroundForOcclusion : 1; // 0x20A(0x1)
	unsigned char bUseAsOccluder : 1; // 0x20A(0x1)
	unsigned char bSelectable : 1; // 0x20B(0x1)
	unsigned char bForceMipStreaming : 1; // 0x20B(0x1)
	unsigned char bHasPerInstanceHitProxies : 1; // 0x20B(0x1)
	unsigned char CastShadow : 1; // 0x20B(0x1)
	unsigned char bAffectDynamicIndirectLighting : 1; // 0x20B(0x1)
	unsigned char bAffectDistanceFieldLighting : 1; // 0x20B(0x1)
	unsigned char bCastDynamicShadow : 1; // 0x20B(0x1)
	unsigned char bCastStaticShadow : 1; // 0x20B(0x1)
	unsigned char bCastVolumetricTranslucentShadow : 1; // 0x20C(0x1)
	unsigned char bSelfShadowOnly : 1; // 0x20C(0x1)
	unsigned char bCastFarShadow : 1; // 0x20C(0x1)
	unsigned char bCastInsetShadow : 1; // 0x20C(0x1)
	unsigned char bCastCinematicShadow : 1; // 0x20C(0x1)
	unsigned char bCastHiddenShadow : 1; // 0x20C(0x1)
	unsigned char bCastShadowAsTwoSided : 1; // 0x20C(0x1)
	unsigned char bLightAsIfStatic : 1; // 0x20C(0x1)
	unsigned char bLightAttachmentsAsGroup : 1; // 0x20D(0x1)
	unsigned char bExcludeFromLightAttachmentGroup : 1; // 0x20D(0x1)
	unsigned char bReceiveMobileCSMShadows : 1; // 0x20D(0x1)
	unsigned char bSingleSampleShadowFromStationaryLights : 1; // 0x20D(0x1)
	unsigned char bIgnoreRadialImpulse : 1; // 0x20D(0x1)
	unsigned char bIgnoreRadialForce : 1; // 0x20D(0x1)
	unsigned char bApplyImpulseOnDamage : 1; // 0x20D(0x1)
	unsigned char bReplicatePhysicsToAutonomousProxy : 1; // 0x20D(0x1)
	unsigned char bFillCollisionUnderneathForNavmesh : 1; // 0x20E(0x1)
	unsigned char AlwaysLoadOnClient : 1; // 0x20E(0x1)
	unsigned char AlwaysLoadOnServer : 1; // 0x20E(0x1)
	unsigned char bUseEditorCompositing : 1; // 0x20E(0x1)
	unsigned char bRenderCustomDepth : 1; // 0x20E(0x1)
	unsigned char bRenderOnTop : 1; // 0x20E(0x1)
	unsigned char UnknownData_20E_6 : 2; // 0x20E(0x1)
	enum class EHasCustomNavigableGeometry bHasCustomNavigableGeometry; // 0x20F(0x1)
	unsigned char UnknownData_210[0x0001]; // 0x210(0x1)
	enum class ECanBeCharacterBase CanCharacterStepUpOn; // 0x211(0x1)
	struct FLightingChannels LightingChannels; // 0x212(0x1)
	enum class ERendererStencilMask CustomDepthStencilWriteMask; // 0x213(0x1)
	int32_t CustomDepthStencilValue; // 0x214(0x4)
	struct FCustomPrimitiveData CustomPrimitiveData; // 0x218(0x10)
	struct FCustomPrimitiveData CustomPrimitiveDataInternal; // 0x228(0x10)
	int32_t TranslucencySortPriority; // 0x238(0x4)
	int32_t VisibilityId; // 0x23C(0x4)
	struct TArray<struct URuntimeVirtualTexture*> RuntimeVirtualTextures; // 0x240(0x10)
	int8_t VirtualTextureLodBias; // 0x250(0x1)
	int8_t VirtualTextureCullMips; // 0x251(0x1)
	int8_t VirtualTextureMinCoverage; // 0x252(0x1)
	enum class ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType; // 0x253(0x1)
	unsigned char UnknownData_254[0x0004]; // 0x254(0x4)
	float LpvBiasMultiplier; // 0x258(0x4)
	unsigned char UnknownData_25C[0x0008]; // 0x25C(0x8)
	float BoundsScale; // 0x264(0x4)
	unsigned char UnknownData_268[0x0010]; // 0x268(0x10)
	struct TArray<struct AActor*> MoveIgnoreActors; // 0x278(0x10)
	struct TArray<struct UPrimitiveComponent*> MoveIgnoreComponents; // 0x288(0x10)
	unsigned char UnknownData_298[0x0010]; // 0x298(0x10)
	struct FBodyInstance BodyInstance; // 0x2A8(0x130)
	struct FMulticastSparseDelegate OnComponentHit; // 0x3D8(0x1)
	struct FMulticastSparseDelegate OnComponentBeginOverlap; // 0x3D9(0x1)
	struct FMulticastSparseDelegate OnComponentEndOverlap; // 0x3DA(0x1)
	struct FMulticastSparseDelegate OnComponentWake; // 0x3DB(0x1)
	struct FMulticastSparseDelegate OnComponentSleep; // 0x3DC(0x1)
	unsigned char UnknownData_3DD[0x0001]; // 0x3DD(0x1)
	struct FMulticastSparseDelegate OnBeginCursorOver; // 0x3DE(0x1)
	struct FMulticastSparseDelegate OnEndCursorOver; // 0x3DF(0x1)
	struct FMulticastSparseDelegate OnClicked; // 0x3E0(0x1)
	struct FMulticastSparseDelegate OnReleased; // 0x3E1(0x1)
	struct FMulticastSparseDelegate OnInputTouchBegin; // 0x3E2(0x1)
	struct FMulticastSparseDelegate OnInputTouchEnd; // 0x3E3(0x1)
	struct FMulticastSparseDelegate OnInputTouchEnter; // 0x3E4(0x1)
	struct FMulticastSparseDelegate OnInputTouchLeave; // 0x3E5(0x1)
	unsigned char UnknownData_3E6[0x001A]; // 0x3E6(0x1A)
	struct UPrimitiveComponent* LODParentPrimitive; // 0x400(0x8)
	unsigned char UnknownData_408[0x0008]; // 0x408(0x8)

	bool WasRecentlyRendered(float Tolerance); // Function Engine.PrimitiveComponent.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x5, 0x7FF6557CA7D0
	void WakeRigidBody(struct FName BoneName); // Function Engine.PrimitiveComponent.WakeRigidBody // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557CA740
	void WakeAllRigidBodies(); // Function Engine.PrimitiveComponent.WakeAllRigidBodies // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556DA4A0
	void SetWalkableSlopeOverride(struct FWalkableSlopeOverride NewOverride); // Function Engine.PrimitiveComponent.SetWalkableSlopeOverride // (Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF6557CA690
	void SetUseCCD(bool InUseCCD, struct FName BoneName); // Function Engine.PrimitiveComponent.SetUseCCD // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557CA5C0
	void SetTranslucentSortPriority(int32_t NewTranslucentSortPriority); // Function Engine.PrimitiveComponent.SetTranslucentSortPriority // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557CA540
	void SetSingleSampleShadowFromStationaryLights(bool bNewSingleSampleShadowFromStationaryLights); // Function Engine.PrimitiveComponent.SetSingleSampleShadowFromStationaryLights // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CA330
	void SetSimulatePhysics(bool bSimulate); // Function Engine.PrimitiveComponent.SetSimulatePhysics // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CA2A0
	void SetRenderOnTop(bool bValue); // Function Engine.PrimitiveComponent.SetRenderOnTop // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CA210
	void SetRenderInMainPass(bool bValue); // Function Engine.PrimitiveComponent.SetRenderInMainPass // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CA180
	void SetRenderCustomDepth(bool bValue); // Function Engine.PrimitiveComponent.SetRenderCustomDepth // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CA0F0
	void SetReceivesDecals(bool bNewReceivesDecals); // Function Engine.PrimitiveComponent.SetReceivesDecals // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CA060
	void SetPhysMaterialOverride(struct UPhysicalMaterial* NewPhysMaterial); // Function Engine.PrimitiveComponent.SetPhysMaterialOverride // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557C99A0
	void SetPhysicsMaxAngularVelocityInRadians(float NewMaxAngVel, bool bAddToCurrent, struct FName BoneName); // Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInRadians // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C9ED0
	void SetPhysicsMaxAngularVelocityInDegrees(float NewMaxAngVel, bool bAddToCurrent, struct FName BoneName); // Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInDegrees // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C9DC0
	void SetPhysicsMaxAngularVelocity(float NewMaxAngVel, bool bAddToCurrent, struct FName BoneName); // Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C9DC0
	void SetPhysicsLinearVelocity(struct FVector NewVel, bool bAddToCurrent, struct FName BoneName); // Function Engine.PrimitiveComponent.SetPhysicsLinearVelocity // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C9CA0
	void SetPhysicsAngularVelocityInRadians(struct FVector NewAngVel, bool bAddToCurrent, struct FName BoneName); // Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInRadians // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C9B80
	void SetPhysicsAngularVelocityInDegrees(struct FVector NewAngVel, bool bAddToCurrent, struct FName BoneName); // Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInDegrees // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C9A30
	void SetPhysicsAngularVelocity(struct FVector NewAngVel, bool bAddToCurrent, struct FName BoneName); // Function Engine.PrimitiveComponent.SetPhysicsAngularVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C9A30
	void SetOwnerNoSee(bool bNewOwnerNoSee); // Function Engine.PrimitiveComponent.SetOwnerNoSee // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C9910
	void SetOnlyOwnerSee(bool bNewOnlyOwnerSee); // Function Engine.PrimitiveComponent.SetOnlyOwnerSee // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C9880
	void SetNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision); // Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C97F0
	void SetMaterialByName(struct FName MaterialSlotName, struct UMaterialInterface* Material); // Function Engine.PrimitiveComponent.SetMaterialByName // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C96A0
	void SetMaterial(int32_t ElementIndex, struct UMaterialInterface* Material); // Function Engine.PrimitiveComponent.SetMaterial // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C95D0
	void SetMassScale(struct FName BoneName, float InMassScale); // Function Engine.PrimitiveComponent.SetMassScale // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557C9500
	void SetMassOverrideInKg(struct FName BoneName, float MassInKg, bool bOverrideMass); // Function Engine.PrimitiveComponent.SetMassOverrideInKg // (Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6557C9400
	void SetLinearDamping(float InDamping); // Function Engine.PrimitiveComponent.SetLinearDamping // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C9380
	void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2); // Function Engine.PrimitiveComponent.SetLightingChannels // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF6557C9260
	void SetLightAttachmentsAsGroup(bool bInLightAttachmentsAsGroup); // Function Engine.PrimitiveComponent.SetLightAttachmentsAsGroup // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C90D0
	void SetGenerateOverlapEvents(bool bInGenerateOverlapEvents); // Function Engine.PrimitiveComponent.SetGenerateOverlapEvents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C9040
	void SetExcludeFromLightAttachmentGroup(bool bInExcludeFromLightAttachmentGroup); // Function Engine.PrimitiveComponent.SetExcludeFromLightAttachmentGroup // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C8FB0
	void SetEnableGravity(bool bGravityEnabled); // Function Engine.PrimitiveComponent.SetEnableGravity // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557BAF50
	void SetCustomPrimitiveDataVector4(int32_t DataIndex, struct FVector4 Value); // Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector4 // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557C8EE0
	void SetCustomPrimitiveDataVector3(int32_t DataIndex, struct FVector Value); // Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector3 // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C8E10
	void SetCustomPrimitiveDataVector2(int32_t DataIndex, struct FVector2D Value); // Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector2 // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557C8D50
	void SetCustomPrimitiveDataFloat(int32_t DataIndex, float Value); // Function Engine.PrimitiveComponent.SetCustomPrimitiveDataFloat // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557C8C80
	void SetCustomDepthStencilWriteMask(enum class ERendererStencilMask WriteMaskBit); // Function Engine.PrimitiveComponent.SetCustomDepthStencilWriteMask // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C8C00
	void SetCustomDepthStencilValue(int32_t Value); // Function Engine.PrimitiveComponent.SetCustomDepthStencilValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C8B80
	void SetCullDistance(float NewCullDistance); // Function Engine.PrimitiveComponent.SetCullDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C8B00
	void SetConstraintMode(enum class EDOFMode ConstraintMode); // Function Engine.PrimitiveComponent.SetConstraintMode // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C8A80
	void SetCollisionResponseToChannel(enum class ECollisionChannel Channel, enum class ECollisionResponse NewResponse); // Function Engine.PrimitiveComponent.SetCollisionResponseToChannel // (Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557C89C0
	void SetCollisionResponseToAllChannels(enum class ECollisionResponse NewResponse); // Function Engine.PrimitiveComponent.SetCollisionResponseToAllChannels // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C8940
	void SetCollisionProfileName(struct FName InCollisionProfileName, bool bUpdateOverlaps); // Function Engine.PrimitiveComponent.SetCollisionProfileName // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557C8870
	void SetCollisionObjectType(enum class ECollisionChannel Channel); // Function Engine.PrimitiveComponent.SetCollisionObjectType // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C87F0
	void SetCollisionEnabled(enum class ECollisionEnabled NewType); // Function Engine.PrimitiveComponent.SetCollisionEnabled // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C8770
	void SetCenterOfMass(struct FVector CenterOfMassOffset, struct FName BoneName); // Function Engine.PrimitiveComponent.SetCenterOfMass // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557C86A0
	void SetCastShadow(bool NewCastShadow); // Function Engine.PrimitiveComponent.SetCastShadow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C8610
	void SetCastInsetShadow(bool bInCastInsetShadow); // Function Engine.PrimitiveComponent.SetCastInsetShadow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557C8580
	void SetBoundsScale(float NewBoundsScale); // Function Engine.PrimitiveComponent.SetBoundsScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C8500
	void SetAngularDamping(float InDamping); // Function Engine.PrimitiveComponent.SetAngularDamping // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C7F10
	void SetAllUseCCD(bool InUseCCD); // Function Engine.PrimitiveComponent.SetAllUseCCD // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557BD9F0
	void SetAllPhysicsLinearVelocity(struct FVector NewVel, bool bAddToCurrent); // Function Engine.PrimitiveComponent.SetAllPhysicsLinearVelocity // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557C7E30
	void SetAllPhysicsAngularVelocityInRadians(struct FVector NewAngVel, bool bAddToCurrent); // Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInRadians // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557C7D50
	void SetAllPhysicsAngularVelocityInDegrees(struct FVector NewAngVel, bool bAddToCurrent); // Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInDegrees // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557C7C30
	void SetAllMassScale(float InMassScale); // Function Engine.PrimitiveComponent.SetAllMassScale // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C7BB0
	struct FVector ScaleByMomentOfInertia(struct FVector InputVector, struct FName BoneName); // Function Engine.PrimitiveComponent.ScaleByMomentOfInertia // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x20, 0x7FF6557C7AB0
	void PutRigidBodyToSleep(struct FName BoneName); // Function Engine.PrimitiveComponent.PutRigidBodyToSleep // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557C79B0
	bool K2_SphereTraceComponent(struct FVector TraceStart, struct FVector TraceEnd, float SphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector HitLocation, struct FVector HitNormal, struct FName BoneName, struct FHitResult OutHit); // Function Engine.PrimitiveComponent.K2_SphereTraceComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC9, 0x7FF6557C7640
	bool K2_SphereOverlapComponent(struct FVector InSphereCentre, float InSphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector HitLocation, struct FVector HitNormal, struct FName BoneName, struct FHitResult OutHit); // Function Engine.PrimitiveComponent.K2_SphereOverlapComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBD, 0x7FF6557C7310
	bool K2_LineTraceComponent(struct FVector TraceStart, struct FVector TraceEnd, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector HitLocation, struct FVector HitNormal, struct FName BoneName, struct FHitResult OutHit); // Function Engine.PrimitiveComponent.K2_LineTraceComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC5, 0x7FF6557C6FE0
	bool K2_IsQueryCollisionEnabled(); // Function Engine.PrimitiveComponent.K2_IsQueryCollisionEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557C6FA0
	bool K2_IsPhysicsCollisionEnabled(); // Function Engine.PrimitiveComponent.K2_IsPhysicsCollisionEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557C6F60
	bool K2_IsCollisionEnabled(); // Function Engine.PrimitiveComponent.K2_IsCollisionEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557C6F20
	bool K2_BoxOverlapComponent(struct FVector InBoxCentre, struct FBox InBox, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, struct FVector HitLocation, struct FVector HitNormal, struct FName BoneName, struct FHitResult OutHit); // Function Engine.PrimitiveComponent.K2_BoxOverlapComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xD5, 0x7FF6557C6BE0
	bool IsOverlappingComponent(struct UPrimitiveComponent* OtherComp); // Function Engine.PrimitiveComponent.IsOverlappingComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6557C6B50
	bool IsOverlappingActor(struct AActor* Other); // Function Engine.PrimitiveComponent.IsOverlappingActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6557C6AC0
	bool IsGravityEnabled(); // Function Engine.PrimitiveComponent.IsGravityEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557C6A90
	bool IsAnyRigidBodyAwake(); // Function Engine.PrimitiveComponent.IsAnyRigidBodyAwake // (Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6557C6A60
	void IgnoreComponentWhenMoving(struct UPrimitiveComponent* Component, bool bShouldIgnore); // Function Engine.PrimitiveComponent.IgnoreComponentWhenMoving // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557C6830
	void IgnoreActorWhenMoving(struct AActor* Actor, bool bShouldIgnore); // Function Engine.PrimitiveComponent.IgnoreActorWhenMoving // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557C6760
	struct FWalkableSlopeOverride GetWalkableSlopeOverride(); // Function Engine.PrimitiveComponent.GetWalkableSlopeOverride // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557C6730
	struct FVector GetPhysicsLinearVelocityAtPoint(struct FVector Point, struct FName BoneName); // Function Engine.PrimitiveComponent.GetPhysicsLinearVelocityAtPoint // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557C65C0
	struct FVector GetPhysicsLinearVelocity(struct FName BoneName); // Function Engine.PrimitiveComponent.GetPhysicsLinearVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557C6520
	struct FVector GetPhysicsAngularVelocityInRadians(struct FName BoneName); // Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInRadians // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557C6480
	struct FVector GetPhysicsAngularVelocityInDegrees(struct FName BoneName); // Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInDegrees // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557C63B0
	struct FVector GetPhysicsAngularVelocity(struct FName BoneName); // Function Engine.PrimitiveComponent.GetPhysicsAngularVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557C63B0
	void GetOverlappingComponents(struct TArray<struct UPrimitiveComponent*> OutOverlappingComponents); // Function Engine.PrimitiveComponent.GetOverlappingComponents // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557C6300
	void GetOverlappingActors(struct TArray<struct AActor*> OverlappingActors, class AActor* ClassFilter); // Function Engine.PrimitiveComponent.GetOverlappingActors // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557C6210
	int32_t GetNumMaterials(); // Function Engine.PrimitiveComponent.GetNumMaterials // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557032F0
	struct UMaterialInterface* GetMaterialFromCollisionFaceIndex(int32_t FaceIndex, int32_t SectionIndex); // Function Engine.PrimitiveComponent.GetMaterialFromCollisionFaceIndex // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557C6130
	struct UMaterialInterface* GetMaterial(int32_t ElementIndex); // Function Engine.PrimitiveComponent.GetMaterial // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557C6090
	float GetMassScale(struct FName BoneName); // Function Engine.PrimitiveComponent.GetMassScale // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557C5FF0
	float GetMass(); // Function Engine.PrimitiveComponent.GetMass // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557C5FB0
	float GetLinearDamping(); // Function Engine.PrimitiveComponent.GetLinearDamping // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557C5F70
	struct FVector GetInertiaTensor(struct FName BoneName); // Function Engine.PrimitiveComponent.GetInertiaTensor // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557C5EC0
	bool GetGenerateOverlapEvents(); // Function Engine.PrimitiveComponent.GetGenerateOverlapEvents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557C5E90
	enum class ECollisionResponse GetCollisionResponseToChannel(enum class ECollisionChannel Channel); // Function Engine.PrimitiveComponent.GetCollisionResponseToChannel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x2, 0x7FF6557C5E00
	struct FName GetCollisionProfileName(); // Function Engine.PrimitiveComponent.GetCollisionProfileName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557C5DC0
	enum class ECollisionChannel GetCollisionObjectType(); // Function Engine.PrimitiveComponent.GetCollisionObjectType // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557C5D90
	enum class ECollisionEnabled GetCollisionEnabled(); // Function Engine.PrimitiveComponent.GetCollisionEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557C5D60
	float GetClosestPointOnCollision(struct FVector Point, struct FVector OutPointOnBody, struct FName BoneName); // Function Engine.PrimitiveComponent.GetClosestPointOnCollision // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x24, 0x7FF6557C5C20
	struct FVector GetCenterOfMass(struct FName BoneName); // Function Engine.PrimitiveComponent.GetCenterOfMass // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557C5B80
	float GetAngularDamping(); // Function Engine.PrimitiveComponent.GetAngularDamping // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557C57D0
	struct UMaterialInstanceDynamic* CreateDynamicMaterialInstance(int32_t ElementIndex, struct UMaterialInterface* SourceMaterial, struct FName OptionalName); // Function Engine.PrimitiveComponent.CreateDynamicMaterialInstance // (Native|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF6557C56C0
	struct UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamicFromMaterial(int32_t ElementIndex, struct UMaterialInterface* Parent); // Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamicFromMaterial // (Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C55F0
	struct UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamic(int32_t ElementIndex); // Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamic // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C5550
	struct TArray<struct UPrimitiveComponent*> CopyArrayOfMoveIgnoreComponents(); // Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C5450
	struct TArray<struct AActor*> CopyArrayOfMoveIgnoreActors(); // Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreActors // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557C53D0
	void ClearMoveIgnoreComponents(); // Function Engine.PrimitiveComponent.ClearMoveIgnoreComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557C5380
	void ClearMoveIgnoreActors(); // Function Engine.PrimitiveComponent.ClearMoveIgnoreActors // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557C5360
	bool CanCharacterStepUp(struct APawn* Pawn); // Function Engine.PrimitiveComponent.CanCharacterStepUp // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6557C52C0
	void AddTorqueInRadians(struct FVector Torque, struct FName BoneName, bool bAccelChange); // Function Engine.PrimitiveComponent.AddTorqueInRadians // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C5050
	void AddTorqueInDegrees(struct FVector Torque, struct FName BoneName, bool bAccelChange); // Function Engine.PrimitiveComponent.AddTorqueInDegrees // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C5170
	void AddTorque(struct FVector Torque, struct FName BoneName, bool bAccelChange); // Function Engine.PrimitiveComponent.AddTorque // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C5050
	void AddRadialImpulse(struct FVector Origin, float Radius, float Strength, enum class ERadialImpulseFalloff Falloff, bool bVelChange); // Function Engine.PrimitiveComponent.AddRadialImpulse // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x16, 0x7FF6557C4E90
	void AddRadialForce(struct FVector Origin, float Radius, float Strength, enum class ERadialImpulseFalloff Falloff, bool bAccelChange); // Function Engine.PrimitiveComponent.AddRadialForce // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x16, 0x7FF6557C4CD0
	void AddImpulseAtLocation(struct FVector Impulse, struct FVector Location, struct FName BoneName); // Function Engine.PrimitiveComponent.AddImpulseAtLocation // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557C49C0
	void AddImpulse(struct FVector Impulse, struct FName BoneName, bool bVelChange); // Function Engine.PrimitiveComponent.AddImpulse // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C48A0
	void AddForceAtLocationLocal(struct FVector Force, struct FVector Location, struct FName BoneName); // Function Engine.PrimitiveComponent.AddForceAtLocationLocal // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557C4770
	void AddForceAtLocation(struct FVector Force, struct FVector Location, struct FName BoneName); // Function Engine.PrimitiveComponent.AddForceAtLocation // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557C4640
	void AddForce(struct FVector Force, struct FName BoneName, bool bAccelChange); // Function Engine.PrimitiveComponent.AddForce // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C4520
	void AddAngularImpulseInRadians(struct FVector Impulse, struct FName BoneName, bool bVelChange); // Function Engine.PrimitiveComponent.AddAngularImpulseInRadians // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C4400
	void AddAngularImpulseInDegrees(struct FVector Impulse, struct FName BoneName, bool bVelChange); // Function Engine.PrimitiveComponent.AddAngularImpulseInDegrees // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C42B0
	void AddAngularImpulse(struct FVector Impulse, struct FName BoneName, bool bVelChange); // Function Engine.PrimitiveComponent.AddAngularImpulse // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C4190
};

// Class Engine.ShapeComponent
// Size : 0x420 (Inherited : 0x410)
struct UShapeComponent : UPrimitiveComponent {
	struct UBodySetup* ShapeBodySetup; // 0x408(0x8)
	class UNavAreaBase* AreaClass; // 0x410(0x8)
	struct FColor ShapeColor; // 0x418(0x4)
	unsigned char bDrawOnlyIfSelected : 1; // 0x41C(0x1)
	unsigned char bShouldCollideWhenPlacing : 1; // 0x41C(0x1)
	unsigned char bDynamicObstacle : 1; // 0x41C(0x1)
};

// Class Engine.BoxComponent
// Size : 0x430 (Inherited : 0x420)
struct UBoxComponent : UShapeComponent {
	struct FVector BoxExtent; // 0x420(0xC)
	float LineThickness; // 0x42C(0x4)

	void SetBoxExtent(struct FVector InBoxExtent, bool bUpdateOverlaps); // Function Engine.BoxComponent.SetBoxExtent // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6556CF500
	struct FVector GetUnscaledBoxExtent(); // Function Engine.BoxComponent.GetUnscaledBoxExtent // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556CED60
	struct FVector GetScaledBoxExtent(); // Function Engine.BoxComponent.GetScaledBoxExtent // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556CECF0
};

// Class Engine.DataAsset
// Size : 0x30 (Inherited : 0x28)
struct UDataAsset : UObject {
	class UDataAsset* NativeClass; // 0x28(0x8)
};

// Class Engine.MeshComponent
// Size : 0x430 (Inherited : 0x410)
struct UMeshComponent : UPrimitiveComponent {
	struct TArray<struct UMaterialInterface*> OverrideMaterials; // 0x408(0x10)
	unsigned char UnknownData_420[0x0008]; // 0x420(0x8)
	unsigned char bEnableMaterialParameterCaching : 1; // 0x428(0x1)
	unsigned char UnknownData_428_1 : 7; // 0x428(0x1)
	unsigned char UnknownData_429[0x0007]; // 0x429(0x7)

	void SetVectorParameterValueOnMaterials(struct FName ParameterName, struct FVector ParameterValue); // Function Engine.MeshComponent.SetVectorParameterValueOnMaterials // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF655794160
	void SetScalarParameterValueOnMaterials(struct FName ParameterName, float ParameterValue); // Function Engine.MeshComponent.SetScalarParameterValueOnMaterials // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF655794090
	void PrestreamTextures(float Seconds, bool bPrioritizeCharacterTextures, int32_t CinematicTextureGroups); // Function Engine.MeshComponent.PrestreamTextures // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF655793E00
	bool IsMaterialSlotNameValid(struct FName MaterialSlotName); // Function Engine.MeshComponent.IsMaterialSlotNameValid // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF655793D60
	struct TArray<struct FName> GetMaterialSlotNames(); // Function Engine.MeshComponent.GetMaterialSlotNames // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF655793C60
	struct TArray<struct UMaterialInterface*> GetMaterials(); // Function Engine.MeshComponent.GetMaterials // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF655793CE0
	int32_t GetMaterialIndex(struct FName MaterialSlotName); // Function Engine.MeshComponent.GetMaterialIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF655793BC0
};

// Class Engine.SkinnedMeshComponent
// Size : 0x640 (Inherited : 0x430)
struct USkinnedMeshComponent : UMeshComponent {
	struct USkeletalMesh* SkeletalMesh; // 0x430(0x8)
	struct FWeakObjectPtr<struct USkinnedMeshComponent> MasterPoseComponent; // 0x438(0x8)
	struct TArray<enum class ESkinCacheUsage> SkinCacheUsage; // 0x440(0x10)
	unsigned char UnknownData_450[0x00F8]; // 0x450(0xF8)
	struct UPhysicsAsset* PhysicsAssetOverride; // 0x548(0x8)
	int32_t ForcedLodModel; // 0x550(0x4)
	int32_t MinLodModel; // 0x554(0x4)
	unsigned char UnknownData_558[0x0008]; // 0x558(0x8)
	float StreamingDistanceMultiplier; // 0x560(0x4)
	unsigned char UnknownData_564[0x000C]; // 0x564(0xC)
	struct TArray<struct FSkelMeshComponentLODInfo> LODInfo; // 0x570(0x10)
	unsigned char UnknownData_580[0x0024]; // 0x580(0x24)
	enum class EVisibilityBasedAnimTickOption VisibilityBasedAnimTickOption; // 0x5A4(0x1)
	unsigned char UnknownData_5A5[0x0001]; // 0x5A5(0x1)
	unsigned char UnknownData_5A6_0 : 2; // 0x5A6(0x1)
	unsigned char bOverrideMinLod : 1; // 0x5A6(0x1)
	unsigned char bUseBoundsFromMasterPoseComponent : 1; // 0x5A6(0x1)
	unsigned char bForceWireframe : 1; // 0x5A6(0x1)
	unsigned char bDisplayBones : 1; // 0x5A6(0x1)
	unsigned char bDisableMorphTarget : 1; // 0x5A6(0x1)
	unsigned char bHideSkin : 1; // 0x5A6(0x1)
	unsigned char bPerBoneMotionBlur : 1; // 0x5A7(0x1)
	unsigned char bComponentUseFixedSkelBounds : 1; // 0x5A7(0x1)
	unsigned char bConsiderAllBodiesForBounds : 1; // 0x5A7(0x1)
	unsigned char bSyncAttachParentLOD : 1; // 0x5A7(0x1)
	unsigned char bCanHighlightSelectedSections : 1; // 0x5A7(0x1)
	unsigned char bRecentlyRendered : 1; // 0x5A7(0x1)
	unsigned char bCastCapsuleDirectShadow : 1; // 0x5A7(0x1)
	unsigned char bCastCapsuleIndirectShadow : 1; // 0x5A7(0x1)
	unsigned char bCPUSkinning : 1; // 0x5A8(0x1)
	unsigned char bEnableUpdateRateOptimizations : 1; // 0x5A8(0x1)
	unsigned char bDisplayDebugUpdateRateOptimizations : 1; // 0x5A8(0x1)
	unsigned char bRenderStatic : 1; // 0x5A8(0x1)
	unsigned char bIgnoreMasterPoseComponentLOD : 1; // 0x5A8(0x1)
	unsigned char UnknownData_5A8_5 : 2; // 0x5A8(0x1)
	unsigned char bCachedLocalBoundsUpToDate : 1; // 0x5A8(0x1)
	unsigned char UnknownData_5A9_0 : 1; // 0x5A9(0x1)
	unsigned char bForceMeshObjectUpdate : 1; // 0x5A9(0x1)
	unsigned char UnknownData_5A9_2 : 6; // 0x5A9(0x1)
	unsigned char UnknownData_5AA[0x0002]; // 0x5AA(0x2)
	float CapsuleIndirectShadowMinVisibility; // 0x5AC(0x4)
	unsigned char UnknownData_5B0[0x0010]; // 0x5B0(0x10)
	struct FBoxSphereBounds CachedWorldSpaceBounds; // 0x5C0(0x1C)
	unsigned char UnknownData_5DC[0x0004]; // 0x5DC(0x4)
	struct FMatrix CachedWorldToLocalTransform; // 0x5E0(0x40)
	unsigned char UnknownData_620[0x0020]; // 0x620(0x20)

	void UnloadSkinWeightProfile(struct FName InProfileName); // Function Engine.SkinnedMeshComponent.UnloadSkinWeightProfile // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557E5970
	void UnHideBoneByName(struct FName BoneName); // Function Engine.SkinnedMeshComponent.UnHideBoneByName // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557E58F0
	void TransformToBoneSpace(struct FName BoneName, struct FVector InPosition, struct FRotator InRotation, struct FVector OutPosition, struct FRotator OutRotation); // Function Engine.SkinnedMeshComponent.TransformToBoneSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x38, 0x7FF6557E5730
	void TransformFromBoneSpace(struct FName BoneName, struct FVector InPosition, struct FRotator InRotation, struct FVector OutPosition, struct FRotator OutRotation); // Function Engine.SkinnedMeshComponent.TransformFromBoneSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x38, 0x7FF6557E5570
	void ShowMaterialSection(int32_t MaterialID, int32_t SectionIndex, bool bShow, int32_t LODIndex); // Function Engine.SkinnedMeshComponent.ShowMaterialSection // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E5430
	void ShowAllMaterialSections(int32_t LODIndex); // Function Engine.SkinnedMeshComponent.ShowAllMaterialSections // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E53B0
	void SetVertexColorOverride_LinearColor(int32_t LODIndex, struct TArray<struct FLinearColor> VertexColors); // Function Engine.SkinnedMeshComponent.SetVertexColorOverride_LinearColor // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF6557E52D0
	bool SetSkinWeightProfile(struct FName InProfileName); // Function Engine.SkinnedMeshComponent.SetSkinWeightProfile // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557E5240
	void SetSkinWeightOverride(int32_t LODIndex, struct TArray<struct FSkelMeshSkinWeightInfo> SkinWeights); // Function Engine.SkinnedMeshComponent.SetSkinWeightOverride // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF6557E5160
	void SetSkeletalMesh(struct USkeletalMesh* NewMesh, bool bReinitPose); // Function Engine.SkinnedMeshComponent.SetSkeletalMesh // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557E5090
	void SetRenderStatic(bool bNewValue); // Function Engine.SkinnedMeshComponent.SetRenderStatic // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557E5000
	void SetPhysicsAsset(struct UPhysicsAsset* NewPhysicsAsset, bool bForceReInit); // Function Engine.SkinnedMeshComponent.SetPhysicsAsset // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557E4F30
	void SetMinLOD(int32_t InNewMinLOD); // Function Engine.SkinnedMeshComponent.SetMinLOD // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E4EB0
	void SetMasterPoseComponent(struct USkinnedMeshComponent* NewMasterBoneComponent, bool bForceUpdate); // Function Engine.SkinnedMeshComponent.SetMasterPoseComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557E4DE0
	void SetForcedLOD(int32_t InNewForcedLOD); // Function Engine.SkinnedMeshComponent.SetForcedLOD // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E4D60
	void SetCastCapsuleIndirectShadow(bool bNewValue); // Function Engine.SkinnedMeshComponent.SetCastCapsuleIndirectShadow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557E4CD0
	void SetCastCapsuleDirectShadow(bool bNewValue); // Function Engine.SkinnedMeshComponent.SetCastCapsuleDirectShadow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557E4C40
	void SetCapsuleIndirectShadowMinVisibility(float NewValue); // Function Engine.SkinnedMeshComponent.SetCapsuleIndirectShadowMinVisibility // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E4BC0
	bool IsUsingSkinWeightProfile(); // Function Engine.SkinnedMeshComponent.IsUsingSkinWeightProfile // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557E4B90
	bool IsMaterialSectionShown(int32_t MaterialID, int32_t LODIndex); // Function Engine.SkinnedMeshComponent.IsMaterialSectionShown // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557E4AD0
	bool IsBoneHiddenByName(struct FName BoneName); // Function Engine.SkinnedMeshComponent.IsBoneHiddenByName // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557E4A40
	void HideBoneByName(struct FName BoneName, enum class EPhysBodyOp PhysBodyOption); // Function Engine.SkinnedMeshComponent.HideBoneByName // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557E4860
	bool GetTwistAndSwingAngleOfDeltaRotationFromRefPose(struct FName BoneName, float OutTwistAngle, float OutSwingAngle); // Function Engine.SkinnedMeshComponent.GetTwistAndSwingAngleOfDeltaRotationFromRefPose // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x11, 0x7FF6557E4740
	struct FName GetSocketBoneName(struct FName InSocketName); // Function Engine.SkinnedMeshComponent.GetSocketBoneName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557E4610
	struct FVector GetRefPosePosition(int32_t BoneIndex); // Function Engine.SkinnedMeshComponent.GetRefPosePosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E4570
	struct FName GetParentBone(struct FName BoneName); // Function Engine.SkinnedMeshComponent.GetParentBone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557E44E0
	int32_t GetNumLODs(); // Function Engine.SkinnedMeshComponent.GetNumLODs // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557E44B0
	int32_t GetNumBones(); // Function Engine.SkinnedMeshComponent.GetNumBones // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557E4480
	int32_t GetForcedLOD(); // Function Engine.SkinnedMeshComponent.GetForcedLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557E4450
	struct FTransform GetDeltaTransformFromRefPose(struct FName BoneName, struct FName BaseName); // Function Engine.SkinnedMeshComponent.GetDeltaTransformFromRefPose // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557E4350
	struct FName GetCurrentSkinWeightProfileName(); // Function Engine.SkinnedMeshComponent.GetCurrentSkinWeightProfileName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557E4330
	struct FName GetBoneName(int32_t BoneIndex); // Function Engine.SkinnedMeshComponent.GetBoneName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557E42A0
	int32_t GetBoneIndex(struct FName BoneName); // Function Engine.SkinnedMeshComponent.GetBoneIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557E4210
	struct FName FindClosestBone_K2(struct FVector TestLocation, struct FVector BoneLocation, float IgnoreScale, bool bRequirePhysicsAsset); // Function Engine.SkinnedMeshComponent.FindClosestBone_K2 // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x28, 0x7FF6557E4080
	void ClearVertexColorOverride(int32_t LODIndex); // Function Engine.SkinnedMeshComponent.ClearVertexColorOverride // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E4000
	void ClearSkinWeightProfile(); // Function Engine.SkinnedMeshComponent.ClearSkinWeightProfile // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557E3FE0
	void ClearSkinWeightOverride(int32_t LODIndex); // Function Engine.SkinnedMeshComponent.ClearSkinWeightOverride // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E3F60
	bool BoneIsChildOf(struct FName BoneName, struct FName ParentBoneName); // Function Engine.SkinnedMeshComponent.BoneIsChildOf // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x11, 0x7FF6557E3EA0
};

// Class Engine.SkeletalMesh
// Size : 0x380 (Inherited : 0x40)
struct USkeletalMesh : UStreamableRenderAsset {
	unsigned char UnknownData_40[0x0020]; // 0x40(0x20)
	struct USkeleton* Skeleton; // 0x60(0x8)
	struct FBoxSphereBounds ImportedBounds; // 0x68(0x1C)
	struct FBoxSphereBounds ExtendedBounds; // 0x84(0x1C)
	struct FVector PositiveBoundsExtension; // 0xA0(0xC)
	struct FVector NegativeBoundsExtension; // 0xAC(0xC)
	struct TArray<struct FSkeletalMaterial> Materials; // 0xB8(0x10)
	struct TArray<struct FBoneMirrorInfo> SkelMirrorTable; // 0xC8(0x10)
	struct TArray<struct FSkeletalMeshLODInfo> LODInfo; // 0xD8(0x10)
	unsigned char UnknownData_E8[0x0050]; // 0xE8(0x50)
	struct FPerPlatformInt MinLOD; // 0x138(0x4)
	struct FPerPlatformBool DisableBelowMinLodStripping; // 0x13C(0x1)
	enum class EAxis SkelMirrorAxis; // 0x13D(0x1)
	enum class EAxis SkelMirrorFlipAxis; // 0x13E(0x1)
	unsigned char bUseFullPrecisionUVs : 1; // 0x13F(0x1)
	unsigned char bUseHighPrecisionTangentBasis : 1; // 0x13F(0x1)
	unsigned char bHasBeenSimplified : 1; // 0x13F(0x1)
	unsigned char bHasVertexColors : 1; // 0x13F(0x1)
	unsigned char UnknownData_13F_4 : 1; // 0x13F(0x1)
	unsigned char bEnablePerPolyCollision : 1; // 0x13F(0x1)
	unsigned char UnknownData_13F_6 : 2; // 0x13F(0x1)
	struct UBodySetup* BodySetup; // 0x140(0x8)
	struct UPhysicsAsset* PhysicsAsset; // 0x148(0x8)
	struct UPhysicsAsset* ShadowPhysicsAsset; // 0x150(0x8)
	struct TArray<struct UNodeMappingContainer*> NodeMappingData; // 0x158(0x10)
	struct TArray<struct UMorphTarget*> MorphTargets; // 0x168(0x10)
	unsigned char UnknownData_178[0x0178]; // 0x178(0x178)
	class UAnimInstance* PostProcessAnimBlueprint; // 0x2F0(0x8)
	struct TArray<struct UClothingAssetBase*> MeshClothingAssets; // 0x2F8(0x10)
	struct FSkeletalMeshSamplingInfo SamplingInfo; // 0x308(0x30)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x338(0x10)
	unsigned char UnknownData_348[0x0008]; // 0x348(0x8)
	struct TArray<struct USkeletalMeshSocket*> Sockets; // 0x350(0x10)
	unsigned char UnknownData_360[0x0010]; // 0x360(0x10)
	struct TArray<struct FSkinWeightProfileInfo> SkinWeightProfiles; // 0x370(0x10)

	void SetLODSettings(struct USkeletalMeshLODSettings* InLODSettings); // Function Engine.SkeletalMesh.SetLODSettings // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6533415E0
	int32_t NumSockets(); // Function Engine.SkeletalMesh.NumSockets // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557DB810
	struct TArray<struct FString> K2_GetAllMorphTargetNames(); // Function Engine.SkeletalMesh.K2_GetAllMorphTargetNames // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DB730
	bool IsSectionUsingCloth(int32_t InSectionIndex, bool bCheckCorrespondingSections); // Function Engine.SkeletalMesh.IsSectionUsingCloth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x6, 0x7FF6557DB670
	struct USkeletalMeshSocket* GetSocketByIndex(int32_t Index); // Function Engine.SkeletalMesh.GetSocketByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DB5E0
	struct UNodeMappingContainer* GetNodeMappingContainer(struct UBlueprint* SourceAsset); // Function Engine.SkeletalMesh.GetNodeMappingContainer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DB550
	struct FBoxSphereBounds GetImportedBounds(); // Function Engine.SkeletalMesh.GetImportedBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557DB500
	struct FBoxSphereBounds GetBounds(); // Function Engine.SkeletalMesh.GetBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557DB4B0
	struct USkeletalMeshSocket* FindSocketInfo(struct FName InSocketName, struct FTransform OutTransform, int32_t OutBoneIndex, int32_t OutIndex); // Function Engine.SkeletalMesh.FindSocketInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x50, 0x7FF6557DB2E0
	struct USkeletalMeshSocket* FindSocketAndIndex(struct FName InSocketName, int32_t OutIndex); // Function Engine.SkeletalMesh.FindSocketAndIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557DB210
	struct USkeletalMeshSocket* FindSocket(struct FName InSocketName); // Function Engine.SkeletalMesh.FindSocket // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DB180
};

// Class Engine.Pawn
// Size : 0x280 (Inherited : 0x220)
struct APawn : AActor {
	unsigned char UnknownData_220[0x0008]; // 0x220(0x8)
	unsigned char bUseControllerRotationPitch : 1; // 0x228(0x1)
	unsigned char bUseControllerRotationYaw : 1; // 0x228(0x1)
	unsigned char bUseControllerRotationRoll : 1; // 0x228(0x1)
	unsigned char bCanAffectNavigationGeneration : 1; // 0x228(0x1)
	unsigned char UnknownData_228_4 : 4; // 0x228(0x1)
	unsigned char UnknownData_229[0x0003]; // 0x229(0x3)
	float BaseEyeHeight; // 0x22C(0x4)
	enum class EAutoReceiveInput AutoPossessPlayer; // 0x230(0x1)
	enum class EAutoPossessAI AutoPossessAI; // 0x231(0x1)
	enum class None RemoteViewPitch; // 0x232(0x1)
	unsigned char UnknownData_233[0x0005]; // 0x233(0x5)
	class AController* AIControllerClass; // 0x238(0x8)
	struct APlayerState* PlayerState; // 0x240(0x8)
	unsigned char UnknownData_248[0x0008]; // 0x248(0x8)
	struct AController* LastHitBy; // 0x250(0x8)
	struct AController* Controller; // 0x258(0x8)
	unsigned char UnknownData_260[0x0004]; // 0x260(0x4)
	struct FVector ControlInputVector; // 0x264(0xC)
	struct FVector LastControlInputVector; // 0x270(0xC)
	unsigned char UnknownData_27C[0x0004]; // 0x27C(0x4)

	void SpawnDefaultController(); // Function Engine.Pawn.SpawnDefaultController // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557AB4F0
	void SetCanAffectNavigationGeneration(bool bNewValue, bool bForceUpdate); // Function Engine.Pawn.SetCanAffectNavigationGeneration // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557AADB0
	void ReceiveUnpossessed(struct AController* OldController); // Function Engine.Pawn.ReceiveUnpossessed // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceivePossessed(struct AController* NewController); // Function Engine.Pawn.ReceivePossessed // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void PawnMakeNoise(float Loudness, struct FVector NoiseLocation, bool bUseNoiseMakerLocation, struct AActor* NoiseMaker); // Function Engine.Pawn.PawnMakeNoise // (Final|BlueprintAuthorityOnly|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557AA0D0
	void OnRep_PlayerState(); // Function Engine.Pawn.OnRep_PlayerState // (Native|Public) // Param Size : 0x0, 0x7FF65320BD60
	void OnRep_Controller(); // Function Engine.Pawn.OnRep_Controller // (Native|Public) // Param Size : 0x0, 0x7FF6557AA0B0
	void LaunchPawn(struct FVector LaunchVelocity, bool bXYOverride, bool bZOverride); // Function Engine.Pawn.LaunchPawn // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xE, 0x7FF6557A9F90
	struct FVector K2_GetMovementInputVector(); // Function Engine.Pawn.K2_GetMovementInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557A9E60
	bool IsPlayerControlled(); // Function Engine.Pawn.IsPlayerControlled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF655704330
	bool IsPawnControlled(); // Function Engine.Pawn.IsPawnControlled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557A9F60
	bool IsMoveInputIgnored(); // Function Engine.Pawn.IsMoveInputIgnored // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557A9F30
	bool IsLocallyControlled(); // Function Engine.Pawn.IsLocallyControlled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557A9F00
	bool IsControlled(); // Function Engine.Pawn.IsControlled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557A9ED0
	bool IsBotControlled(); // Function Engine.Pawn.IsBotControlled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557A9EA0
	struct FVector GetPendingMovementInputVector(); // Function Engine.Pawn.GetPendingMovementInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557A9E60
	struct FVector GetNavAgentLocation(); // Function Engine.Pawn.GetNavAgentLocation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557A9DE0
	struct UPawnMovementComponent* GetMovementComponent(); // Function Engine.Pawn.GetMovementComponent // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556E9730
	struct AActor* GetMovementBaseActor(struct APawn* Pawn); // Function Engine.Pawn.GetMovementBaseActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557A9CC0
	struct FVector GetLastMovementInputVector(); // Function Engine.Pawn.GetLastMovementInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557A9C80
	struct FRotator GetControlRotation(); // Function Engine.Pawn.GetControlRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557A9BF0
	struct AController* GetController(); // Function Engine.Pawn.GetController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557A9C30
	struct FRotator GetBaseAimRotation(); // Function Engine.Pawn.GetBaseAimRotation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557A9450
	void DetachFromControllerPendingDestroy(); // Function Engine.Pawn.DetachFromControllerPendingDestroy // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557A9260
	struct FVector ConsumeMovementInputVector(); // Function Engine.Pawn.ConsumeMovementInputVector // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557A9150
	void AddMovementInput(struct FVector WorldDirection, float ScaleValue, bool bForce); // Function Engine.Pawn.AddMovementInput // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x11, 0x7FF6557A8EE0
	void AddControllerYawInput(float Val); // Function Engine.Pawn.AddControllerYawInput // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557A8E60
	void AddControllerRollInput(float Val); // Function Engine.Pawn.AddControllerRollInput // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557A8DE0
	void AddControllerPitchInput(float Val); // Function Engine.Pawn.AddControllerPitchInput // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557A8D60
};

// Class Engine.Character
// Size : 0x4C0 (Inherited : 0x280)
struct ACharacter : APawn {
	struct USkeletalMeshComponent* Mesh; // 0x280(0x8)
	struct UCharacterMovementComponent* CharacterMovement; // 0x288(0x8)
	struct UCapsuleComponent* CapsuleComponent; // 0x290(0x8)
	struct FBasedMovementInfo BasedMovement; // 0x298(0x30)
	struct FBasedMovementInfo ReplicatedBasedMovement; // 0x2C8(0x30)
	float AnimRootMotionTranslationScale; // 0x2F8(0x4)
	struct FVector BaseTranslationOffset; // 0x2FC(0xC)
	unsigned char UnknownData_308[0x0008]; // 0x308(0x8)
	struct FQuat BaseRotationOffset; // 0x310(0x10)
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x320(0x4)
	float ReplayLastTransformUpdateTimeStamp; // 0x324(0x4)
	enum class None ReplicatedMovementMode; // 0x328(0x1)
	bool bInBaseReplication; // 0x329(0x1)
	unsigned char UnknownData_32A[0x0002]; // 0x32A(0x2)
	float CrouchedEyeHeight; // 0x32C(0x4)
	unsigned char bIsCrouched : 1; // 0x330(0x1)
	unsigned char bProxyIsJumpForceApplied : 1; // 0x330(0x1)
	unsigned char bPressedJump : 1; // 0x330(0x1)
	unsigned char bClientUpdating : 1; // 0x330(0x1)
	unsigned char bClientWasFalling : 1; // 0x330(0x1)
	unsigned char bClientResimulateRootMotion : 1; // 0x330(0x1)
	unsigned char bClientResimulateRootMotionSources : 1; // 0x330(0x1)
	unsigned char bSimGravityDisabled : 1; // 0x330(0x1)
	unsigned char bClientCheckEncroachmentOnNetUpdate : 1; // 0x331(0x1)
	unsigned char bServerMoveIgnoreRootMotion : 1; // 0x331(0x1)
	unsigned char bWasJumping : 1; // 0x331(0x1)
	unsigned char UnknownData_331_3 : 5; // 0x331(0x1)
	unsigned char UnknownData_332[0x0002]; // 0x332(0x2)
	float JumpKeyHoldTime; // 0x334(0x4)
	float JumpForceTimeRemaining; // 0x338(0x4)
	float ProxyJumpForceStartedTime; // 0x33C(0x4)
	float JumpMaxHoldTime; // 0x340(0x4)
	int32_t JumpMaxCount; // 0x344(0x4)
	int32_t JumpCurrentCount; // 0x348(0x4)
	unsigned char UnknownData_34C[0x0004]; // 0x34C(0x4)
	struct FMulticastInlineDelegate OnReachedJumpApex; // 0x350(0x10)
	unsigned char UnknownData_360[0x0010]; // 0x360(0x10)
	struct FMulticastInlineDelegate MovementModeChangedDelegate; // 0x370(0x10)
	struct FMulticastInlineDelegate OnCharacterMovementUpdated; // 0x380(0x10)
	struct FRootMotionSourceGroup SavedRootMotion; // 0x390(0x38)
	unsigned char UnknownData_3C8[0x0008]; // 0x3C8(0x8)
	struct FRootMotionMovementParams ClientRootMotionParams; // 0x3D0(0x40)
	struct TArray<struct FSimulatedRootMotionReplicatedMove> RootMotionRepMoves; // 0x410(0x10)
	struct FRepRootMotionMontage RepRootMotion; // 0x420(0x98)
	unsigned char UnknownData_4B8[0x0008]; // 0x4B8(0x8)

	void UnCrouch(bool bClientSimulation); // Function Engine.Character.UnCrouch // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556DC010
	void StopJumping(); // Function Engine.Character.StopJumping // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556DBFF0
	void StopAnimMontage(struct UAnimMontage* AnimMontage); // Function Engine.Character.StopAnimMontage // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556DBF60
	void ServerMoveOld(float OldTimeStamp, struct FVector_NetQuantize10 OldAccel, enum class None OldMoveFlags); // Function Engine.Character.ServerMoveOld // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x11, 0x7FF6556DBAC0
	void ServerMoveNoBase(float Timestamp, struct FVector_NetQuantize10 InAccel, struct FVector_NetQuantize100 ClientLoc, enum class None CompressedMoveFlags, enum class None ClientRoll, uint32_t View, enum class None ClientMovementMode); // Function Engine.Character.ServerMoveNoBase // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x25, 0x7FF6556DB840
	void ServerMoveDualNoBase(float TimeStamp0, struct FVector_NetQuantize10 InAccel0, enum class None PendingFlags, uint32_t View0, float Timestamp, struct FVector_NetQuantize10 InAccel, struct FVector_NetQuantize100 ClientLoc, enum class None NewFlags, enum class None ClientRoll, uint32_t View, enum class None ClientMovementMode); // Function Engine.Character.ServerMoveDualNoBase // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x3D, 0x7FF6556DB480
	void ServerMoveDualHybridRootMotion(float TimeStamp0, struct FVector_NetQuantize10 InAccel0, enum class None PendingFlags, uint32_t View0, float Timestamp, struct FVector_NetQuantize10 InAccel, struct FVector_NetQuantize100 ClientLoc, enum class None NewFlags, enum class None ClientRoll, uint32_t View, struct UPrimitiveComponent* ClientMovementBase, struct FName ClientBaseBoneName, enum class None ClientMovementMode); // Function Engine.Character.ServerMoveDualHybridRootMotion // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x51, 0x7FF6556DB030
	void ServerMoveDual(float TimeStamp0, struct FVector_NetQuantize10 InAccel0, enum class None PendingFlags, uint32_t View0, float Timestamp, struct FVector_NetQuantize10 InAccel, struct FVector_NetQuantize100 ClientLoc, enum class None NewFlags, enum class None ClientRoll, uint32_t View, struct UPrimitiveComponent* ClientMovementBase, struct FName ClientBaseBoneName, enum class None ClientMovementMode); // Function Engine.Character.ServerMoveDual // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x51, 0x7FF6556DABE0
	void ServerMove(float Timestamp, struct FVector_NetQuantize10 InAccel, struct FVector_NetQuantize100 ClientLoc, enum class None CompressedMoveFlags, enum class None ClientRoll, uint32_t View, struct UPrimitiveComponent* ClientMovementBase, struct FName ClientBaseBoneName, enum class None ClientMovementMode); // Function Engine.Character.ServerMove // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x39, 0x7FF6556DA8D0
	void RootMotionDebugClientPrintOnScreen(struct FString inString); // Function Engine.Character.RootMotionDebugClientPrintOnScreen // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x10, 0x7FF6556DA830
	float PlayAnimMontage(struct UAnimMontage* AnimMontage, float InPlayRate, struct FName StartSectionName); // Function Engine.Character.PlayAnimMontage // (Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6556DA6A0
	void OnWalkingOffLedge(struct FVector PreviousFloorImpactNormal, struct FVector PreviousFloorContactNormal, struct FVector PreviousLocation, float TimeDelta); // Function Engine.Character.OnWalkingOffLedge // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0x28, 0x7FF6556DA4E0
	void OnRep_RootMotion(); // Function Engine.Character.OnRep_RootMotion // (Final|Native|Public) // Param Size : 0x0, 0x7FF6556DA4C0
	void OnRep_ReplicatedBasedMovement(); // Function Engine.Character.OnRep_ReplicatedBasedMovement // (Native|Public) // Param Size : 0x0, 0x7FF6556DA4A0
	void OnRep_ReplayLastTransformUpdateTimeStamp(); // Function Engine.Character.OnRep_ReplayLastTransformUpdateTimeStamp // (Final|Native|Public) // Param Size : 0x0, 0x7FF6556DA480
	void OnRep_IsCrouched(); // Function Engine.Character.OnRep_IsCrouched // (Native|Public) // Param Size : 0x0, 0x7FF6556DA460
	void OnLaunched(struct FVector LaunchVelocity, bool bXYOverride, bool bZOverride); // Function Engine.Character.OnLaunched // (Event|Public|HasDefaults|BlueprintEvent) // Param Size : 0xE, 0x7FF653FAFDF0
	void OnLanded(struct FHitResult Hit); // Function Engine.Character.OnLanded // (Event|Public|HasOutParms|BlueprintEvent) // Param Size : 0x88, 0x7FF653FAFDF0
	void OnJumped(); // Function Engine.Character.OnJumped // (Native|Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF6556DA440
	void LaunchCharacter(struct FVector LaunchVelocity, bool bXYOverride, bool bZOverride); // Function Engine.Character.LaunchCharacter // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xE, 0x7FF6556DA320
	void K2_UpdateCustomMovement(float DeltaTime); // Function Engine.Character.K2_UpdateCustomMovement // (Event|Public|BlueprintEvent) // Param Size : 0x4, 0x7FF653FAFDF0
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust); // Function Engine.Character.K2_OnStartCrouch // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void K2_OnMovementModeChanged(enum class EMovementMode PrevMovementMode, enum class EMovementMode NewMovementMode, enum class None PrevCustomMode, enum class None NewCustomMode); // Function Engine.Character.K2_OnMovementModeChanged // (Event|Public|BlueprintEvent) // Param Size : 0x4, 0x7FF653FAFDF0
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust); // Function Engine.Character.K2_OnEndCrouch // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void Jump(); // Function Engine.Character.Jump // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556D8C60
	bool IsPlayingRootMotion(); // Function Engine.Character.IsPlayingRootMotion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556D8C30
	bool IsPlayingNetworkedRootMotionMontage(); // Function Engine.Character.IsPlayingNetworkedRootMotionMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556D8C00
	bool IsJumpProvidingForce(); // Function Engine.Character.IsJumpProvidingForce // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556D8BD0
	bool HasAnyRootMotion(); // Function Engine.Character.HasAnyRootMotion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556D8BA0
	struct UAnimMontage* GetCurrentMontage(); // Function Engine.Character.GetCurrentMontage // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556D8510
	struct FVector GetBaseTranslationOffset(); // Function Engine.Character.GetBaseTranslationOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556D84E0
	struct FRotator GetBaseRotationOffsetRotator(); // Function Engine.Character.GetBaseRotationOffsetRotator // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556D8490
	float GetAnimRootMotionTranslationScale(); // Function Engine.Character.GetAnimRootMotionTranslationScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D83C0
	void Crouch(bool bClientSimulation); // Function Engine.Character.Crouch // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556D8330
	void ClientVeryShortAdjustPosition(float Timestamp, struct FVector NewLoc, struct UPrimitiveComponent* NewBase, struct FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, enum class None ServerMovementMode); // Function Engine.Character.ClientVeryShortAdjustPosition // (Net|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x23, 0x7FF6556D7FE0
	void ClientCheatWalk(); // Function Engine.Character.ClientCheatWalk // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6556D7FC0
	void ClientCheatGhost(); // Function Engine.Character.ClientCheatGhost // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6556D7FA0
	void ClientCheatFly(); // Function Engine.Character.ClientCheatFly // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6556D7F80
	void ClientAdjustRootMotionSourcePosition(float Timestamp, struct FRootMotionSourceGroup ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, struct FVector ServerLoc, struct FVector_NetQuantizeNormal ServerRotation, float ServerVelZ, struct UPrimitiveComponent* ServerBase, struct FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, enum class None ServerMovementMode); // Function Engine.Character.ClientAdjustRootMotionSourcePosition // (Net|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x7B, 0x7FF6556D7AE0
	void ClientAdjustRootMotionPosition(float Timestamp, float ServerMontageTrackPosition, struct FVector ServerLoc, struct FVector_NetQuantizeNormal ServerRotation, float ServerVelZ, struct UPrimitiveComponent* ServerBase, struct FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, enum class None ServerMovementMode); // Function Engine.Character.ClientAdjustRootMotionPosition // (Net|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x3B, 0x7FF6556D77F0
	void ClientAdjustPosition(float Timestamp, struct FVector NewLoc, struct FVector NewVel, struct UPrimitiveComponent* NewBase, struct FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, enum class None ServerMovementMode); // Function Engine.Character.ClientAdjustPosition // (Net|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x33, 0x7FF6556D7580
	void ClientAckGoodMove(float Timestamp); // Function Engine.Character.ClientAckGoodMove // (Net|Native|Event|Public|NetClient) // Param Size : 0x4, 0x7FF6556D7500
	bool CanJumpInternal(); // Function Engine.Character.CanJumpInternal // (Native|Event|Protected|BlueprintEvent|Const) // Param Size : 0x1, 0x7FF6556D74D0
	bool CanJump(); // Function Engine.Character.CanJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556D74A0
	bool CanCrouch(); // Function Engine.Character.CanCrouch // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556D7470
	void CacheInitialMeshOffset(struct FVector MeshRelativeLocation, struct FRotator MeshRelativeRotation); // Function Engine.Character.CacheInitialMeshOffset // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6556D7390
};

// Class Engine.MovementComponent
// Size : 0xF0 (Inherited : 0xB0)
struct UMovementComponent : UActorComponent {
	struct USceneComponent* UpdatedComponent; // 0xB0(0x8)
	struct UPrimitiveComponent* UpdatedPrimitive; // 0xB8(0x8)
	unsigned char UnknownData_C0[0x0004]; // 0xC0(0x4)
	struct FVector Velocity; // 0xC4(0xC)
	struct FVector PlaneConstraintNormal; // 0xD0(0xC)
	struct FVector PlaneConstraintOrigin; // 0xDC(0xC)
	unsigned char bUpdateOnlyIfRendered : 1; // 0xE8(0x1)
	unsigned char bAutoUpdateTickRegistration : 1; // 0xE8(0x1)
	unsigned char bTickBeforeOwner : 1; // 0xE8(0x1)
	unsigned char bAutoRegisterUpdatedComponent : 1; // 0xE8(0x1)
	unsigned char bConstrainToPlane : 1; // 0xE8(0x1)
	unsigned char bSnapToPlaneAtStart : 1; // 0xE8(0x1)
	unsigned char bAutoRegisterPhysicsVolumeUpdates : 1; // 0xE8(0x1)
	unsigned char bComponentShouldUpdatePhysicsVolume : 1; // 0xE8(0x1)
	unsigned char UnknownData_E9[0x0002]; // 0xE9(0x2)
	enum class EPlaneConstraintAxisSetting PlaneConstraintAxisSetting; // 0xEB(0x1)
	unsigned char UnknownData_EC[0x0004]; // 0xEC(0x4)

	void StopMovementImmediately(); // Function Engine.MovementComponent.StopMovementImmediately // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556A37B0
	void SnapUpdatedComponentToPlane(); // Function Engine.MovementComponent.SnapUpdatedComponentToPlane // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655797E20
	void SetUpdatedComponent(struct USceneComponent* NewUpdatedComponent); // Function Engine.MovementComponent.SetUpdatedComponent // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A3EE0
	void SetPlaneConstraintOrigin(struct FVector PlaneOrigin); // Function Engine.MovementComponent.SetPlaneConstraintOrigin // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF655797D90
	void SetPlaneConstraintNormal(struct FVector PlaneNormal); // Function Engine.MovementComponent.SetPlaneConstraintNormal // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF655797D00
	void SetPlaneConstraintFromVectors(struct FVector Forward, struct FVector Up); // Function Engine.MovementComponent.SetPlaneConstraintFromVectors // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF655797C20
	void SetPlaneConstraintEnabled(bool bEnabled); // Function Engine.MovementComponent.SetPlaneConstraintEnabled // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655797B90
	void SetPlaneConstraintAxisSetting(enum class EPlaneConstraintAxisSetting NewAxisSetting); // Function Engine.MovementComponent.SetPlaneConstraintAxisSetting // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655797B10
	void PhysicsVolumeChanged(struct APhysicsVolume* NewVolume); // Function Engine.MovementComponent.PhysicsVolumeChanged // (Native|Public) // Param Size : 0x8, 0x7FF655797A10
	bool K2_MoveUpdatedComponent(struct FVector Delta, struct FRotator NewRotation, struct FHitResult OutHit, bool bSweep, bool bTeleport); // Function Engine.MovementComponent.K2_MoveUpdatedComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xA3, 0x7FF655797560
	float K2_GetModifiedMaxSpeed(); // Function Engine.MovementComponent.K2_GetModifiedMaxSpeed // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF655797520
	float K2_GetMaxSpeedModifier(); // Function Engine.MovementComponent.K2_GetMaxSpeedModifier // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557974E0
	bool IsExceedingMaxSpeed(float MaxSpeed); // Function Engine.MovementComponent.IsExceedingMaxSpeed // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x5, 0x7FF655797450
	struct FVector GetPlaneConstraintOrigin(); // Function Engine.MovementComponent.GetPlaneConstraintOrigin // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF655797410
	struct FVector GetPlaneConstraintNormal(); // Function Engine.MovementComponent.GetPlaneConstraintNormal // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557973D0
	enum class EPlaneConstraintAxisSetting GetPlaneConstraintAxisSetting(); // Function Engine.MovementComponent.GetPlaneConstraintAxisSetting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557973B0
	struct APhysicsVolume* GetPhysicsVolume(); // Function Engine.MovementComponent.GetPhysicsVolume // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF655797380
	float GetMaxSpeed(); // Function Engine.MovementComponent.GetMaxSpeed // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF655797340
	float GetGravityZ(); // Function Engine.MovementComponent.GetGravityZ // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF655797300
	struct FVector ConstrainNormalToPlane(struct FVector Normal); // Function Engine.MovementComponent.ConstrainNormalToPlane // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF655797250
	struct FVector ConstrainLocationToPlane(struct FVector Location); // Function Engine.MovementComponent.ConstrainLocationToPlane // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557971A0
	struct FVector ConstrainDirectionToPlane(struct FVector Direction); // Function Engine.MovementComponent.ConstrainDirectionToPlane // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557970F0
};

// Class Engine.NavMovementComponent
// Size : 0x130 (Inherited : 0xF0)
struct UNavMovementComponent : UMovementComponent {
	struct FNavAgentProperties NavAgentProps; // 0xF0(0x30)
	float FixedPathBrakingDistance; // 0x120(0x4)
	unsigned char bUpdateNavAgentWithOwnersCollision : 1; // 0x124(0x1)
	unsigned char bUseAccelerationForPaths : 1; // 0x124(0x1)
	unsigned char bUseFixedBrakingDistanceForPaths : 1; // 0x124(0x1)
	unsigned char UnknownData_124_3 : 5; // 0x124(0x1)
	struct FMovementProperties MovementState; // 0x125(0x1)
	unsigned char UnknownData_126[0x0002]; // 0x126(0x2)
	struct UObject* PathFollowingComp; // 0x128(0x8)

	void StopMovementKeepPathing(); // Function Engine.NavMovementComponent.StopMovementKeepPathing // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65579C120
	void StopActiveMovement(); // Function Engine.NavMovementComponent.StopActiveMovement // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65579C100
	bool IsSwimming(); // Function Engine.NavMovementComponent.IsSwimming // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65579BF30
	bool IsMovingOnGround(); // Function Engine.NavMovementComponent.IsMovingOnGround // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556DD850
	bool IsFlying(); // Function Engine.NavMovementComponent.IsFlying // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65579BF00
	bool IsFalling(); // Function Engine.NavMovementComponent.IsFalling // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65579BED0
	bool IsCrouching(); // Function Engine.NavMovementComponent.IsCrouching // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556BFE60
};

// Class Engine.PawnMovementComponent
// Size : 0x138 (Inherited : 0x130)
struct UPawnMovementComponent : UNavMovementComponent {
	struct APawn* PawnOwner; // 0x130(0x8)

	struct FVector K2_GetInputVector(); // Function Engine.PawnMovementComponent.K2_GetInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557ADDF0
	bool IsMoveInputIgnored(); // Function Engine.PawnMovementComponent.IsMoveInputIgnored // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557ADE60
	struct FVector GetPendingInputVector(); // Function Engine.PawnMovementComponent.GetPendingInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557ADDF0
	struct APawn* GetPawnOwner(); // Function Engine.PawnMovementComponent.GetPawnOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557ADDC0
	struct FVector GetLastInputVector(); // Function Engine.PawnMovementComponent.GetLastInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557ADD80
	struct FVector ConsumeInputVector(); // Function Engine.PawnMovementComponent.ConsumeInputVector // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557ADB10
	void AddInputVector(struct FVector WorldVector, bool bForce); // Function Engine.PawnMovementComponent.AddInputVector // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557AD6B0
};

// Class Engine.CharacterMovementComponent
// Size : 0x610 (Inherited : 0x138)
struct UCharacterMovementComponent : UPawnMovementComponent {
	unsigned char UnknownData_138[0x0010]; // 0x138(0x10)
	struct ACharacter* CharacterOwner; // 0x148(0x8)
	float GravityScale; // 0x150(0x4)
	float MaxStepHeight; // 0x154(0x4)
	float JumpZVelocity; // 0x158(0x4)
	float JumpOffJumpZFactor; // 0x15C(0x4)
	float WalkableFloorAngle; // 0x160(0x4)
	float WalkableFloorZ; // 0x164(0x4)
	enum class EMovementMode MovementMode; // 0x168(0x1)
	enum class None CustomMovementMode; // 0x169(0x1)
	enum class ENetworkSmoothingMode NetworkSmoothingMode; // 0x16A(0x1)
	unsigned char UnknownData_16B[0x0001]; // 0x16B(0x1)
	float GroundFriction; // 0x16C(0x4)
	unsigned char UnknownData_170[0x001C]; // 0x170(0x1C)
	float MaxWalkSpeed; // 0x18C(0x4)
	float MaxWalkSpeedCrouched; // 0x190(0x4)
	float MaxSwimSpeed; // 0x194(0x4)
	float MaxFlySpeed; // 0x198(0x4)
	float MaxCustomMovementSpeed; // 0x19C(0x4)
	float MaxAcceleration; // 0x1A0(0x4)
	float MinAnalogWalkSpeed; // 0x1A4(0x4)
	float BrakingFrictionFactor; // 0x1A8(0x4)
	float BrakingFriction; // 0x1AC(0x4)
	float BrakingSubStepTime; // 0x1B0(0x4)
	float BrakingDecelerationWalking; // 0x1B4(0x4)
	float BrakingDecelerationFalling; // 0x1B8(0x4)
	float BrakingDecelerationSwimming; // 0x1BC(0x4)
	float BrakingDecelerationFlying; // 0x1C0(0x4)
	float AirControl; // 0x1C4(0x4)
	float AirControlBoostMultiplier; // 0x1C8(0x4)
	float AirControlBoostVelocityThreshold; // 0x1CC(0x4)
	float FallingLateralFriction; // 0x1D0(0x4)
	float CrouchedHalfHeight; // 0x1D4(0x4)
	float Buoyancy; // 0x1D8(0x4)
	float PerchRadiusThreshold; // 0x1DC(0x4)
	float PerchAdditionalHeight; // 0x1E0(0x4)
	struct FRotator RotationRate; // 0x1E4(0xC)
	unsigned char bUseSeparateBrakingFriction : 1; // 0x1F0(0x1)
	unsigned char bApplyGravityWhileJumping : 1; // 0x1F0(0x1)
	unsigned char bUseControllerDesiredRotation : 1; // 0x1F0(0x1)
	unsigned char bOrientRotationToMovement : 1; // 0x1F0(0x1)
	unsigned char bSweepWhileNavWalking : 1; // 0x1F0(0x1)
	unsigned char UnknownData_1F0_5 : 1; // 0x1F0(0x1)
	unsigned char bMovementInProgress : 1; // 0x1F0(0x1)
	unsigned char bEnableScopedMovementUpdates : 1; // 0x1F0(0x1)
	unsigned char bEnableServerDualMoveScopedMovementUpdates : 1; // 0x1F1(0x1)
	unsigned char bForceMaxAccel : 1; // 0x1F1(0x1)
	unsigned char bRunPhysicsWithNoController : 1; // 0x1F1(0x1)
	unsigned char bForceNextFloorCheck : 1; // 0x1F1(0x1)
	unsigned char bShrinkProxyCapsule : 1; // 0x1F1(0x1)
	unsigned char bCanWalkOffLedges : 1; // 0x1F1(0x1)
	unsigned char bCanWalkOffLedgesWhenCrouching : 1; // 0x1F1(0x1)
	unsigned char UnknownData_1F2_0 : 1; // 0x1F2(0x1)
	unsigned char bNetworkSkipProxyPredictionOnNetUpdate : 1; // 0x1F2(0x1)
	unsigned char bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // 0x1F2(0x1)
	unsigned char bDeferUpdateMoveComponent : 1; // 0x1F2(0x1)
	unsigned char bEnablePhysicsInteraction : 1; // 0x1F2(0x1)
	unsigned char bTouchForceScaledToMass : 1; // 0x1F2(0x1)
	unsigned char bPushForceScaledToMass : 1; // 0x1F2(0x1)
	unsigned char bPushForceUsingZOffset : 1; // 0x1F2(0x1)
	unsigned char bScalePushForceToVelocity : 1; // 0x1F3(0x1)
	unsigned char UnknownData_1F3_1 : 7; // 0x1F3(0x1)
	unsigned char UnknownData_1F4[0x0004]; // 0x1F4(0x4)
	struct USceneComponent* DeferredUpdatedMoveComponent; // 0x1F8(0x8)
	float MaxOutOfWaterStepHeight; // 0x200(0x4)
	float OutofWaterZ; // 0x204(0x4)
	float Mass; // 0x208(0x4)
	float StandingDownwardForceScale; // 0x20C(0x4)
	float InitialPushForceFactor; // 0x210(0x4)
	float PushForceFactor; // 0x214(0x4)
	float PushForcePointZOffsetFactor; // 0x218(0x4)
	float TouchForceFactor; // 0x21C(0x4)
	float MinTouchForce; // 0x220(0x4)
	float MaxTouchForce; // 0x224(0x4)
	float RepulsionForce; // 0x228(0x4)
	struct FVector Acceleration; // 0x22C(0xC)
	unsigned char UnknownData_238[0x0008]; // 0x238(0x8)
	struct FQuat LastUpdateRotation; // 0x240(0x10)
	struct FVector LastUpdateLocation; // 0x250(0xC)
	struct FVector LastUpdateVelocity; // 0x25C(0xC)
	float ServerLastTransformUpdateTimeStamp; // 0x268(0x4)
	float ServerLastClientGoodMoveAckTime; // 0x26C(0x4)
	float ServerLastClientAdjustmentTime; // 0x270(0x4)
	struct FVector PendingImpulseToApply; // 0x274(0xC)
	struct FVector PendingForceToApply; // 0x280(0xC)
	float AnalogInputModifier; // 0x28C(0x4)
	unsigned char UnknownData_290[0x000C]; // 0x290(0xC)
	float MaxSimulationTimeStep; // 0x29C(0x4)
	int32_t MaxSimulationIterations; // 0x2A0(0x4)
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x2A4(0x4)
	float MaxDepenetrationWithGeometry; // 0x2A8(0x4)
	float MaxDepenetrationWithGeometryAsProxy; // 0x2AC(0x4)
	float MaxDepenetrationWithPawn; // 0x2B0(0x4)
	float MaxDepenetrationWithPawnAsProxy; // 0x2B4(0x4)
	float NetworkSimulatedSmoothLocationTime; // 0x2B8(0x4)
	float NetworkSimulatedSmoothRotationTime; // 0x2BC(0x4)
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x2C0(0x4)
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x2C4(0x4)
	float NetProxyShrinkRadius; // 0x2C8(0x4)
	float NetProxyShrinkHalfHeight; // 0x2CC(0x4)
	float NetworkMaxSmoothUpdateDistance; // 0x2D0(0x4)
	float NetworkNoSmoothUpdateDistance; // 0x2D4(0x4)
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x2D8(0x4)
	float NetworkMinTimeBetweenClientAdjustments; // 0x2DC(0x4)
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2E0(0x4)
	float NetworkLargeClientCorrectionDistance; // 0x2E4(0x4)
	float LedgeCheckThreshold; // 0x2E8(0x4)
	float JumpOutOfWaterPitch; // 0x2EC(0x4)
	struct FFindFloorResult CurrentFloor; // 0x2F0(0x94)
	enum class EMovementMode DefaultLandMovementMode; // 0x384(0x1)
	enum class EMovementMode DefaultWaterMovementMode; // 0x385(0x1)
	enum class EMovementMode GroundMovementMode; // 0x386(0x1)
	unsigned char bMaintainHorizontalGroundVelocity : 1; // 0x387(0x1)
	unsigned char bImpartBaseVelocityX : 1; // 0x387(0x1)
	unsigned char bImpartBaseVelocityY : 1; // 0x387(0x1)
	unsigned char bImpartBaseVelocityZ : 1; // 0x387(0x1)
	unsigned char bImpartBaseAngularVelocity : 1; // 0x387(0x1)
	unsigned char bJustTeleported : 1; // 0x387(0x1)
	unsigned char bNetworkUpdateReceived : 1; // 0x387(0x1)
	unsigned char bNetworkMovementModeChanged : 1; // 0x387(0x1)
	unsigned char bIgnoreClientMovementErrorChecksAndCorrection : 1; // 0x388(0x1)
	unsigned char bServerAcceptClientAuthoritativePosition : 1; // 0x388(0x1)
	unsigned char bNotifyApex : 1; // 0x388(0x1)
	unsigned char bCheatFlying : 1; // 0x388(0x1)
	unsigned char bWantsToCrouch : 1; // 0x388(0x1)
	unsigned char bCrouchMaintainsBaseLocation : 1; // 0x388(0x1)
	unsigned char bIgnoreBaseRotation : 1; // 0x388(0x1)
	unsigned char bFastAttachedMove : 1; // 0x388(0x1)
	unsigned char bAlwaysCheckFloor : 1; // 0x389(0x1)
	unsigned char bUseFlatBaseForFloorChecks : 1; // 0x389(0x1)
	unsigned char bPerformingJumpOff : 1; // 0x389(0x1)
	unsigned char bWantsToLeaveNavWalking : 1; // 0x389(0x1)
	unsigned char bUseRVOAvoidance : 1; // 0x389(0x1)
	unsigned char bRequestedMoveUseAcceleration : 1; // 0x389(0x1)
	unsigned char UnknownData_389_6 : 1; // 0x389(0x1)
	unsigned char bWasSimulatingRootMotion : 1; // 0x389(0x1)
	unsigned char bAllowPhysicsRotationDuringAnimRootMotion : 1; // 0x38A(0x1)
	unsigned char bHasRequestedVelocity : 1; // 0x38A(0x1)
	unsigned char bRequestedMoveWithMaxSpeed : 1; // 0x38A(0x1)
	unsigned char bWasAvoidanceUpdated : 1; // 0x38A(0x1)
	unsigned char UnknownData_38A_4 : 2; // 0x38A(0x1)
	unsigned char bProjectNavMeshWalking : 1; // 0x38A(0x1)
	unsigned char bProjectNavMeshOnBothWorldChannels : 1; // 0x38A(0x1)
	unsigned char UnknownData_38B[0x0011]; // 0x38B(0x11)
	float AvoidanceConsiderationRadius; // 0x39C(0x4)
	struct FVector RequestedVelocity; // 0x3A0(0xC)
	int32_t AvoidanceUID; // 0x3AC(0x4)
	struct FNavAvoidanceMask AvoidanceGroup; // 0x3B0(0x4)
	struct FNavAvoidanceMask GroupsToAvoid; // 0x3B4(0x4)
	struct FNavAvoidanceMask GroupsToIgnore; // 0x3B8(0x4)
	float AvoidanceWeight; // 0x3BC(0x4)
	struct FVector PendingLaunchVelocity; // 0x3C0(0xC)
	unsigned char UnknownData_3CC[0x00A4]; // 0x3CC(0xA4)
	float NavMeshProjectionInterval; // 0x470(0x4)
	float NavMeshProjectionTimer; // 0x474(0x4)
	float NavMeshProjectionInterpSpeed; // 0x478(0x4)
	float NavMeshProjectionHeightScaleUp; // 0x47C(0x4)
	float NavMeshProjectionHeightScaleDown; // 0x480(0x4)
	float NavWalkingFloorDistTolerance; // 0x484(0x4)
	struct FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction; // 0x488(0x30)
	unsigned char UnknownData_4B8[0x0018]; // 0x4B8(0x18)
	float MinTimeBetweenTimeStampResets; // 0x4D0(0x4)
	unsigned char UnknownData_4D4[0x0004]; // 0x4D4(0x4)
	struct FRootMotionSourceGroup CurrentRootMotion; // 0x4D8(0x38)
	unsigned char UnknownData_510[0x0090]; // 0x510(0x90)
	struct FRootMotionMovementParams RootMotionParams; // 0x5A0(0x40)
	struct FVector AnimRootMotionVelocity; // 0x5E0(0xC)
	unsigned char UnknownData_5EC[0x0024]; // 0x5EC(0x24)

	void SetWalkableFloorZ(float InWalkableFloorZ); // Function Engine.CharacterMovementComponent.SetWalkableFloorZ // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DE150
	void SetWalkableFloorAngle(float InWalkableFloorAngle); // Function Engine.CharacterMovementComponent.SetWalkableFloorAngle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DE0D0
	void SetMovementMode(enum class EMovementMode NewMovementMode, enum class None NewCustomMode); // Function Engine.CharacterMovementComponent.SetMovementMode // (Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6556DE010
	void SetGroupsToIgnoreMask(struct FNavAvoidanceMask GroupMask); // Function Engine.CharacterMovementComponent.SetGroupsToIgnoreMask // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DDF80
	void SetGroupsToIgnore(int32_t GroupFlags); // Function Engine.CharacterMovementComponent.SetGroupsToIgnore // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DDF00
	void SetGroupsToAvoidMask(struct FNavAvoidanceMask GroupMask); // Function Engine.CharacterMovementComponent.SetGroupsToAvoidMask // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DDE70
	void SetGroupsToAvoid(int32_t GroupFlags); // Function Engine.CharacterMovementComponent.SetGroupsToAvoid // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DDDF0
	void SetAvoidanceGroupMask(struct FNavAvoidanceMask GroupMask); // Function Engine.CharacterMovementComponent.SetAvoidanceGroupMask // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DDD60
	void SetAvoidanceGroup(int32_t GroupFlags); // Function Engine.CharacterMovementComponent.SetAvoidanceGroup // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556DDCE0
	void SetAvoidanceEnabled(bool bEnable); // Function Engine.CharacterMovementComponent.SetAvoidanceEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556DDC50
	float K2_GetWalkableFloorZ(); // Function Engine.CharacterMovementComponent.K2_GetWalkableFloorZ // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DDC20
	float K2_GetWalkableFloorAngle(); // Function Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DDBF0
	float K2_GetModifiedMaxAcceleration(); // Function Engine.CharacterMovementComponent.K2_GetModifiedMaxAcceleration // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DDBB0
	void K2_FindFloor(struct FVector CapsuleLocation, struct FFindFloorResult FloorResult); // Function Engine.CharacterMovementComponent.K2_FindFloor // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xA0, 0x7FF6556DDA70
	void K2_ComputeFloorDist(struct FVector CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, struct FFindFloorResult FloorResult); // Function Engine.CharacterMovementComponent.K2_ComputeFloorDist // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xAC, 0x7FF6556DD880
	bool IsWalking(); // Function Engine.CharacterMovementComponent.IsWalking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556DD850
	bool IsWalkable(struct FHitResult Hit); // Function Engine.CharacterMovementComponent.IsWalkable // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x89, 0x7FF6556DD780
	float GetValidPerchRadius(); // Function Engine.CharacterMovementComponent.GetValidPerchRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD750
	float GetPerchRadiusThreshold(); // Function Engine.CharacterMovementComponent.GetPerchRadiusThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD720
	struct UPrimitiveComponent* GetMovementBase(); // Function Engine.CharacterMovementComponent.GetMovementBase // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556DD6F0
	float GetMinAnalogSpeed(); // Function Engine.CharacterMovementComponent.GetMinAnalogSpeed // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD6B0
	float GetMaxJumpHeightWithJumpTime(); // Function Engine.CharacterMovementComponent.GetMaxJumpHeightWithJumpTime // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD670
	float GetMaxJumpHeight(); // Function Engine.CharacterMovementComponent.GetMaxJumpHeight // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD630
	float GetMaxBrakingDeceleration(); // Function Engine.CharacterMovementComponent.GetMaxBrakingDeceleration // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD5F0
	float GetMaxAcceleration(); // Function Engine.CharacterMovementComponent.GetMaxAcceleration // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD5B0
	struct FVector GetLastUpdateVelocity(); // Function Engine.CharacterMovementComponent.GetLastUpdateVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556DD580
	struct FRotator GetLastUpdateRotation(); // Function Engine.CharacterMovementComponent.GetLastUpdateRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556DD530
	struct FVector GetLastUpdateLocation(); // Function Engine.CharacterMovementComponent.GetLastUpdateLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556DD500
	struct FVector GetImpartedMovementBaseVelocity(); // Function Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556DD4C0
	struct FVector GetCurrentAcceleration(); // Function Engine.CharacterMovementComponent.GetCurrentAcceleration // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556DD480
	struct ACharacter* GetCharacterOwner(); // Function Engine.CharacterMovementComponent.GetCharacterOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556DD460
	float GetAnalogInputModifier(); // Function Engine.CharacterMovementComponent.GetAnalogInputModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556DD430
	void DisableMovement(); // Function Engine.CharacterMovementComponent.DisableMovement // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556DD410
	void ClearAccumulatedForces(); // Function Engine.CharacterMovementComponent.ClearAccumulatedForces // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556DD3F0
	void CapsuleTouched(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function Engine.CharacterMovementComponent.CapsuleTouched // (Native|Protected|HasOutParms) // Param Size : 0xA8, 0x7FF6556DD200
	void CalcVelocity(float DeltaTime, float Friction, bool bFluid, float BrakingDeceleration); // Function Engine.CharacterMovementComponent.CalcVelocity // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556DD0A0
	void AddImpulse(struct FVector Impulse, bool bVelocityChange); // Function Engine.CharacterMovementComponent.AddImpulse // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6556DCFC0
	void AddForce(struct FVector Force); // Function Engine.CharacterMovementComponent.AddForce // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6556DCF30
};

// Class Engine.Player
// Size : 0x48 (Inherited : 0x28)
struct UPlayer : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct APlayerController* PlayerController; // 0x30(0x8)
	int32_t CurrentNetSpeed; // 0x38(0x4)
	int32_t ConfiguredInternetSpeed; // 0x3C(0x4)
	int32_t ConfiguredLanSpeed; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
};

// Class Engine.NetConnection
// Size : 0x1A30 (Inherited : 0x48)
struct UNetConnection : UPlayer {
	struct TArray<struct UChildConnection*> Children; // 0x48(0x10)
	struct UNetDriver* Driver; // 0x58(0x8)
	class UPackageMap* PackageMapClass; // 0x60(0x8)
	struct UPackageMap* PackageMap; // 0x68(0x8)
	struct TArray<struct UChannel*> OpenChannels; // 0x70(0x10)
	struct TArray<struct AActor*> SentTemporaries; // 0x80(0x10)
	struct AActor* ViewTarget; // 0x90(0x8)
	struct AActor* OwningActor; // 0x98(0x8)
	int32_t MaxPacket; // 0xA0(0x4)
	unsigned char InternalAck : 1; // 0xA4(0x1)
	unsigned char UnknownData_A4_1 : 7; // 0xA4(0x1)
	unsigned char UnknownData_A5[0x00BB]; // 0xA5(0xBB)
	struct FUniqueNetIdRepl PlayerId; // 0x160(0x28)
	unsigned char UnknownData_188[0x0048]; // 0x188(0x48)
	double LastReceiveTime; // 0x1D0(0x8)
	unsigned char UnknownData_1D8[0x1338]; // 0x1D8(0x1338)
	struct TArray<struct UChannel*> ChannelsToTick; // 0x1510(0x10)
	unsigned char UnknownData_1520[0x0510]; // 0x1520(0x510)
};

// Class Engine.NetDriver
// Size : 0x748 (Inherited : 0x28)
struct UNetDriver : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct FString NetConnectionClassName; // 0x30(0x10)
	struct FString ReplicationDriverClassName; // 0x40(0x10)
	int32_t MaxDownloadSize; // 0x50(0x4)
	unsigned char bClampListenServerTickRate : 1; // 0x54(0x1)
	unsigned char UnknownData_54_1 : 7; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
	int32_t NetServerMaxTickRate; // 0x58(0x4)
	int32_t MaxNetTickRate; // 0x5C(0x4)
	int32_t MaxInternetClientRate; // 0x60(0x4)
	int32_t MaxClientRate; // 0x64(0x4)
	float ServerTravelPause; // 0x68(0x4)
	float SpawnPrioritySeconds; // 0x6C(0x4)
	float RelevantTimeout; // 0x70(0x4)
	float KeepAliveTime; // 0x74(0x4)
	float InitialConnectTimeout; // 0x78(0x4)
	float ConnectionTimeout; // 0x7C(0x4)
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80(0x4)
	bool bNoTimeouts; // 0x84(0x1)
	bool bNeverApplyNetworkEmulationSettings; // 0x85(0x1)
	unsigned char UnknownData_86[0x0002]; // 0x86(0x2)
	struct UNetConnection* ServerConnection; // 0x88(0x8)
	struct TArray<struct UNetConnection*> ClientConnections; // 0x90(0x10)
	unsigned char UnknownData_A0[0x0060]; // 0xA0(0x60)
	int32_t RecentlyDisconnectedTrackingTime; // 0x100(0x4)
	unsigned char UnknownData_104[0x003C]; // 0x104(0x3C)
	struct UWorld* World; // 0x140(0x8)
	struct UPackage* WorldPackage; // 0x148(0x8)
	unsigned char UnknownData_150[0x0020]; // 0x150(0x20)
	class UObject* NetConnectionClass; // 0x170(0x8)
	class UObject* ReplicationDriverClass; // 0x178(0x8)
	unsigned char UnknownData_180[0x0010]; // 0x180(0x10)
	struct FName NetDriverName; // 0x190(0x8)
	struct TArray<struct FChannelDefinition> ChannelDefinitions; // 0x198(0x10)
	struct TMap<struct FName, struct FChannelDefinition> ChannelDefinitionMap; // 0x1A8(0x50)
	struct TArray<struct UChannel*> ActorChannelPool; // 0x1F8(0x10)
	unsigned char UnknownData_208[0x0008]; // 0x208(0x8)
	float Time; // 0x210(0x4)
	unsigned char UnknownData_214[0x04D4]; // 0x214(0x4D4)
	struct UReplicationDriver* ReplicationDriver; // 0x6E8(0x8)
	unsigned char UnknownData_6F0[0x0058]; // 0x6F0(0x58)
};

// Class Engine.BlueprintAsyncActionBase
// Size : 0x30 (Inherited : 0x28)
struct UBlueprintAsyncActionBase : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)

	void Activate(); // Function Engine.BlueprintAsyncActionBase.Activate // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A144D0
};

// Class Engine.OnlineBlueprintCallProxyBase
// Size : 0x30 (Inherited : 0x30)
struct UOnlineBlueprintCallProxyBase : UBlueprintAsyncActionBase {
};

// Class Engine.OnlineEngineInterface
// Size : 0x28 (Inherited : 0x28)
struct UOnlineEngineInterface : UObject {
};

// Class Engine.OnlineSession
// Size : 0x28 (Inherited : 0x28)
struct UOnlineSession : UObject {
};

// Class Engine.Brush
// Size : 0x258 (Inherited : 0x220)
struct ABrush : AActor {
	enum class EBrushType BrushType; // 0x220(0x1)
	unsigned char UnknownData_221[0x0003]; // 0x221(0x3)
	struct FColor BrushColor; // 0x224(0x4)
	int32_t PolyFlags; // 0x228(0x4)
	unsigned char bColored : 1; // 0x22C(0x1)
	unsigned char bSolidWhenSelected : 1; // 0x22C(0x1)
	unsigned char bPlaceableFromClassBrowser : 1; // 0x22C(0x1)
	unsigned char bNotForClientOrServer : 1; // 0x22C(0x1)
	unsigned char UnknownData_22C_4 : 4; // 0x22C(0x1)
	unsigned char UnknownData_22D[0x0003]; // 0x22D(0x3)
	struct UModel* Brush; // 0x230(0x8)
	struct UBrushComponent* BrushComponent; // 0x238(0x8)
	unsigned char bInManipulation : 1; // 0x240(0x1)
	unsigned char UnknownData_240_1 : 7; // 0x240(0x1)
	unsigned char UnknownData_241[0x0007]; // 0x241(0x7)
	struct TArray<struct FGeomSelection> SavedSelections; // 0x248(0x10)
};

// Class Engine.Volume
// Size : 0x258 (Inherited : 0x258)
struct AVolume : ABrush {
};

// Class Engine.World
// Size : 0x710 (Inherited : 0x28)
struct UWorld : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct ULevel* PersistentLevel; // 0x30(0x8)
	struct UNetDriver* NetDriver; // 0x38(0x8)
	struct ULineBatchComponent* LineBatcher; // 0x40(0x8)
	struct ULineBatchComponent* PersistentLineBatcher; // 0x48(0x8)
	struct ULineBatchComponent* ForegroundLineBatcher; // 0x50(0x8)
	struct AGameNetworkManager* NetworkManager; // 0x58(0x8)
	struct UPhysicsCollisionHandler* PhysicsCollisionHandler; // 0x60(0x8)
	struct TArray<struct UObject*> ExtraReferencedObjects; // 0x68(0x10)
	struct TArray<struct UObject*> PerModuleDataObjects; // 0x78(0x10)
	struct TArray<struct AActor*> LevelSequenceActors; // 0x88(0x10)
	struct TArray<struct ULevelStreaming*> StreamingLevels; // 0x98(0x10)
	struct FStreamingLevelsToConsider StreamingLevelsToConsider; // 0xA8(0x28)
	struct FString StreamingLevelsPrefix; // 0xD0(0x10)
	struct ULevel* CurrentLevelPendingVisibility; // 0xE0(0x8)
	struct ULevel* CurrentLevelPendingInvisibility; // 0xE8(0x8)
	struct UDemoNetDriver* DemoNetDriver; // 0xF0(0x8)
	struct AParticleEventManager* MyParticleEventManager; // 0xF8(0x8)
	struct APhysicsVolume* DefaultPhysicsVolume; // 0x100(0x8)
	unsigned char UnknownData_108[0x0016]; // 0x108(0x16)
	unsigned char UnknownData_11E_0 : 2; // 0x11E(0x1)
	unsigned char bAreConstraintsDirty : 1; // 0x11E(0x1)
	unsigned char UnknownData_11E_3 : 5; // 0x11E(0x1)
	unsigned char UnknownData_11F[0x0001]; // 0x11F(0x1)
	struct UNavigationSystemBase* NavigationSystem; // 0x120(0x8)
	struct AGameModeBase* AuthorityGameMode; // 0x128(0x8)
	struct AGameStateBase* GameState; // 0x130(0x8)
	struct UAISystemBase* AISystem; // 0x138(0x8)
	struct UAvoidanceManager* AvoidanceManager; // 0x140(0x8)
	struct TArray<struct ULevel*> Levels; // 0x148(0x10)
	struct TArray<struct FLevelCollection> LevelCollections; // 0x158(0x10)
	unsigned char UnknownData_168[0x0020]; // 0x168(0x20)
	struct UGameInstance* OwningGameInstance; // 0x188(0x8)
	struct TArray<struct UMaterialParameterCollectionInstance*> ParameterCollectionInstances; // 0x190(0x10)
	struct UCanvas* CanvasForRenderingToTarget; // 0x1A0(0x8)
	struct UCanvas* CanvasForDrawMaterialToRenderTarget; // 0x1A8(0x8)
	unsigned char UnknownData_1B0[0x0050]; // 0x1B0(0x50)
	struct TArray<struct UActorComponent*> ComponentsThatNeedEndOfFrameUpdate; // 0x200(0x10)
	struct TArray<struct UActorComponent*> ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x210(0x10)
	unsigned char UnknownData_220[0x0340]; // 0x220(0x340)
	struct UWorldComposition* WorldComposition; // 0x560(0x8)
	unsigned char UnknownData_568[0x0088]; // 0x568(0x88)
	struct FWorldPSCPool PSCPool; // 0x5F0(0x58)
	unsigned char UnknownData_648[0x00C8]; // 0x648(0xC8)

	struct AWorldSettings* K2_GetWorldSettings(); // Function Engine.World.K2_GetWorldSettings // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65580A830
	void HandleTimelineScrubbed(); // Function Engine.World.HandleTimelineScrubbed // (Final|Native|Public) // Param Size : 0x0, 0x7FF65580A810
};

// Class Engine.InterpTrack
// Size : 0x70 (Inherited : 0x28)
struct UInterpTrack : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
	struct TArray<struct UInterpTrack*> SubTracks; // 0x38(0x10)
	class UInterpTrackInst* TrackInstClass; // 0x48(0x8)
	enum class ETrackActiveCondition ActiveCondition; // 0x50(0x1)
	unsigned char UnknownData_51[0x0007]; // 0x51(0x7)
	struct FString TrackTitle; // 0x58(0x10)
	unsigned char bOnePerGroup : 1; // 0x68(0x1)
	unsigned char bDirGroupOnly : 1; // 0x68(0x1)
	unsigned char bDisableTrack : 1; // 0x68(0x1)
	unsigned char bIsSelected : 1; // 0x68(0x1)
	unsigned char bIsAnimControlTrack : 1; // 0x68(0x1)
	unsigned char bSubTrackOnly : 1; // 0x68(0x1)
	unsigned char bVisible : 1; // 0x68(0x1)
	unsigned char bIsRecording : 1; // 0x68(0x1)
	unsigned char UnknownData_69[0x0007]; // 0x69(0x7)
};

// Class Engine.InterpTrackVectorBase
// Size : 0x90 (Inherited : 0x70)
struct UInterpTrackVectorBase : UInterpTrack {
	struct FInterpCurveVector VectorTrack; // 0x70(0x18)
	float CurveTension; // 0x88(0x4)
	unsigned char UnknownData_8C[0x0004]; // 0x8C(0x4)
};

// Class Engine.InterpTrackFloatBase
// Size : 0x90 (Inherited : 0x70)
struct UInterpTrackFloatBase : UInterpTrack {
	struct FInterpCurveFloat FloatTrack; // 0x70(0x18)
	float CurveTension; // 0x88(0x4)
	unsigned char UnknownData_8C[0x0004]; // 0x8C(0x4)
};

// Class Engine.InterpTrackInst
// Size : 0x28 (Inherited : 0x28)
struct UInterpTrackInst : UObject {
};

// Class Engine.MaterialExpression
// Size : 0x40 (Inherited : 0x28)
struct UMaterialExpression : UObject {
	struct UMaterial* Material; // 0x28(0x8)
	struct UMaterialFunction* Function; // 0x30(0x8)
	unsigned char bIsParameterExpression : 1; // 0x38(0x1)
	unsigned char UnknownData_38_1 : 7; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
};

// Class Engine.MaterialExpressionTextureBase
// Size : 0x50 (Inherited : 0x40)
struct UMaterialExpressionTextureBase : UMaterialExpression {
	struct UTexture* Texture; // 0x40(0x8)
	enum class EMaterialSamplerType SamplerType; // 0x48(0x1)
	unsigned char IsDefaultMeshpaintTexture : 1; // 0x49(0x1)
	unsigned char UnknownData_49_1 : 7; // 0x49(0x1)
	unsigned char UnknownData_4A[0x0006]; // 0x4A(0x6)
};

// Class Engine.MaterialExpressionTextureSample
// Size : 0xD0 (Inherited : 0x50)
struct UMaterialExpressionTextureSample : UMaterialExpressionTextureBase {
	struct FExpressionInput Coordinates; // 0x50(0xC)
	unsigned char UnknownData_5C[0x0008]; // 0x5C(0x8)
	struct FExpressionInput TextureObject; // 0x64(0xC)
	unsigned char UnknownData_70[0x0008]; // 0x70(0x8)
	struct FExpressionInput MipValue; // 0x78(0xC)
	unsigned char UnknownData_84[0x0008]; // 0x84(0x8)
	struct FExpressionInput CoordinatesDX; // 0x8C(0xC)
	unsigned char UnknownData_98[0x0008]; // 0x98(0x8)
	struct FExpressionInput CoordinatesDY; // 0xA0(0xC)
	unsigned char UnknownData_AC[0x0008]; // 0xAC(0x8)
	struct FExpressionInput AutomaticViewMipBiasValue; // 0xB4(0xC)
	unsigned char UnknownData_C0[0x0008]; // 0xC0(0x8)
	enum class ETextureMipValueMode MipValueMode; // 0xC8(0x1)
	enum class ESamplerSourceMode SamplerSource; // 0xC9(0x1)
	unsigned char AutomaticViewMipBias : 1; // 0xCA(0x1)
	unsigned char UnknownData_CA_1 : 7; // 0xCA(0x1)
	enum class None ConstCoordinate; // 0xCB(0x1)
	int32_t ConstMipValue; // 0xCC(0x4)
};

// Class Engine.MaterialExpressionTextureSampleParameter
// Size : 0xF0 (Inherited : 0xD0)
struct UMaterialExpressionTextureSampleParameter : UMaterialExpressionTextureSample {
	struct FName ParameterName; // 0xD0(0x8)
	struct FGuid ExpressionGUID; // 0xD8(0x10)
	struct FName Group; // 0xE8(0x8)
};

// Class Engine.MaterialExpressionTextureSampleParameter2D
// Size : 0xF0 (Inherited : 0xF0)
struct UMaterialExpressionTextureSampleParameter2D : UMaterialExpressionTextureSampleParameter {
};

// Class Engine.SplineComponent
// Size : 0x500 (Inherited : 0x410)
struct USplineComponent : UPrimitiveComponent {
	struct FSplineCurves SplineCurves; // 0x408(0x68)
	struct FInterpCurveVector SplineInfo; // 0x470(0x18)
	struct FInterpCurveQuat SplineRotInfo; // 0x488(0x18)
	struct FInterpCurveVector SplineScaleInfo; // 0x4A0(0x18)
	struct FInterpCurveFloat SplineReparamTable; // 0x4B8(0x18)
	bool bAllowSplineEditingPerInstance; // 0x4D0(0x1)
	int32_t ReparamStepsPerSegment; // 0x4D4(0x4)
	float Duration; // 0x4D8(0x4)
	bool bStationaryEndpoints; // 0x4DC(0x1)
	bool bSplineHasBeenEdited; // 0x4DD(0x1)
	bool bModifiedByConstructionScript; // 0x4DE(0x1)
	bool bInputSplinePointsToConstructionScript; // 0x4DF(0x1)
	bool bDrawDebug; // 0x4E0(0x1)
	bool bClosedLoop; // 0x4E1(0x1)
	bool bLoopPositionOverride; // 0x4E2(0x1)
	float LoopPosition; // 0x4E4(0x4)
	struct FVector DefaultUpVector; // 0x4E8(0xC)
	unsigned char UnknownData_4F8[0x0008]; // 0x4F8(0x8)

	void UpdateSpline(); // Function Engine.SplineComponent.UpdateSpline // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557F6080
	void SetWorldLocationAtSplinePoint(int32_t PointIndex, struct FVector InLocation); // Function Engine.SplineComponent.SetWorldLocationAtSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557F5BF0
	void SetUpVectorAtSplinePoint(int32_t PointIndex, struct FVector InUpVector, enum class ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline); // Function Engine.SplineComponent.SetUpVectorAtSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x12, 0x7FF6557F5A90
	void SetUnselectedSplineSegmentColor(struct FLinearColor SegmentColor); // Function Engine.SplineComponent.SetUnselectedSplineSegmentColor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557F51B0
	void SetTangentsAtSplinePoint(int32_t PointIndex, struct FVector InArriveTangent, struct FVector InLeaveTangent, enum class ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline); // Function Engine.SplineComponent.SetTangentsAtSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x1E, 0x7FF6557F58D0
	void SetTangentAtSplinePoint(int32_t PointIndex, struct FVector InTangent, enum class ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline); // Function Engine.SplineComponent.SetTangentAtSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x12, 0x7FF6557F5770
	void SetSplineWorldPoints(struct TArray<struct FVector> Points); // Function Engine.SplineComponent.SetSplineWorldPoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF6557F55F0
	void SetSplinePointType(int32_t PointIndex, enum class ESplinePointType Type, bool bUpdateSpline); // Function Engine.SplineComponent.SetSplinePointType // (Final|Native|Public|BlueprintCallable) // Param Size : 0x6, 0x7FF6557F53C0
	void SetSplinePoints(struct TArray<struct FVector> Points, enum class ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline); // Function Engine.SplineComponent.SetSplinePoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x12, 0x7FF6557F54C0
	void SetSplineLocalPoints(struct TArray<struct FVector> Points); // Function Engine.SplineComponent.SetSplineLocalPoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF6557F5310
	void SetSelectedSplineSegmentColor(struct FLinearColor SegmentColor); // Function Engine.SplineComponent.SetSelectedSplineSegmentColor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557F51B0
	void SetLocationAtSplinePoint(int32_t PointIndex, struct FVector InLocation, enum class ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline); // Function Engine.SplineComponent.SetLocationAtSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x12, 0x7FF6557F5050
	void SetDrawDebug(bool bShow); // Function Engine.SplineComponent.SetDrawDebug // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557F4FC0
	void SetDefaultUpVector(struct FVector UpVector, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.SetDefaultUpVector // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557F4EE0
	void SetClosedLoopAtPosition(bool bInClosedLoop, float Key, bool bUpdateSpline); // Function Engine.SplineComponent.SetClosedLoopAtPosition // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557F4DD0
	void SetClosedLoop(bool bInClosedLoop, bool bUpdateSpline); // Function Engine.SplineComponent.SetClosedLoop // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557F4D00
	void RemoveSplinePoint(int32_t Index, bool bUpdateSpline); // Function Engine.SplineComponent.RemoveSplinePoint // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557F4C40
	bool IsClosedLoop(); // Function Engine.SplineComponent.IsClosedLoop // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557F4C10
	struct FVector GetWorldTangentAtDistanceAlongSpline(float Distance); // Function Engine.SplineComponent.GetWorldTangentAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F4B60
	struct FRotator GetWorldRotationAtTime(float Time, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetWorldRotationAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F4A70
	struct FRotator GetWorldRotationAtDistanceAlongSpline(float Distance); // Function Engine.SplineComponent.GetWorldRotationAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F49C0
	struct FVector GetWorldLocationAtTime(float Time, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetWorldLocationAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F48D0
	struct FVector GetWorldLocationAtSplinePoint(int32_t PointIndex); // Function Engine.SplineComponent.GetWorldLocationAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F4820
	struct FVector GetWorldLocationAtDistanceAlongSpline(float Distance); // Function Engine.SplineComponent.GetWorldLocationAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F4770
	struct FVector GetWorldDirectionAtTime(float Time, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetWorldDirectionAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F4680
	struct FVector GetWorldDirectionAtDistanceAlongSpline(float Distance); // Function Engine.SplineComponent.GetWorldDirectionAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F45D0
	struct FVector GetVectorPropertyAtSplinePoint(int32_t Index, struct FName PropertyName); // Function Engine.SplineComponent.GetVectorPropertyAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557F4500
	struct FVector GetVectorPropertyAtSplineInputKey(float InKey, struct FName PropertyName); // Function Engine.SplineComponent.GetVectorPropertyAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557F4420
	struct FVector GetUpVectorAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetUpVectorAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F4300
	struct FVector GetUpVectorAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetUpVectorAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F4230
	struct FVector GetUpVectorAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetUpVectorAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F4150
	struct FVector GetUpVectorAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetUpVectorAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F4070
	struct FTransform GetTransformAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity, bool bUseScale); // Function Engine.SplineComponent.GetTransformAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557F3EE0
	struct FTransform GetTransformAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseScale); // Function Engine.SplineComponent.GetTransformAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557F3DA0
	struct FTransform GetTransformAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseScale); // Function Engine.SplineComponent.GetTransformAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557F3C50
	struct FTransform GetTransformAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseScale); // Function Engine.SplineComponent.GetTransformAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557F3B00
	struct FVector GetTangentAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetTangentAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F39E0
	struct FVector GetTangentAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetTangentAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F21C0
	struct FVector GetTangentAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetTangentAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F3900
	struct FVector GetTangentAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F3820
	enum class ESplinePointType GetSplinePointType(int32_t PointIndex); // Function Engine.SplineComponent.GetSplinePointType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x5, 0x7FF6557F3790
	float GetSplineLength(); // Function Engine.SplineComponent.GetSplineLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F3760
	struct FVector GetScaleAtTime(float Time, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetScaleAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F35F0
	struct FVector GetScaleAtSplinePoint(int32_t PointIndex); // Function Engine.SplineComponent.GetScaleAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F3550
	struct FVector GetScaleAtSplineInputKey(float InKey); // Function Engine.SplineComponent.GetScaleAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F34B0
	struct FVector GetScaleAtDistanceAlongSpline(float Distance); // Function Engine.SplineComponent.GetScaleAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F3410
	struct FRotator GetRotationAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetRotationAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F32F0
	struct FRotator GetRotationAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRotationAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F3220
	struct FRotator GetRotationAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRotationAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F3140
	struct FRotator GetRotationAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRotationAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F3060
	float GetRollAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetRollAtTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F2F50
	float GetRollAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRollAtSplinePoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F2E90
	float GetRollAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRollAtSplineInputKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F2DC0
	float GetRollAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRollAtDistanceAlongSpline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F2CF0
	struct FVector GetRightVectorAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetRightVectorAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F2BD0
	struct FVector GetRightVectorAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRightVectorAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F2B00
	struct FVector GetRightVectorAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRightVectorAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F2A20
	struct FVector GetRightVectorAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetRightVectorAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F2940
	int32_t GetNumberOfSplineSegments(); // Function Engine.SplineComponent.GetNumberOfSplineSegments // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F2910
	int32_t GetNumberOfSplinePoints(); // Function Engine.SplineComponent.GetNumberOfSplinePoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F28E0
	struct FVector GetLocationAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetLocationAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F27C0
	struct FVector GetLocationAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetLocationAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F26F0
	struct FVector GetLocationAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetLocationAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F2610
	struct FVector GetLocationAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F2530
	void GetLocationAndTangentAtSplinePoint(int32_t PointIndex, struct FVector Location, struct FVector Tangent, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetLocationAndTangentAtSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1D, 0x7FF6557F23C0
	void GetLocalLocationAndTangentAtSplinePoint(int32_t PointIndex, struct FVector LocalLocation, struct FVector LocalTangent); // Function Engine.SplineComponent.GetLocalLocationAndTangentAtSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F2290
	struct FVector GetLeaveTangentAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetLeaveTangentAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F21C0
	float GetInputKeyAtDistanceAlongSpline(float Distance); // Function Engine.SplineComponent.GetInputKeyAtDistanceAlongSpline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557F2130
	float GetFloatPropertyAtSplinePoint(int32_t Index, struct FName PropertyName); // Function Engine.SplineComponent.GetFloatPropertyAtSplinePoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F2070
	float GetFloatPropertyAtSplineInputKey(float InKey, struct FName PropertyName); // Function Engine.SplineComponent.GetFloatPropertyAtSplineInputKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F1FA0
	float GetDistanceAlongSplineAtSplinePoint(int32_t PointIndex); // Function Engine.SplineComponent.GetDistanceAlongSplineAtSplinePoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557F1F10
	struct FVector GetDirectionAtTime(float Time, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseConstantVelocity); // Function Engine.SplineComponent.GetDirectionAtTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F1DF0
	struct FVector GetDirectionAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetDirectionAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F1D20
	struct FVector GetDirectionAtSplineInputKey(float InKey, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetDirectionAtSplineInputKey // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F1C40
	struct FVector GetDirectionAtDistanceAlongSpline(float Distance, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetDirectionAtDistanceAlongSpline // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F1B60
	struct FVector GetDefaultUpVector(enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetDefaultUpVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F1AC0
	struct FVector GetArriveTangentAtSplinePoint(int32_t PointIndex, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.GetArriveTangentAtSplinePoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F19F0
	struct FVector FindUpVectorClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.FindUpVectorClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F1900
	struct FTransform FindTransformClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace, bool bUseScale); // Function Engine.SplineComponent.FindTransformClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557F17B0
	struct FVector FindTangentClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.FindTangentClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F16C0
	struct FVector FindScaleClosestToWorldLocation(struct FVector WorldLocation); // Function Engine.SplineComponent.FindScaleClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557F1610
	struct FRotator FindRotationClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.FindRotationClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F1520
	float FindRollClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.FindRollClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557F1440
	struct FVector FindRightVectorClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.FindRightVectorClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F1350
	struct FVector FindLocationClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.FindLocationClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F1260
	float FindInputKeyClosestToWorldLocation(struct FVector WorldLocation); // Function Engine.SplineComponent.FindInputKeyClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F11C0
	struct FVector FindDirectionClosestToWorldLocation(struct FVector WorldLocation, enum class ESplineCoordinateSpace CoordinateSpace); // Function Engine.SplineComponent.FindDirectionClosestToWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F10D0
	void ClearSplinePoints(bool bUpdateSpline); // Function Engine.SplineComponent.ClearSplinePoints // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557F1040
	void AddSplineWorldPoint(struct FVector Position); // Function Engine.SplineComponent.AddSplineWorldPoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557F0FA0
	void AddSplinePointAtIndex(struct FVector Position, int32_t Index, enum class ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline); // Function Engine.SplineComponent.AddSplinePointAtIndex // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x12, 0x7FF6557F0E40
	void AddSplinePoint(struct FVector Position, enum class ESplineCoordinateSpace CoordinateSpace, bool bUpdateSpline); // Function Engine.SplineComponent.AddSplinePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xE, 0x7FF6557F0D30
	void AddSplineLocalPoint(struct FVector Position); // Function Engine.SplineComponent.AddSplineLocalPoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557F0CA0
	void AddPoints(struct TArray<struct FSplinePoint> Points, bool bUpdateSpline); // Function Engine.SplineComponent.AddPoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6557F0BA0
	void AddPoint(struct FSplinePoint Point, bool bUpdateSpline); // Function Engine.SplineComponent.AddPoint // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x45, 0x7FF6557F0A90
};

// Class Engine.SkeletalMeshComponent
// Size : 0xAD0 (Inherited : 0x640)
struct USkeletalMeshComponent : USkinnedMeshComponent {
	class UObject* AnimBlueprintGeneratedClass; // 0x640(0x8)
	class UAnimInstance* AnimClass; // 0x648(0x8)
	struct UAnimInstance* AnimScriptInstance; // 0x650(0x8)
	struct UAnimInstance* PostProcessAnimInstance; // 0x658(0x8)
	struct FSingleAnimationPlayData AnimationData; // 0x660(0x18)
	unsigned char UnknownData_678[0x0010]; // 0x678(0x10)
	struct FVector RootBoneTranslation; // 0x688(0xC)
	struct FVector LineCheckBoundsScale; // 0x694(0xC)
	unsigned char UnknownData_6A0[0x0020]; // 0x6A0(0x20)
	struct TArray<struct UAnimInstance*> LinkedInstances; // 0x6C0(0x10)
	struct TArray<struct FTransform> CachedBoneSpaceTransforms; // 0x6D0(0x10)
	struct TArray<struct FTransform> CachedComponentSpaceTransforms; // 0x6E0(0x10)
	unsigned char UnknownData_6F0[0x0020]; // 0x6F0(0x20)
	float GlobalAnimRateScale; // 0x710(0x4)
	enum class EKinematicBonesUpdateToPhysics KinematicBonesUpdateType; // 0x714(0x1)
	enum class EPhysicsTransformUpdateMode PhysicsTransformUpdateMode; // 0x715(0x1)
	unsigned char UnknownData_716[0x0001]; // 0x716(0x1)
	enum class EAnimationMode AnimationMode; // 0x717(0x1)
	unsigned char UnknownData_718[0x0001]; // 0x718(0x1)
	unsigned char bDisablePostProcessBlueprint : 1; // 0x719(0x1)
	unsigned char UnknownData_719_1 : 1; // 0x719(0x1)
	unsigned char bUpdateOverlapsOnAnimationFinalize : 1; // 0x719(0x1)
	unsigned char UnknownData_719_3 : 1; // 0x719(0x1)
	unsigned char bHasValidBodies : 1; // 0x719(0x1)
	unsigned char UnknownData_719_5 : 1; // 0x719(0x1)
	unsigned char bBlendPhysics : 1; // 0x719(0x1)
	unsigned char bEnablePhysicsOnDedicatedServer : 1; // 0x719(0x1)
	unsigned char bUpdateJointsFromAnimation : 1; // 0x71A(0x1)
	unsigned char bDisableClothSimulation : 1; // 0x71A(0x1)
	unsigned char bDisableRigidBodyAnimNode : 1; // 0x71A(0x1)
	unsigned char bAllowAnimCurveEvaluation : 1; // 0x71A(0x1)
	unsigned char bDisableAnimCurves : 1; // 0x71A(0x1)
	unsigned char UnknownData_71A_5 : 3; // 0x71A(0x1)
	unsigned char bCollideWithEnvironment : 1; // 0x71B(0x1)
	unsigned char bCollideWithAttachedChildren : 1; // 0x71B(0x1)
	unsigned char bLocalSpaceSimulation : 1; // 0x71B(0x1)
	unsigned char bResetAfterTeleport : 1; // 0x71B(0x1)
	unsigned char UnknownData_71B_4 : 1; // 0x71B(0x1)
	unsigned char bDeferKinematicBoneUpdate : 1; // 0x71B(0x1)
	unsigned char bNoSkeletonUpdate : 1; // 0x71B(0x1)
	unsigned char bPauseAnims : 1; // 0x71B(0x1)
	unsigned char bUseRefPoseOnInitAnim : 1; // 0x71C(0x1)
	unsigned char bEnablePerPolyCollision : 1; // 0x71C(0x1)
	unsigned char bForceRefpose : 1; // 0x71C(0x1)
	unsigned char bOnlyAllowAutonomousTickPose : 1; // 0x71C(0x1)
	unsigned char bIsAutonomousTickPose : 1; // 0x71C(0x1)
	unsigned char bOldForceRefPose : 1; // 0x71C(0x1)
	unsigned char bShowPrePhysBones : 1; // 0x71C(0x1)
	unsigned char bRequiredBonesUpToDate : 1; // 0x71C(0x1)
	unsigned char bAnimTreeInitialised : 1; // 0x71D(0x1)
	unsigned char bIncludeComponentLocationIntoBounds : 1; // 0x71D(0x1)
	unsigned char bEnableLineCheckWithBounds : 1; // 0x71D(0x1)
	unsigned char bUseBendingElements : 1; // 0x71D(0x1)
	unsigned char bUseTetrahedralConstraints : 1; // 0x71D(0x1)
	unsigned char bUseThinShellVolumeConstraints : 1; // 0x71D(0x1)
	unsigned char bUseSelfCollisions : 1; // 0x71D(0x1)
	unsigned char bUseContinuousCollisionDetection : 1; // 0x71D(0x1)
	unsigned char bPropagateCurvesToSlaves : 1; // 0x71E(0x1)
	unsigned char bSkipKinematicUpdateWhenInterpolating : 1; // 0x71E(0x1)
	unsigned char bSkipBoundsUpdateWhenInterpolating : 1; // 0x71E(0x1)
	unsigned char UnknownData_71E_3 : 1; // 0x71E(0x1)
	unsigned char bNeedsQueuedAnimEventsDispatched : 1; // 0x71E(0x1)
	unsigned char UnknownData_71E_5 : 3; // 0x71E(0x1)
	unsigned char UnknownData_71F[0x0001]; // 0x71F(0x1)
	uint16 CachedAnimCurveUidVersion; // 0x720(0x2)
	enum class EClothMassMode MassMode; // 0x722(0x1)
	unsigned char UnknownData_723[0x0001]; // 0x723(0x1)
	float UniformMass; // 0x724(0x4)
	float TotalMass; // 0x728(0x4)
	float Density; // 0x72C(0x4)
	float MinPerParticleMass; // 0x730(0x4)
	float ClothBlendWeight; // 0x734(0x4)
	float EdgeStiffness; // 0x738(0x4)
	float BendingStiffness; // 0x73C(0x4)
	float AreaStiffness; // 0x740(0x4)
	float VolumeStiffness; // 0x744(0x4)
	float StrainLimitingStiffness; // 0x748(0x4)
	float ShapeTargetStiffness; // 0x74C(0x4)
	struct TArray<struct FName> DisallowedAnimCurves; // 0x750(0x10)
	struct UBodySetup* BodySetup; // 0x760(0x8)
	unsigned char UnknownData_768[0x0008]; // 0x768(0x8)
	struct FMulticastInlineDelegate OnConstraintBroken; // 0x770(0x10)
	class UClothingSimulationFactory* ClothingSimulationFactory; // 0x780(0x8)
	unsigned char UnknownData_788[0x00D0]; // 0x788(0xD0)
	float TeleportDistanceThreshold; // 0x858(0x4)
	float TeleportRotationThreshold; // 0x85C(0x4)
	unsigned char UnknownData_860[0x0008]; // 0x860(0x8)
	uint32_t LastPoseTickFrame; // 0x868(0x4)
	unsigned char UnknownData_86C[0x0054]; // 0x86C(0x54)
	struct UClothingSimulationInteractor* ClothingInteractor; // 0x8C0(0x8)
	unsigned char UnknownData_8C8[0x00C8]; // 0x8C8(0xC8)
	struct FMulticastInlineDelegate OnAnimInitialized; // 0x990(0x10)
	unsigned char UnknownData_9A0[0x0130]; // 0x9A0(0x130)

	void UnlinkAnimClassLayers(class UAnimInstance* InClass); // Function Engine.SkeletalMeshComponent.UnlinkAnimClassLayers // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557E0690
	void UnbindClothFromMasterPoseComponent(bool bRestoreSimulationSpace); // Function Engine.SkeletalMeshComponent.UnbindClothFromMasterPoseComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557E0600
	void ToggleDisablePostProcessBlueprint(); // Function Engine.SkeletalMeshComponent.ToggleDisablePostProcessBlueprint // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557E05E0
	void TermBodiesBelow(struct FName ParentBoneName); // Function Engine.SkeletalMeshComponent.TermBodiesBelow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557E0560
	void SuspendClothingSimulation(); // Function Engine.SkeletalMeshComponent.SuspendClothingSimulation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557E0540
	void Stop(); // Function Engine.SkeletalMeshComponent.Stop // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557E0520
	void SnapshotPose(struct FPoseSnapshot Snapshot); // Function Engine.SkeletalMeshComponent.SnapshotPose // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x38, 0x7FF6557E0450
	void SetUpdateAnimationInEditor(bool NewUpdateState); // Function Engine.SkeletalMeshComponent.SetUpdateAnimationInEditor // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF653C42440
	void SetTeleportRotationThreshold(float Threshold); // Function Engine.SkeletalMeshComponent.SetTeleportRotationThreshold // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E03D0
	void SetTeleportDistanceThreshold(float Threshold); // Function Engine.SkeletalMeshComponent.SetTeleportDistanceThreshold // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E0350
	void SetPosition(float InPos, bool bFireNotifies); // Function Engine.SkeletalMeshComponent.SetPosition // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557E0280
	void SetPlayRate(float Rate); // Function Engine.SkeletalMeshComponent.SetPlayRate // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E0200
	void SetPhysicsBlendWeight(float PhysicsBlendWeight); // Function Engine.SkeletalMeshComponent.SetPhysicsBlendWeight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E0180
	void SetNotifyRigidBodyCollisionBelow(bool bNewNotifyRigidBodyCollision, struct FName BoneName, bool bIncludeSelf); // Function Engine.SkeletalMeshComponent.SetNotifyRigidBodyCollisionBelow // (Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6557E0070
	void SetMorphTarget(struct FName MorphTargetName, float Value, bool bRemoveZeroWeight); // Function Engine.SkeletalMeshComponent.SetMorphTarget // (Final|Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6557DFF60
	void SetEnablePhysicsBlending(bool bNewBlendPhysics); // Function Engine.SkeletalMeshComponent.SetEnablePhysicsBlending // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DFED0
	void SetEnableGravityOnAllBodiesBelow(bool bEnableGravity, struct FName BoneName, bool bIncludeSelf); // Function Engine.SkeletalMeshComponent.SetEnableGravityOnAllBodiesBelow // (Final|Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6557DFDC0
	void SetEnableBodyGravity(bool bEnableGravity, struct FName BoneName); // Function Engine.SkeletalMeshComponent.SetEnableBodyGravity // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557DFD00
	void SetDisablePostProcessBlueprint(bool bInDisablePostProcess); // Function Engine.SkeletalMeshComponent.SetDisablePostProcessBlueprint // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DFC70
	void SetDisableAnimCurves(bool bInDisableAnimCurves); // Function Engine.SkeletalMeshComponent.SetDisableAnimCurves // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DFBE0
	void SetConstraintProfileForAll(struct FName ProfileName, bool bDefaultIfNotFound); // Function Engine.SkeletalMeshComponent.SetConstraintProfileForAll // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557DFB10
	void SetConstraintProfile(struct FName JointName, struct FName ProfileName, bool bDefaultIfNotFound); // Function Engine.SkeletalMeshComponent.SetConstraintProfile // (Final|Native|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF6557DFA00
	void SetClothMaxDistanceScale(float Scale); // Function Engine.SkeletalMeshComponent.SetClothMaxDistanceScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557DF980
	void SetBodyNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision, struct FName BoneName); // Function Engine.SkeletalMeshComponent.SetBodyNotifyRigidBodyCollision // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557DF8B0
	void SetAnimClass(class UObject* NewClass); // Function Engine.SkeletalMeshComponent.SetAnimClass // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557DF720
	void SetAnimationMode(enum class EAnimationMode InAnimationMode); // Function Engine.SkeletalMeshComponent.SetAnimationMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DF830
	void SetAnimation(struct UAnimationAsset* NewAnimToPlay); // Function Engine.SkeletalMeshComponent.SetAnimation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557DF7B0
	void SetAngularLimits(struct FName InBoneName, float Swing1LimitAngle, float TwistLimitAngle, float Swing2LimitAngle); // Function Engine.SkeletalMeshComponent.SetAngularLimits // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6557DF5D0
	void SetAllowRigidBodyAnimNode(bool bInAllow, bool bReinitAnim); // Function Engine.SkeletalMeshComponent.SetAllowRigidBodyAnimNode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557DF400
	void SetAllowedAnimCurvesEvaluation(struct TArray<struct FName> List, bool bAllow); // Function Engine.SkeletalMeshComponent.SetAllowedAnimCurvesEvaluation // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6557DF4D0
	void SetAllowAnimCurveEvaluation(bool bInAllow); // Function Engine.SkeletalMeshComponent.SetAllowAnimCurveEvaluation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DF370
	void SetAllMotorsAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType); // Function Engine.SkeletalMeshComponent.SetAllMotorsAngularVelocityDrive // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF6557DF250
	void SetAllMotorsAngularPositionDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType); // Function Engine.SkeletalMeshComponent.SetAllMotorsAngularPositionDrive // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF6557DF130
	void SetAllMotorsAngularDriveParams(float InSpring, float InDamping, float InForceLimit, bool bSkipCustomPhysicsType); // Function Engine.SkeletalMeshComponent.SetAllMotorsAngularDriveParams // (Final|Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6557DEFD0
	void SetAllBodiesSimulatePhysics(bool bNewSimulate); // Function Engine.SkeletalMeshComponent.SetAllBodiesSimulatePhysics // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DEF40
	void SetAllBodiesPhysicsBlendWeight(float PhysicsBlendWeight, bool bSkipCustomPhysicsType); // Function Engine.SkeletalMeshComponent.SetAllBodiesPhysicsBlendWeight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557DEE70
	void SetAllBodiesBelowSimulatePhysics(struct FName InBoneName, bool bNewSimulate, bool bIncludeSelf); // Function Engine.SkeletalMeshComponent.SetAllBodiesBelowSimulatePhysics // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0xA, 0x7FF6557DED50
	void SetAllBodiesBelowPhysicsBlendWeight(struct FName InBoneName, float PhysicsBlendWeight, bool bSkipCustomPhysicsType, bool bIncludeSelf); // Function Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0xE, 0x7FF6557DEBE0
	void ResumeClothingSimulation(); // Function Engine.SkeletalMeshComponent.ResumeClothingSimulation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DEBC0
	void ResetClothTeleportMode(); // Function Engine.SkeletalMeshComponent.ResetClothTeleportMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DEBA0
	void ResetAnimInstanceDynamics(enum class ETeleportType InTeleportType); // Function Engine.SkeletalMeshComponent.ResetAnimInstanceDynamics // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DEB20
	void ResetAllowedAnimCurveEvaluation(); // Function Engine.SkeletalMeshComponent.ResetAllowedAnimCurveEvaluation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DEB00
	void ResetAllBodiesSimulatePhysics(); // Function Engine.SkeletalMeshComponent.ResetAllBodiesSimulatePhysics // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DEAE0
	void PlayAnimation(struct UAnimationAsset* NewAnimToPlay, bool bLooping); // Function Engine.SkeletalMeshComponent.PlayAnimation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557DEA10
	void Play(bool bLooping); // Function Engine.SkeletalMeshComponent.Play // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557DE980
	void OverrideAnimationData(struct UAnimationAsset* InAnimToPlay, bool bIsLooping, bool bIsPlaying, float Position, float PlayRate); // Function Engine.SkeletalMeshComponent.OverrideAnimationData // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6557DE7E0
	void LinkAnimGraphByTag(struct FName InTag, class UAnimInstance* InClass); // Function Engine.SkeletalMeshComponent.LinkAnimGraphByTag // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557DE720
	void LinkAnimClassLayers(class UAnimInstance* InClass); // Function Engine.SkeletalMeshComponent.LinkAnimClassLayers // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557DE6A0
	bool K2_GetClosestPointOnPhysicsAsset(struct FVector WorldPosition, struct FVector ClosestWorldPosition, struct FVector Normal, struct FName BoneName, float Distance); // Function Engine.SkeletalMeshComponent.K2_GetClosestPointOnPhysicsAsset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x31, 0x7FF6557DE4A0
	bool IsPlaying(); // Function Engine.SkeletalMeshComponent.IsPlaying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DE470
	bool IsClothingSimulationSuspended(); // Function Engine.SkeletalMeshComponent.IsClothingSimulationSuspended // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DE440
	bool IsBodyGravityEnabled(struct FName BoneName); // Function Engine.SkeletalMeshComponent.IsBodyGravityEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557DE3B0
	bool HasValidAnimationInstance(); // Function Engine.SkeletalMeshComponent.HasValidAnimationInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DE380
	float GetTeleportRotationThreshold(); // Function Engine.SkeletalMeshComponent.GetTeleportRotationThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557DE350
	float GetTeleportDistanceThreshold(); // Function Engine.SkeletalMeshComponent.GetTeleportDistanceThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557DE350
	struct FVector GetSkeletalCenterOfMass(); // Function Engine.SkeletalMeshComponent.GetSkeletalCenterOfMass // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557DE310
	struct UAnimInstance* GetPostProcessInstance(); // Function Engine.SkeletalMeshComponent.GetPostProcessInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557DE2E0
	float GetPosition(); // Function Engine.SkeletalMeshComponent.GetPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557DE2B0
	float GetPlayRate(); // Function Engine.SkeletalMeshComponent.GetPlayRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557DE280
	float GetMorphTarget(struct FName MorphTargetName); // Function Engine.SkeletalMeshComponent.GetMorphTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557DE1E0
	struct UAnimInstance* GetLinkedAnimLayerInstanceByGroup(struct FName InGroup); // Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DE150
	struct UAnimInstance* GetLinkedAnimLayerInstanceByClass(class UAnimInstance* InClass); // Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DE0C0
	void GetLinkedAnimGraphInstancesByTag(struct FName InTag, struct TArray<struct UAnimInstance*> OutLinkedInstances); // Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstancesByTag // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557DDFD0
	struct UAnimInstance* GetLinkedAnimGraphInstanceByTag(struct FName InTag); // Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstanceByTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DDF40
	bool GetDisablePostProcessBlueprint(); // Function Engine.SkeletalMeshComponent.GetDisablePostProcessBlueprint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DDF10
	bool GetDisableAnimCurves(); // Function Engine.SkeletalMeshComponent.GetDisableAnimCurves // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DDEE0
	void GetCurrentJointAngles(struct FName InBoneName, float Swing1Angle, float TwistAngle, float Swing2Angle); // Function Engine.SkeletalMeshComponent.GetCurrentJointAngles // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x14, 0x7FF6557DDD60
	float GetClothMaxDistanceScale(); // Function Engine.SkeletalMeshComponent.GetClothMaxDistanceScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557DDD00
	struct UClothingSimulationInteractor* GetClothingSimulationInteractor(); // Function Engine.SkeletalMeshComponent.GetClothingSimulationInteractor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557DDD30
	float GetBoneMass(struct FName BoneName, bool bScaleMass); // Function Engine.SkeletalMeshComponent.GetBoneMass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557DDC30
	struct UAnimInstance* GetAnimInstance(); // Function Engine.SkeletalMeshComponent.GetAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557DDBD0
	class UObject* GetAnimClass(); // Function Engine.SkeletalMeshComponent.GetAnimClass // (Final|Native|Public) // Param Size : 0x8, 0x7FF6557DDBA0
	enum class EAnimationMode GetAnimationMode(); // Function Engine.SkeletalMeshComponent.GetAnimationMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DDC00
	bool GetAllowRigidBodyAnimNode(); // Function Engine.SkeletalMeshComponent.GetAllowRigidBodyAnimNode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DDB40
	bool GetAllowedAnimCurveEvaluate(); // Function Engine.SkeletalMeshComponent.GetAllowedAnimCurveEvaluate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557DDB70
	void ForceClothNextUpdateTeleportAndReset(); // Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleportAndReset // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DDB20
	void ForceClothNextUpdateTeleport(); // Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleport // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DDB00
	struct FName FindConstraintBoneName(int32_t ConstraintIndex); // Function Engine.SkeletalMeshComponent.FindConstraintBoneName // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557DDA70
	void ClearMorphTargets(); // Function Engine.SkeletalMeshComponent.ClearMorphTargets // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DDA50
	void BreakConstraint(struct FVector Impulse, struct FVector HitLocation, struct FName InBoneName); // Function Engine.SkeletalMeshComponent.BreakConstraint // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557DD920
	void BindClothToMasterPoseComponent(); // Function Engine.SkeletalMeshComponent.BindClothToMasterPoseComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557DD900
	void AllowAnimCurveEvaluation(struct FName NameOfCurve, bool bAllow); // Function Engine.SkeletalMeshComponent.AllowAnimCurveEvaluation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557DD830
	void AddImpulseToAllBodiesBelow(struct FVector Impulse, struct FName BoneName, bool bVelChange, bool bIncludeSelf); // Function Engine.SkeletalMeshComponent.AddImpulseToAllBodiesBelow // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x16, 0x7FF6557DD6C0
	void AddForceToAllBodiesBelow(struct FVector Force, struct FName BoneName, bool bAccelChange, bool bIncludeSelf); // Function Engine.SkeletalMeshComponent.AddForceToAllBodiesBelow // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x16, 0x7FF6557DD550
	void AccumulateAllBodiesBelowPhysicsBlendWeight(struct FName InBoneName, float AddPhysicsBlendWeight, bool bSkipCustomPhysicsType); // Function Engine.SkeletalMeshComponent.AccumulateAllBodiesBelowPhysicsBlendWeight // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0xD, 0x7FF6557DD430
};

// Class Engine.AnimInstance
// Size : 0x270 (Inherited : 0x28)
struct UAnimInstance : UObject {
	struct USkeleton* CurrentSkeleton; // 0x28(0x8)
	enum class ERootMotionMode RootMotionMode; // 0x30(0x1)
	unsigned char bUseMultiThreadedAnimationUpdate : 1; // 0x31(0x1)
	unsigned char bUsingCopyPoseFromMesh : 1; // 0x31(0x1)
	unsigned char UnknownData_31_2 : 2; // 0x31(0x1)
	unsigned char bReceiveNotifiesFromLinkedInstances : 1; // 0x31(0x1)
	unsigned char bPropagateNotifiesToLinkedInstances : 1; // 0x31(0x1)
	unsigned char bQueueMontageEvents : 1; // 0x31(0x1)
	unsigned char UnknownData_32[0x0006]; // 0x32(0x6)
	struct FMulticastInlineDelegate OnMontageBlendingOut; // 0x38(0x10)
	struct FMulticastInlineDelegate OnMontageStarted; // 0x48(0x10)
	struct FMulticastInlineDelegate OnMontageEnded; // 0x58(0x10)
	struct FMulticastInlineDelegate OnAllMontageInstancesEnded; // 0x68(0x10)
	unsigned char UnknownData_78[0x0088]; // 0x78(0x88)
	struct FAnimNotifyQueue NotifyQueue; // 0x100(0x70)
	struct TArray<struct FAnimNotifyEvent> ActiveAnimNotifyState; // 0x170(0x10)
	unsigned char UnknownData_180[0x00F0]; // 0x180(0xF0)

	void UnlockAIResources(bool bUnlockMovement, bool UnlockAILogic); // Function Engine.AnimInstance.UnlockAIResources // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6556AE1F0
	void UnlinkAnimClassLayers(class UAnimInstance* InClass); // Function Engine.AnimInstance.UnlinkAnimClassLayers // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556AF800
	struct APawn* TryGetPawnOwner(); // Function Engine.AnimInstance.TryGetPawnOwner // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556AF7D0
	void StopSlotAnimation(float InBlendOutTime, struct FName SlotNodeName); // Function Engine.AnimInstance.StopSlotAnimation // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556AF700
	void SnapshotPose(struct FPoseSnapshot Snapshot); // Function Engine.AnimInstance.SnapshotPose // (Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x38, 0x7FF6556AF630
	void SetRootMotionMode(enum class ERootMotionMode Value); // Function Engine.AnimInstance.SetRootMotionMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556A4090
	void SetReceiveNotifiesFromLinkedInstances(bool bSet); // Function Engine.AnimInstance.SetReceiveNotifiesFromLinkedInstances // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556AF5A0
	void SetPropagateNotifiesToLinkedInstances(bool bSet); // Function Engine.AnimInstance.SetPropagateNotifiesToLinkedInstances // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556AF510
	void SetMorphTarget(struct FName MorphTargetName, float Value); // Function Engine.AnimInstance.SetMorphTarget // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556AF440
	void SavePoseSnapshot(struct FName SnapshotName); // Function Engine.AnimInstance.SavePoseSnapshot // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556AF3B0
	void ResetDynamics(enum class ETeleportType InTeleportType); // Function Engine.AnimInstance.ResetDynamics // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556AF330
	struct UAnimMontage* PlaySlotAnimationAsDynamicMontage(struct UAnimSequenceBase* Asset, struct FName SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int32_t LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt); // Function Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage // (Final|Native|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF6556AF0F0
	float PlaySlotAnimation(struct UAnimSequenceBase* Asset, struct FName SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int32_t LoopCount); // Function Engine.AnimInstance.PlaySlotAnimation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x24, 0x7FF6556AEF30
	void Montage_StopGroupByName(float InBlendOutTime, struct FName GroupName); // Function Engine.AnimInstance.Montage_StopGroupByName // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556AEE60
	void Montage_Stop(float InBlendOutTime, struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_Stop // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556AED90
	void Montage_SetPosition(struct UAnimMontage* Montage, float NewPosition); // Function Engine.AnimInstance.Montage_SetPosition // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556AECC0
	void Montage_SetPlayRate(struct UAnimMontage* Montage, float NewPlayRate); // Function Engine.AnimInstance.Montage_SetPlayRate // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556AEBF0
	void Montage_SetNextSection(struct FName SectionNameToChange, struct FName NextSection, struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_SetNextSection // (Final|Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6556AEAF0
	void Montage_Resume(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_Resume // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556AEA70
	float Montage_Play(struct UAnimMontage* MontageToPlay, float InPlayRate, enum class EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages); // Function Engine.AnimInstance.Montage_Play // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1C, 0x7FF6556AE8E0
	void Montage_Pause(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_Pause // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556AE860
	void Montage_JumpToSectionsEnd(struct FName SectionName, struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_JumpToSectionsEnd // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556AE7A0
	void Montage_JumpToSection(struct FName SectionName, struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_JumpToSection // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556AE6E0
	bool Montage_IsPlaying(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_IsPlaying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6556AE650
	bool Montage_IsActive(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_IsActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6556AE5C0
	float Montage_GetPosition(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_GetPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556AE520
	float Montage_GetPlayRate(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_GetPlayRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556AE480
	bool Montage_GetIsStopped(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_GetIsStopped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6556AE3F0
	struct FName Montage_GetCurrentSection(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_GetCurrentSection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556AE360
	float Montage_GetBlendTime(struct UAnimMontage* Montage); // Function Engine.AnimInstance.Montage_GetBlendTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556AE2C0
	void LockAIResources(bool bLockMovement, bool LockAILogic); // Function Engine.AnimInstance.LockAIResources // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6556AE1F0
	void LinkAnimGraphByTag(struct FName InTag, class UAnimInstance* InClass); // Function Engine.AnimInstance.LinkAnimGraphByTag // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556AE130
	void LinkAnimClassLayers(class UAnimInstance* InClass); // Function Engine.AnimInstance.LinkAnimClassLayers // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556AE0B0
	bool IsSyncGroupBetweenMarkers(struct FName InSyncGroupName, struct FName PreviousMarker, struct FName NextMarker, bool bRespectMarkerOrder); // Function Engine.AnimInstance.IsSyncGroupBetweenMarkers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1A, 0x7FF6556ADF60
	bool IsPlayingSlotAnimation(struct UAnimSequenceBase* Asset, struct FName SlotNodeName); // Function Engine.AnimInstance.IsPlayingSlotAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x11, 0x7FF6556ADEA0
	bool IsAnyMontagePlaying(); // Function Engine.AnimInstance.IsAnyMontagePlaying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556ADE70
	bool HasMarkerBeenHitThisFrame(struct FName SyncGroup, struct FName MarkerName); // Function Engine.AnimInstance.HasMarkerBeenHitThisFrame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x11, 0x7FF6556ADDB0
	bool GetTimeToClosestMarker(struct FName SyncGroup, struct FName MarkerName, float OutMarkerTime); // Function Engine.AnimInstance.GetTimeToClosestMarker // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x15, 0x7FF6556ADCA0
	struct FMarkerSyncAnimPosition GetSyncGroupPosition(struct FName InSyncGroupName); // Function Engine.AnimInstance.GetSyncGroupPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6556ADC00
	float GetRelevantAnimTimeRemainingFraction(int32_t MachineIndex, int32_t StateIndex); // Function Engine.AnimInstance.GetRelevantAnimTimeRemainingFraction // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556ADB40
	float GetRelevantAnimTimeRemaining(int32_t MachineIndex, int32_t StateIndex); // Function Engine.AnimInstance.GetRelevantAnimTimeRemaining // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556ADA80
	float GetRelevantAnimTimeFraction(int32_t MachineIndex, int32_t StateIndex); // Function Engine.AnimInstance.GetRelevantAnimTimeFraction // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556AD9C0
	float GetRelevantAnimTime(int32_t MachineIndex, int32_t StateIndex); // Function Engine.AnimInstance.GetRelevantAnimTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556AD900
	float GetRelevantAnimLength(int32_t MachineIndex, int32_t StateIndex); // Function Engine.AnimInstance.GetRelevantAnimLength // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556AD840
	bool GetReceiveNotifiesFromLinkedInstances(); // Function Engine.AnimInstance.GetReceiveNotifiesFromLinkedInstances // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556AD810
	bool GetPropagateNotifiesToLinkedInstances(); // Function Engine.AnimInstance.GetPropagateNotifiesToLinkedInstances // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556AD7E0
	struct USkeletalMeshComponent* GetOwningComponent(); // Function Engine.AnimInstance.GetOwningComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556AD7B0
	struct AActor* GetOwningActor(); // Function Engine.AnimInstance.GetOwningActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556AD780
	struct UAnimInstance* GetLinkedAnimLayerInstanceByGroup(struct FName InGroup); // Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556AD6F0
	struct UAnimInstance* GetLinkedAnimLayerInstanceByClass(class UAnimInstance* InClass); // Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556AD660
	void GetLinkedAnimGraphInstancesByTag(struct FName InTag, struct TArray<struct UAnimInstance*> OutLinkedInstances); // Function Engine.AnimInstance.GetLinkedAnimGraphInstancesByTag // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6556AD570
	struct UAnimInstance* GetLinkedAnimGraphInstanceByTag(struct FName InTag); // Function Engine.AnimInstance.GetLinkedAnimGraphInstanceByTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556AD4E0
	float GetInstanceTransitionTimeElapsedFraction(int32_t MachineIndex, int32_t TransitionIndex); // Function Engine.AnimInstance.GetInstanceTransitionTimeElapsedFraction // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556AD420
	float GetInstanceTransitionTimeElapsed(int32_t MachineIndex, int32_t TransitionIndex); // Function Engine.AnimInstance.GetInstanceTransitionTimeElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556AD360
	float GetInstanceTransitionCrossfadeDuration(int32_t MachineIndex, int32_t TransitionIndex); // Function Engine.AnimInstance.GetInstanceTransitionCrossfadeDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556AD2A0
	float GetInstanceStateWeight(int32_t MachineIndex, int32_t StateIndex); // Function Engine.AnimInstance.GetInstanceStateWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556AD1E0
	float GetInstanceMachineWeight(int32_t MachineIndex); // Function Engine.AnimInstance.GetInstanceMachineWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556AD150
	float GetInstanceCurrentStateElapsedTime(int32_t MachineIndex); // Function Engine.AnimInstance.GetInstanceCurrentStateElapsedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556AD0C0
	float GetInstanceAssetPlayerTimeFromEndFraction(int32_t AssetPlayerIndex); // Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEndFraction // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556AD030
	float GetInstanceAssetPlayerTimeFromEnd(int32_t AssetPlayerIndex); // Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556ACFA0
	float GetInstanceAssetPlayerTimeFraction(int32_t AssetPlayerIndex); // Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFraction // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556ACF10
	float GetInstanceAssetPlayerTime(int32_t AssetPlayerIndex); // Function Engine.AnimInstance.GetInstanceAssetPlayerTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556ACE80
	float GetInstanceAssetPlayerLength(int32_t AssetPlayerIndex); // Function Engine.AnimInstance.GetInstanceAssetPlayerLength // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556ACDF0
	float GetCurveValue(struct FName CurveName); // Function Engine.AnimInstance.GetCurveValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556ACD50
	struct FName GetCurrentStateName(int32_t MachineIndex); // Function Engine.AnimInstance.GetCurrentStateName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6556ACCC0
	struct UAnimMontage* GetCurrentActiveMontage(); // Function Engine.AnimInstance.GetCurrentActiveMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556ACC90
	void GetAllCurveNames(struct TArray<struct FName> OutNames); // Function Engine.AnimInstance.GetAllCurveNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556ACBE0
	void GetActiveCurveNames(enum class EAnimCurveType CurveType, struct TArray<struct FName> OutNames); // Function Engine.AnimInstance.GetActiveCurveNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6556ACAF0
	void ClearMorphTargets(); // Function Engine.AnimInstance.ClearMorphTargets // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556ACAD0
	float CalculateDirection(struct FVector Velocity, struct FRotator BaseRotation); // Function Engine.AnimInstance.CalculateDirection // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6556AC9D0
	void BlueprintUpdateAnimation(float DeltaTimeX); // Function Engine.AnimInstance.BlueprintUpdateAnimation // (Event|Public|BlueprintEvent) // Param Size : 0x4, 0x7FF653FAFDF0
	void BlueprintPostEvaluateAnimation(); // Function Engine.AnimInstance.BlueprintPostEvaluateAnimation // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void BlueprintLinkedAnimationLayersInitialized(); // Function Engine.AnimInstance.BlueprintLinkedAnimationLayersInitialized // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void BlueprintInitializeAnimation(); // Function Engine.AnimInstance.BlueprintInitializeAnimation // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void BlueprintBeginPlay(); // Function Engine.AnimInstance.BlueprintBeginPlay // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
};

// Class Engine.AudioComponent
// Size : 0x7D0 (Inherited : 0x1F0)
struct UAudioComponent : USceneComponent {
	struct USoundBase* Sound; // 0x1F0(0x8)
	struct TArray<struct FAudioComponentParam> InstanceParameters; // 0x1F8(0x10)
	struct USoundClass* SoundClassOverride; // 0x208(0x8)
	unsigned char bAutoDestroy : 1; // 0x210(0x1)
	unsigned char bStopWhenOwnerDestroyed : 1; // 0x210(0x1)
	unsigned char bShouldRemainActiveIfDropped : 1; // 0x210(0x1)
	unsigned char bAllowSpatialization : 1; // 0x210(0x1)
	unsigned char bOverrideAttenuation : 1; // 0x210(0x1)
	unsigned char bOverrideSubtitlePriority : 1; // 0x210(0x1)
	unsigned char bIsUISound : 1; // 0x210(0x1)
	unsigned char bEnableLowPassFilter : 1; // 0x210(0x1)
	unsigned char bOverridePriority : 1; // 0x211(0x1)
	unsigned char bSuppressSubtitles : 1; // 0x211(0x1)
	unsigned char UnknownData_211_2 : 6; // 0x211(0x1)
	unsigned char UnknownData_212_0 : 3; // 0x212(0x1)
	unsigned char bAutoManageAttachment : 1; // 0x212(0x1)
	unsigned char UnknownData_212_4 : 4; // 0x212(0x1)
	unsigned char UnknownData_213[0x0005]; // 0x213(0x5)
	struct FName AudioComponentUserID; // 0x218(0x8)
	float PitchModulationMin; // 0x220(0x4)
	float PitchModulationMax; // 0x224(0x4)
	float VolumeModulationMin; // 0x228(0x4)
	float VolumeModulationMax; // 0x22C(0x4)
	float VolumeMultiplier; // 0x230(0x4)
	int32_t EnvelopeFollowerAttackTime; // 0x234(0x4)
	int32_t EnvelopeFollowerReleaseTime; // 0x238(0x4)
	float Priority; // 0x23C(0x4)
	float SubtitlePriority; // 0x240(0x4)
	unsigned char UnknownData_244[0x0004]; // 0x244(0x4)
	struct USoundEffectSourcePresetChain* SourceEffectChain; // 0x248(0x8)
	float PitchMultiplier; // 0x250(0x4)
	float LowPassFilterFrequency; // 0x254(0x4)
	unsigned char UnknownData_258[0x0008]; // 0x258(0x8)
	struct USoundAttenuation* AttenuationSettings; // 0x260(0x8)
	struct FSoundAttenuationSettings AttenuationOverrides; // 0x268(0x3A0)
	struct USoundConcurrency* ConcurrencySettings; // 0x608(0x8)
	struct TSet<struct USoundConcurrency*> ConcurrencySet; // 0x610(0x50)
	unsigned char UnknownData_660[0x000C]; // 0x660(0xC)
	enum class EAttachmentRule AutoAttachLocationRule; // 0x66C(0x1)
	enum class EAttachmentRule AutoAttachRotationRule; // 0x66D(0x1)
	enum class EAttachmentRule AutoAttachScaleRule; // 0x66E(0x1)
	unsigned char UnknownData_66F[0x0001]; // 0x66F(0x1)
	struct FMulticastInlineDelegate OnAudioFinished; // 0x670(0x10)
	unsigned char UnknownData_680[0x0018]; // 0x680(0x18)
	struct FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x698(0x10)
	unsigned char UnknownData_6A8[0x0018]; // 0x6A8(0x18)
	struct FMulticastInlineDelegate OnAudioSingleEnvelopeValue; // 0x6C0(0x10)
	unsigned char UnknownData_6D0[0x0018]; // 0x6D0(0x18)
	struct FMulticastInlineDelegate OnAudioMultiEnvelopeValue; // 0x6E8(0x10)
	unsigned char UnknownData_6F8[0x0018]; // 0x6F8(0x18)
	struct FSoundModulation Modulation; // 0x710(0x10)
	struct FDelegate OnQueueSubtitles; // 0x720(0x10)
	struct FWeakObjectPtr<struct USceneComponent> AutoAttachParent; // 0x730(0x8)
	struct FName AutoAttachSocketName; // 0x738(0x8)
	unsigned char UnknownData_740[0x0090]; // 0x740(0x90)

	void StopDelayed(float DelayTime); // Function Engine.AudioComponent.StopDelayed // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0E80
	void Stop(); // Function Engine.AudioComponent.Stop // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556C0E60
	void SetWaveParameter(struct FName InName, struct USoundWave* InWave); // Function Engine.AudioComponent.SetWaveParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556C0DA0
	void SetVolumeMultiplier(float NewVolumeMultiplier); // Function Engine.AudioComponent.SetVolumeMultiplier // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0D20
	void SetUISound(bool bInUISound); // Function Engine.AudioComponent.SetUISound // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556C0C90
	void SetSubmixSend(struct USoundSubmixBase* Submix, float SendLevel); // Function Engine.AudioComponent.SetSubmixSend // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556C0B40
	void SetSourceBusSendPreEffect(struct USoundSourceBus* SoundSourceBus, float SourceBusSendLevel); // Function Engine.AudioComponent.SetSourceBusSendPreEffect // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556C09F0
	void SetSourceBusSendPostEffect(struct USoundSourceBus* SoundSourceBus, float SourceBusSendLevel); // Function Engine.AudioComponent.SetSourceBusSendPostEffect // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556C0920
	void SetSound(struct USoundBase* NewSound); // Function Engine.AudioComponent.SetSound // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556C08A0
	void SetPitchMultiplier(float NewPitchMultiplier); // Function Engine.AudioComponent.SetPitchMultiplier // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0710
	void SetPaused(bool bPause); // Function Engine.AudioComponent.SetPaused // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556C0680
	void SetLowPassFilterFrequency(float InLowPassFilterFrequency); // Function Engine.AudioComponent.SetLowPassFilterFrequency // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0600
	void SetLowPassFilterEnabled(bool InLowPassFilterEnabled); // Function Engine.AudioComponent.SetLowPassFilterEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556C0570
	void SetIntParameter(struct FName InName, int32_t inInt); // Function Engine.AudioComponent.SetIntParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556C04B0
	void SetFloatParameter(struct FName InName, float InFloat); // Function Engine.AudioComponent.SetFloatParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556C0360
	void SetBoolParameter(struct FName InName, bool InBool); // Function Engine.AudioComponent.SetBoolParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6556BFF90
	void Play(float StartTime); // Function Engine.AudioComponent.Play // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556BFE90
	bool IsPlaying(); // Function Engine.AudioComponent.IsPlaying // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556BFE60
	bool HasCookedFFTData(); // Function Engine.AudioComponent.HasCookedFFTData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556BFE30
	bool HasCookedAmplitudeEnvelopeData(); // Function Engine.AudioComponent.HasCookedAmplitudeEnvelopeData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556BFE00
	enum class EAudioComponentPlayState GetPlayState(); // Function Engine.AudioComponent.GetPlayState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556BFDD0
	bool GetCookedFFTDataForAllPlayingSounds(struct TArray<struct FSoundWaveSpectralDataPerSound> OutSoundWaveSpectralData); // Function Engine.AudioComponent.GetCookedFFTDataForAllPlayingSounds // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6556BFCF0
	bool GetCookedFFTData(struct TArray<float> FrequenciesToGet, struct TArray<struct FSoundWaveSpectralData> OutSoundWaveSpectralData); // Function Engine.AudioComponent.GetCookedFFTData // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x21, 0x7FF6556BFBD0
	bool GetCookedEnvelopeDataForAllPlayingSounds(struct TArray<struct FSoundWaveEnvelopeDataPerSound> OutEnvelopeData); // Function Engine.AudioComponent.GetCookedEnvelopeDataForAllPlayingSounds // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6556BFB10
	bool GetCookedEnvelopeData(float OutEnvelopeData); // Function Engine.AudioComponent.GetCookedEnvelopeData // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x5, 0x7FF6556BFA60
	void FadeOut(float FadeOutDuration, float FadeVolumeLevel, enum class EAudioFaderCurve FadeCurve); // Function Engine.AudioComponent.FadeOut // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6556BF950
	void FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime, enum class EAudioFaderCurve FadeCurve); // Function Engine.AudioComponent.FadeIn // (Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6556BF800
	bool BP_GetAttenuationSettingsToApply(struct FSoundAttenuationSettings OutAttenuationSettings); // Function Engine.AudioComponent.BP_GetAttenuationSettingsToApply // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x3A1, 0x7FF6556BF610
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel, enum class EAudioFaderCurve FadeCurve); // Function Engine.AudioComponent.AdjustVolume // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6556BECC0
	void AdjustAttenuation(struct FSoundAttenuationSettings InAttenuationSettings); // Function Engine.AudioComponent.AdjustAttenuation // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x3A0, 0x7FF6556BEBF0
};

// Class Engine.AssetImportData
// Size : 0x28 (Inherited : 0x28)
struct UAssetImportData : UObject {
};

// Class Engine.FXSystemComponent
// Size : 0x410 (Inherited : 0x410)
struct UFXSystemComponent : UPrimitiveComponent {

	void SetVectorParameter(struct FName ParameterName, struct FVector Param); // Function Engine.FXSystemComponent.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557AB410
	void SetUseAutoManageAttachment(bool bAutoManage); // Function Engine.FXSystemComponent.SetUseAutoManageAttachment // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557AB380
	void SetFloatParameter(struct FName ParameterName, float Param); // Function Engine.FXSystemComponent.SetFloatParameter // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AB020
	void SetEmitterEnable(struct FName EmitterName, bool bNewEnableState); // Function Engine.FXSystemComponent.SetEmitterEnable // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557AAF50
	void SetColorParameter(struct FName ParameterName, struct FLinearColor Param); // Function Engine.FXSystemComponent.SetColorParameter // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557AAE80
	void SetBoolParameter(struct FName ParameterName, bool Param); // Function Engine.FXSystemComponent.SetBoolParameter // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557AACE0
	void SetAutoAttachmentParameters(struct USceneComponent* Parent, struct FName SocketName, enum class EAttachmentRule LocationRule, enum class EAttachmentRule RotationRule, enum class EAttachmentRule ScaleRule); // Function Engine.FXSystemComponent.SetAutoAttachmentParameters // (Native|Public|BlueprintCallable) // Param Size : 0x13, 0x7FF6557AA450
	void SetActorParameter(struct FName ParameterName, struct AActor* Param); // Function Engine.FXSystemComponent.SetActorParameter // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557AA260
	void ReleaseToPool(); // Function Engine.FXSystemComponent.ReleaseToPool // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557AA240
	struct UFXSystemAsset* GetFXSystemAsset(); // Function Engine.FXSystemComponent.GetFXSystemAsset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557A9C50
};

// Class Engine.FXSystemAsset
// Size : 0x30 (Inherited : 0x28)
struct UFXSystemAsset : UObject {
	uint32_t MaxPoolSize; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
};

// Class Engine.AnimNotify
// Size : 0x38 (Inherited : 0x28)
struct UAnimNotify : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)

	bool Received_Notify(struct USkeletalMeshComponent* MeshComp, struct UAnimSequenceBase* Animation); // Function Engine.AnimNotify.Received_Notify // (Event|Public|BlueprintEvent|Const) // Param Size : 0x11, 0x7FF653FAFDF0
	struct FString GetNotifyName(); // Function Engine.AnimNotify.GetNotifyName // (Native|Event|Public|BlueprintEvent|Const) // Param Size : 0x10, 0x7FF653CAA500
};

// Class Engine.AnimNotifyState
// Size : 0x30 (Inherited : 0x28)
struct UAnimNotifyState : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)

	bool Received_NotifyTick(struct USkeletalMeshComponent* MeshComp, struct UAnimSequenceBase* Animation, float FrameDeltaTime); // Function Engine.AnimNotifyState.Received_NotifyTick // (Event|Public|BlueprintEvent|Const) // Param Size : 0x15, 0x7FF653FAFDF0
	bool Received_NotifyEnd(struct USkeletalMeshComponent* MeshComp, struct UAnimSequenceBase* Animation); // Function Engine.AnimNotifyState.Received_NotifyEnd // (Event|Public|BlueprintEvent|Const) // Param Size : 0x11, 0x7FF653FAFDF0
	bool Received_NotifyBegin(struct USkeletalMeshComponent* MeshComp, struct UAnimSequenceBase* Animation, float TotalDuration); // Function Engine.AnimNotifyState.Received_NotifyBegin // (Event|Public|BlueprintEvent|Const) // Param Size : 0x15, 0x7FF653FAFDF0
	struct FString GetNotifyName(); // Function Engine.AnimNotifyState.GetNotifyName // (Native|Event|Public|BlueprintEvent|Const) // Param Size : 0x10, 0x7FF653CAA500
};

// Class Engine.Info
// Size : 0x220 (Inherited : 0x220)
struct AInfo : AActor {
};

// Class Engine.GameModeBase
// Size : 0x2C0 (Inherited : 0x220)
struct AGameModeBase : AInfo {
	struct FString OptionsString; // 0x220(0x10)
	class AGameSession* GameSessionClass; // 0x230(0x8)
	class AGameStateBase* GameStateClass; // 0x238(0x8)
	class APlayerController* PlayerControllerClass; // 0x240(0x8)
	class APlayerState* PlayerStateClass; // 0x248(0x8)
	class AHUD* HUDClass; // 0x250(0x8)
	class APawn* DefaultPawnClass; // 0x258(0x8)
	class ASpectatorPawn* SpectatorClass; // 0x260(0x8)
	class APlayerController* ReplaySpectatorPlayerControllerClass; // 0x268(0x8)
	class AServerStatReplicator* ServerStatReplicatorClass; // 0x270(0x8)
	struct AGameSession* GameSession; // 0x278(0x8)
	struct AGameStateBase* GameState; // 0x280(0x8)
	struct AServerStatReplicator* ServerStatReplicator; // 0x288(0x8)
	struct FText DefaultPlayerName; // 0x290(0x18)
	unsigned char bUseSeamlessTravel : 1; // 0x2A8(0x1)
	unsigned char bStartPlayersAsSpectators : 1; // 0x2A8(0x1)
	unsigned char bPauseable : 1; // 0x2A8(0x1)
	unsigned char UnknownData_2A8_3 : 5; // 0x2A8(0x1)
	unsigned char UnknownData_2A9[0x0017]; // 0x2A9(0x17)

	void StartPlay(); // Function Engine.GameModeBase.StartPlay // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655709B80
	struct APawn* SpawnDefaultPawnFor(struct AController* NewPlayer, struct AActor* StartSpot); // Function Engine.GameModeBase.SpawnDefaultPawnFor // (Native|Event|Public|BlueprintEvent) // Param Size : 0x18, 0x7FF655707D50
	struct APawn* SpawnDefaultPawnAtTransform(struct AController* NewPlayer, struct FTransform SpawnTransform); // Function Engine.GameModeBase.SpawnDefaultPawnAtTransform // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0x48, 0x7FF655707C30
	bool ShouldReset(struct AActor* ActorToReset); // Function Engine.GameModeBase.ShouldReset // (Native|Event|Public|BlueprintEvent) // Param Size : 0x9, 0x7FF655707750
	void ReturnToMainMenuHost(); // Function Engine.GameModeBase.ReturnToMainMenuHost // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655706760
	void RestartPlayerAtTransform(struct AController* NewPlayer, struct FTransform SpawnTransform); // Function Engine.GameModeBase.RestartPlayerAtTransform // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF655706640
	void RestartPlayerAtPlayerStart(struct AController* NewPlayer, struct AActor* StartSpot); // Function Engine.GameModeBase.RestartPlayerAtPlayerStart // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655706570
	void RestartPlayer(struct AController* NewPlayer); // Function Engine.GameModeBase.RestartPlayer // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557064E0
	void ResetLevel(); // Function Engine.GameModeBase.ResetLevel // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557064A0
	bool PlayerCanRestart(struct APlayerController* Player); // Function Engine.GameModeBase.PlayerCanRestart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // Param Size : 0x9, 0x7FF655705E00
	bool MustSpectate(struct APlayerController* NewPlayerController); // Function Engine.GameModeBase.MustSpectate // (Native|Event|Public|BlueprintEvent|Const) // Param Size : 0x9, 0x7FF655704F00
	void K2_PostLogin(struct APlayerController* NewPlayer); // Function Engine.GameModeBase.K2_PostLogin // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void K2_OnSwapPlayerControllers(struct APlayerController* OldPC, struct APlayerController* NewPC); // Function Engine.GameModeBase.K2_OnSwapPlayerControllers // (Event|Protected|BlueprintEvent) // Param Size : 0x10, 0x7FF653FAFDF0
	void K2_OnRestartPlayer(struct AController* NewPlayer); // Function Engine.GameModeBase.K2_OnRestartPlayer // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void K2_OnLogout(struct AController* ExitingController); // Function Engine.GameModeBase.K2_OnLogout // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void K2_OnChangeName(struct AController* Other, struct FString NewName, bool bNameChange); // Function Engine.GameModeBase.K2_OnChangeName // (Event|Public|BlueprintEvent) // Param Size : 0x19, 0x7FF653FAFDF0
	struct AActor* K2_FindPlayerStart(struct AController* Player, struct FString IncomingName); // Function Engine.GameModeBase.K2_FindPlayerStart // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655704670
	void InitStartSpot(struct AActor* StartSpot, struct AController* NewPlayer); // Function Engine.GameModeBase.InitStartSpot // (Native|Event|Public|BlueprintEvent) // Param Size : 0x10, 0x7FF6557044A0
	void InitializeHUDForPlayer(struct APlayerController* NewPlayer); // Function Engine.GameModeBase.InitializeHUDForPlayer // (Native|Event|Protected|BlueprintEvent) // Param Size : 0x8, 0x7FF6556F06C0
	bool HasMatchStarted(); // Function Engine.GameModeBase.HasMatchStarted // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF655704330
	void HandleStartingNewPlayer(struct APlayerController* NewPlayer); // Function Engine.GameModeBase.HandleStartingNewPlayer // (Native|Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF6557041D0
	int32_t GetNumSpectators(); // Function Engine.GameModeBase.GetNumSpectators // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655703320
	int32_t GetNumPlayers(); // Function Engine.GameModeBase.GetNumPlayers // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557032F0
	class UObject* GetDefaultPawnClassForController(struct AController* InController); // Function Engine.GameModeBase.GetDefaultPawnClassForController // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // Param Size : 0x10, 0x7FF655702D90
	struct AActor* FindPlayerStart(struct AController* Player, struct FString IncomingName); // Function Engine.GameModeBase.FindPlayerStart // (Native|Event|Public|BlueprintEvent) // Param Size : 0x20, 0x7FF655701E50
	struct AActor* ChoosePlayerStart(struct AController* Player); // Function Engine.GameModeBase.ChoosePlayerStart // (Native|Event|Public|BlueprintEvent) // Param Size : 0x10, 0x7FF6557012B0
	void ChangeName(struct AController* Controller, struct FString NewName, bool bNameChange); // Function Engine.GameModeBase.ChangeName // (Native|Public|BlueprintCallable) // Param Size : 0x19, 0x7FF655701190
	bool CanSpectate(struct APlayerController* Viewer, struct APlayerState* ViewTarget); // Function Engine.GameModeBase.CanSpectate // (Native|Event|Public|BlueprintEvent) // Param Size : 0x11, 0x7FF6557010A0
};

// Class Engine.GameMode
// Size : 0x308 (Inherited : 0x2C0)
struct AGameMode : AGameModeBase {
	struct FName MatchState; // 0x2C0(0x8)
	unsigned char bDelayedStart : 1; // 0x2C8(0x1)
	unsigned char UnknownData_2C8_1 : 7; // 0x2C8(0x1)
	unsigned char UnknownData_2C9[0x0003]; // 0x2C9(0x3)
	int32_t NumSpectators; // 0x2CC(0x4)
	int32_t NumPlayers; // 0x2D0(0x4)
	int32_t NumBots; // 0x2D4(0x4)
	float MinRespawnDelay; // 0x2D8(0x4)
	int32_t NumTravellingPlayers; // 0x2DC(0x4)
	class ULocalMessage* EngineMessageClass; // 0x2E0(0x8)
	struct TArray<struct APlayerState*> InactivePlayerArray; // 0x2E8(0x10)
	float InactivePlayerStateLifeSpan; // 0x2F8(0x4)
	int32_t MaxInactivePlayers; // 0x2FC(0x4)
	bool bHandleDedicatedServerReplays; // 0x300(0x1)
	unsigned char UnknownData_301[0x0007]; // 0x301(0x7)

	void StartMatch(); // Function Engine.GameMode.StartMatch // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655709B60
	void SetBandwidthLimit(float AsyncIOBandwidthLimit); // Function Engine.GameMode.SetBandwidthLimit // (Exec|Native|Public) // Param Size : 0x4, 0x7FF655706930
	void Say(struct FString Msg); // Function Engine.GameMode.Say // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655706890
	void RestartGame(); // Function Engine.GameMode.RestartGame // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557064C0
	bool ReadyToStartMatch(); // Function Engine.GameMode.ReadyToStartMatch // (Native|Event|Protected|BlueprintEvent) // Param Size : 0x1, 0x7FF6557061F0
	bool ReadyToEndMatch(); // Function Engine.GameMode.ReadyToEndMatch // (Native|Event|Protected|BlueprintEvent) // Param Size : 0x1, 0x7FF6557061C0
	void K2_OnSetMatchState(struct FName NewState); // Function Engine.GameMode.K2_OnSetMatchState // (Event|Protected|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	bool IsMatchInProgress(); // Function Engine.GameMode.IsMatchInProgress // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556D7470
	bool HasMatchEnded(); // Function Engine.GameMode.HasMatchEnded // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF655704300
	struct FName GetMatchState(); // Function Engine.GameMode.GetMatchState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF655703250
	void EndMatch(); // Function Engine.GameMode.EndMatch // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655701CE0
	void AbortMatch(); // Function Engine.GameMode.AbortMatch // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556FE890
};

// Class Engine.GameStateBase
// Size : 0x270 (Inherited : 0x220)
struct AGameStateBase : AInfo {
	class AGameModeBase* GameModeClass; // 0x220(0x8)
	struct AGameModeBase* AuthorityGameMode; // 0x228(0x8)
	class ASpectatorPawn* SpectatorClass; // 0x230(0x8)
	struct TArray<struct APlayerState*> PlayerArray; // 0x238(0x10)
	bool bReplicatedHasBegunPlay; // 0x248(0x1)
	unsigned char UnknownData_249[0x0003]; // 0x249(0x3)
	float ReplicatedWorldTimeSeconds; // 0x24C(0x4)
	float ServerWorldTimeSecondsDelta; // 0x250(0x4)
	float ServerWorldTimeSecondsUpdateFrequency; // 0x254(0x4)
	unsigned char UnknownData_258[0x0018]; // 0x258(0x18)

	void OnRep_SpectatorClass(); // Function Engine.GameStateBase.OnRep_SpectatorClass // (Native|Protected) // Param Size : 0x0, 0x7FF65570CCE0
	void OnRep_ReplicatedWorldTimeSeconds(); // Function Engine.GameStateBase.OnRep_ReplicatedWorldTimeSeconds // (Native|Protected) // Param Size : 0x0, 0x7FF65570CCC0
	void OnRep_ReplicatedHasBegunPlay(); // Function Engine.GameStateBase.OnRep_ReplicatedHasBegunPlay // (Native|Protected) // Param Size : 0x0, 0x7FF65570CCA0
	void OnRep_GameModeClass(); // Function Engine.GameStateBase.OnRep_GameModeClass // (Native|Protected) // Param Size : 0x0, 0x7FF6556E62E0
	bool HasMatchStarted(); // Function Engine.GameStateBase.HasMatchStarted // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CA60
	bool HasBegunPlay(); // Function Engine.GameStateBase.HasBegunPlay // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CA30
	float GetServerWorldTimeSeconds(); // Function Engine.GameStateBase.GetServerWorldTimeSeconds // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C8D0
	float GetPlayerStartTime(struct AController* Controller); // Function Engine.GameStateBase.GetPlayerStartTime // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF65570C3E0
	float GetPlayerRespawnDelay(struct AController* Controller); // Function Engine.GameStateBase.GetPlayerRespawnDelay // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF65570C340
};

// Class Engine.GameState
// Size : 0x290 (Inherited : 0x270)
struct AGameState : AGameStateBase {
	struct FName MatchState; // 0x270(0x8)
	struct FName PreviousMatchState; // 0x278(0x8)
	int32_t ElapsedTime; // 0x280(0x4)
	unsigned char UnknownData_284[0x000C]; // 0x284(0xC)

	void OnRep_MatchState(); // Function Engine.GameState.OnRep_MatchState // (Native|Public) // Param Size : 0x0, 0x7FF6557064A0
	void OnRep_ElapsedTime(); // Function Engine.GameState.OnRep_ElapsedTime // (Native|Public) // Param Size : 0x0, 0x7FF655706760
};

// Class Engine.Controller
// Size : 0x298 (Inherited : 0x220)
struct AController : AActor {
	unsigned char UnknownData_220[0x0008]; // 0x220(0x8)
	struct APlayerState* PlayerState; // 0x228(0x8)
	unsigned char UnknownData_230[0x0008]; // 0x230(0x8)
	struct FMulticastInlineDelegate OnInstigatedAnyDamage; // 0x238(0x10)
	struct FName StateName; // 0x248(0x8)
	struct APawn* Pawn; // 0x250(0x8)
	unsigned char UnknownData_258[0x0008]; // 0x258(0x8)
	struct ACharacter* Character; // 0x260(0x8)
	struct USceneComponent* TransformComponent; // 0x268(0x8)
	unsigned char UnknownData_270[0x0018]; // 0x270(0x18)
	struct FRotator ControlRotation; // 0x288(0xC)
	unsigned char bAttachToPawn : 1; // 0x294(0x1)
	unsigned char UnknownData_294_1 : 7; // 0x294(0x1)
	unsigned char UnknownData_295[0x0003]; // 0x295(0x3)

	void UnPossess(); // Function Engine.Controller.UnPossess // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E66A0
	void StopMovement(); // Function Engine.Controller.StopMovement // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E6680
	void SetInitialLocationAndRotation(struct FVector NewLocation, struct FRotator NewRotation); // Function Engine.Controller.SetInitialLocationAndRotation // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6556E6590
	void SetIgnoreMoveInput(bool bNewMoveInput); // Function Engine.Controller.SetIgnoreMoveInput // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556E6500
	void SetIgnoreLookInput(bool bNewLookInput); // Function Engine.Controller.SetIgnoreLookInput // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556E6470
	void SetControlRotation(struct FRotator NewRotation); // Function Engine.Controller.SetControlRotation // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6556E63E0
	void ResetIgnoreMoveInput(); // Function Engine.Controller.ResetIgnoreMoveInput // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E63C0
	void ResetIgnoreLookInput(); // Function Engine.Controller.ResetIgnoreLookInput // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E63A0
	void ResetIgnoreInputFlags(); // Function Engine.Controller.ResetIgnoreInputFlags // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E6380
	void ReceiveUnPossess(struct APawn* UnpossessedPawn); // Function Engine.Controller.ReceiveUnPossess // (Event|Protected|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceivePossess(struct APawn* PossessedPawn); // Function Engine.Controller.ReceivePossess // (Event|Protected|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveInstigatedAnyDamage(float Damage, struct UDamageType* DamageType, struct AActor* DamagedActor, struct AActor* DamageCauser); // Function Engine.Controller.ReceiveInstigatedAnyDamage // (BlueprintAuthorityOnly|Event|Protected|BlueprintEvent) // Param Size : 0x20, 0x7FF653FAFDF0
	void Possess(struct APawn* InPawn); // Function Engine.Controller.Possess // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556E6300
	void OnRep_PlayerState(); // Function Engine.Controller.OnRep_PlayerState // (Native|Public) // Param Size : 0x0, 0x7FF6556E62E0
	void OnRep_Pawn(); // Function Engine.Controller.OnRep_Pawn // (Native|Public) // Param Size : 0x0, 0x7FF65320BD60
	bool LineOfSightTo(struct AActor* Other, struct FVector ViewPoint, bool bAlternateChecks); // Function Engine.Controller.LineOfSightTo // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x16, 0x7FF6556E61C0
	struct APawn* K2_GetPawn(); // Function Engine.Controller.K2_GetPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556E6190
	bool IsPlayerController(); // Function Engine.Controller.IsPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556E6160
	bool IsMoveInputIgnored(); // Function Engine.Controller.IsMoveInputIgnored // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556E6130
	bool IsLookInputIgnored(); // Function Engine.Controller.IsLookInputIgnored // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556E6100
	bool IsLocalPlayerController(); // Function Engine.Controller.IsLocalPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556E60B0
	bool IsLocalController(); // Function Engine.Controller.IsLocalController // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556E6080
	struct AActor* GetViewTarget(); // Function Engine.Controller.GetViewTarget // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556E6050
	struct FRotator GetDesiredRotation(); // Function Engine.Controller.GetDesiredRotation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556E5C80
	struct FRotator GetControlRotation(); // Function Engine.Controller.GetControlRotation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556E5A10
	void ClientSetRotation(struct FRotator NewRotation, bool bResetCamera); // Function Engine.Controller.ClientSetRotation // (Net|NetReliable|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0xD, 0x7FF6556E5850
	void ClientSetLocation(struct FVector NewLocation, struct FRotator NewRotation); // Function Engine.Controller.ClientSetLocation // (Net|NetReliable|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x18, 0x7FF6556E5770
	struct APlayerController* CastToPlayerController(); // Function Engine.Controller.CastToPlayerController // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556E5740
};

// Class Engine.PlayerController
// Size : 0x570 (Inherited : 0x298)
struct APlayerController : AController {
	struct UPlayer* Player; // 0x298(0x8)
	struct APawn* AcknowledgedPawn; // 0x2A0(0x8)
	struct UInterpTrackInstDirector* ControllingDirTrackInst; // 0x2A8(0x8)
	struct AHUD* MyHUD; // 0x2B0(0x8)
	struct APlayerCameraManager* PlayerCameraManager; // 0x2B8(0x8)
	class APlayerCameraManager* PlayerCameraManagerClass; // 0x2C0(0x8)
	bool bAutoManageActiveCameraTarget; // 0x2C8(0x1)
	unsigned char UnknownData_2C9[0x0003]; // 0x2C9(0x3)
	struct FRotator TargetViewRotation; // 0x2CC(0xC)
	unsigned char UnknownData_2D8[0x000C]; // 0x2D8(0xC)
	float SmoothTargetViewRotationSpeed; // 0x2E4(0x4)
	unsigned char UnknownData_2E8[0x0008]; // 0x2E8(0x8)
	struct TArray<struct AActor*> HiddenActors; // 0x2F0(0x10)
	struct TArray<struct FWeakObjectPtr<struct UPrimitiveComponent>> HiddenPrimitiveComponents; // 0x300(0x10)
	unsigned char UnknownData_310[0x0004]; // 0x310(0x4)
	float LastSpectatorStateSynchTime; // 0x314(0x4)
	struct FVector LastSpectatorSyncLocation; // 0x318(0xC)
	struct FRotator LastSpectatorSyncRotation; // 0x324(0xC)
	int32_t ClientCap; // 0x330(0x4)
	unsigned char UnknownData_334[0x0004]; // 0x334(0x4)
	struct UCheatManager* CheatManager; // 0x338(0x8)
	class UCheatManager* CheatClass; // 0x340(0x8)
	struct UPlayerInput* PlayerInput; // 0x348(0x8)
	struct TArray<struct FActiveForceFeedbackEffect> ActiveForceFeedbackEffects; // 0x350(0x10)
	unsigned char UnknownData_360[0x0070]; // 0x360(0x70)
	unsigned char UnknownData_3D0_0 : 4; // 0x3D0(0x1)
	unsigned char bPlayerIsWaiting : 1; // 0x3D0(0x1)
	unsigned char UnknownData_3D0_5 : 3; // 0x3D0(0x1)
	unsigned char UnknownData_3D1[0x0003]; // 0x3D1(0x3)
	enum class None NetPlayerIndex; // 0x3D4(0x1)
	unsigned char UnknownData_3D5[0x003B]; // 0x3D5(0x3B)
	struct UNetConnection* PendingSwapConnection; // 0x410(0x8)
	struct UNetConnection* NetConnection; // 0x418(0x8)
	unsigned char UnknownData_420[0x000C]; // 0x420(0xC)
	float InputYawScale; // 0x42C(0x4)
	float InputPitchScale; // 0x430(0x4)
	float InputRollScale; // 0x434(0x4)
	unsigned char bShowMouseCursor : 1; // 0x438(0x1)
	unsigned char bEnableClickEvents : 1; // 0x438(0x1)
	unsigned char bEnableTouchEvents : 1; // 0x438(0x1)
	unsigned char bEnableMouseOverEvents : 1; // 0x438(0x1)
	unsigned char bEnableTouchOverEvents : 1; // 0x438(0x1)
	unsigned char bForceFeedbackEnabled : 1; // 0x438(0x1)
	unsigned char UnknownData_438_6 : 2; // 0x438(0x1)
	unsigned char UnknownData_439[0x0003]; // 0x439(0x3)
	float ForceFeedbackScale; // 0x43C(0x4)
	struct TArray<struct FKey> ClickEventKeys; // 0x440(0x10)
	enum class EMouseCursor DefaultMouseCursor; // 0x450(0x1)
	enum class EMouseCursor CurrentMouseCursor; // 0x451(0x1)
	enum class ECollisionChannel DefaultClickTraceChannel; // 0x452(0x1)
	enum class ECollisionChannel CurrentClickTraceChannel; // 0x453(0x1)
	float HitResultTraceDistance; // 0x454(0x4)
	uint16 SeamlessTravelCount; // 0x458(0x2)
	uint16 LastCompletedSeamlessTravelCount; // 0x45A(0x2)
	unsigned char UnknownData_45C[0x0074]; // 0x45C(0x74)
	struct UInputComponent* InactiveStateInputComponent; // 0x4D0(0x8)
	unsigned char UnknownData_4D8_0 : 2; // 0x4D8(0x1)
	unsigned char bShouldPerformFullTickWhenPaused : 1; // 0x4D8(0x1)
	unsigned char UnknownData_4D8_3 : 5; // 0x4D8(0x1)
	unsigned char UnknownData_4D9[0x0017]; // 0x4D9(0x17)
	struct UTouchInterface* CurrentTouchInterface; // 0x4F0(0x8)
	unsigned char UnknownData_4F8[0x0050]; // 0x4F8(0x50)
	struct ASpectatorPawn* SpectatorPawn; // 0x548(0x8)
	unsigned char UnknownData_550[0x0004]; // 0x550(0x4)
	bool bIsLocalPlayerController; // 0x554(0x1)
	unsigned char UnknownData_555[0x0003]; // 0x555(0x3)
	struct FVector SpawnLocation; // 0x558(0xC)
	unsigned char UnknownData_564[0x000C]; // 0x564(0xC)

	bool WasInputKeyJustReleased(struct FKey Key); // Function Engine.PlayerController.WasInputKeyJustReleased // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x19, 0x7FF6557BE2A0
	bool WasInputKeyJustPressed(struct FKey Key); // Function Engine.PlayerController.WasInputKeyJustPressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x19, 0x7FF6557BE1B0
	void ToggleSpeaking(bool bInSpeaking); // Function Engine.PlayerController.ToggleSpeaking // (Exec|Native|Public) // Param Size : 0x1, 0x7FF6557BE120
	void TestServerLevelVisibilityChange(struct FName PackageName, struct FName Filename); // Function Engine.PlayerController.TestServerLevelVisibilityChange // (Final|Exec|Native|Private) // Param Size : 0x10, 0x7FF6557BE060
	void SwitchLevel(struct FString URL); // Function Engine.PlayerController.SwitchLevel // (Exec|Native|Public) // Param Size : 0x10, 0x7FF6557BDFC0
	void StopHapticEffect(enum class EControllerHand Hand); // Function Engine.PlayerController.StopHapticEffect // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557BDF40
	void StartFire(enum class None FireModeNum); // Function Engine.PlayerController.StartFire // (Exec|Native|Public) // Param Size : 0x1, 0x7FF6557BD970
	void SetVirtualJoystickVisibility(bool bVisible); // Function Engine.PlayerController.SetVirtualJoystickVisibility // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557BD710
	void SetViewTargetWithBlend(struct AActor* NewViewTarget, float BlendTime, enum class EViewTargetBlendFunction BlendFunc, float BlendExp, bool bLockOutgoing); // Function Engine.PlayerController.SetViewTargetWithBlend // (Native|Public|BlueprintCallable) // Param Size : 0x15, 0x7FF6557BD590
	void SetName(struct FString S); // Function Engine.PlayerController.SetName // (Exec|Native|Public) // Param Size : 0x10, 0x7FF6557BD4F0
	void SetMouseLocation(int32_t X, int32_t Y); // Function Engine.PlayerController.SetMouseLocation // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557BD430
	void SetMouseCursorWidget(enum class EMouseCursor Cursor, struct UUserWidget* CursorWidget); // Function Engine.PlayerController.SetMouseCursorWidget // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557BD370
	void SetHapticsByValue(float Frequency, float Amplitude, enum class EControllerHand Hand); // Function Engine.PlayerController.SetHapticsByValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557BD150
	void SetDisableHaptics(bool bNewDisabled); // Function Engine.PlayerController.SetDisableHaptics // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557BD0A0
	void SetControllerLightColor(struct FColor Color); // Function Engine.PlayerController.SetControllerLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x4, 0x7FF6557BD030
	void SetCinematicMode(bool bInCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning); // Function Engine.PlayerController.SetCinematicMode // (Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557BCE70
	void SetAudioListenerOverride(struct USceneComponent* AttachToComponent, struct FVector Location, struct FRotator Rotation); // Function Engine.PlayerController.SetAudioListenerOverride // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557BCD50
	void SetAudioListenerAttenuationOverride(struct USceneComponent* AttachToComponent, struct FVector AttenuationLocationOVerride); // Function Engine.PlayerController.SetAudioListenerAttenuationOverride // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557BCC80
	void ServerViewSelf(struct FViewTargetTransitionParams TransitionParams); // Function Engine.PlayerController.ServerViewSelf // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x10, 0x7FF6557BCB90
	void ServerViewPrevPlayer(); // Function Engine.PlayerController.ServerViewPrevPlayer // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BCB40
	void ServerViewNextPlayer(); // Function Engine.PlayerController.ServerViewNextPlayer // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BCAF0
	void ServerVerifyViewTarget(); // Function Engine.PlayerController.ServerVerifyViewTarget // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BCAA0
	void ServerUpdateMultipleLevelsVisibility(struct TArray<struct FUpdateLevelVisibilityLevelInfo> LevelVisibilities); // Function Engine.PlayerController.ServerUpdateMultipleLevelsVisibility // (Final|Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x10, 0x7FF6557BC9E0
	void ServerUpdateLevelVisibility(struct FUpdateLevelVisibilityLevelInfo LevelVisibility); // Function Engine.PlayerController.ServerUpdateLevelVisibility // (Final|Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x14, 0x7FF6557BC920
	void ServerUpdateCamera(struct FVector_NetQuantize CamLoc, int32_t CamPitchAndYaw); // Function Engine.PlayerController.ServerUpdateCamera // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x10, 0x7FF6557BC800
	void ServerUnmutePlayer(struct FUniqueNetIdRepl PlayerId); // Function Engine.PlayerController.ServerUnmutePlayer // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x28, 0x7FF6557BC6A0
	void ServerToggleAILogging(); // Function Engine.PlayerController.ServerToggleAILogging // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BC650
	void ServerShortTimeout(); // Function Engine.PlayerController.ServerShortTimeout // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BC600
	void ServerSetSpectatorWaiting(bool bWaiting); // Function Engine.PlayerController.ServerSetSpectatorWaiting // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x1, 0x7FF6557BC540
	void ServerSetSpectatorLocation(struct FVector NewLoc, struct FRotator NewRot); // Function Engine.PlayerController.ServerSetSpectatorLocation // (Net|Native|Event|Public|NetServer|HasDefaults|NetValidate) // Param Size : 0x18, 0x7FF6557BC410
	void ServerRestartPlayer(); // Function Engine.PlayerController.ServerRestartPlayer // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BC3C0
	void ServerPause(); // Function Engine.PlayerController.ServerPause // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BC370
	void ServerNotifyLoadedWorld(struct FName WorldPackageName); // Function Engine.PlayerController.ServerNotifyLoadedWorld // (Final|Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x8, 0x7FF6557BC2C0
	void ServerMutePlayer(struct FUniqueNetIdRepl PlayerId); // Function Engine.PlayerController.ServerMutePlayer // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x28, 0x7FF6557BC160
	void ServerExecRPC(struct FString Msg); // Function Engine.PlayerController.ServerExecRPC // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x10, 0x7FF6557BC0A0
	void ServerExec(struct FString Msg); // Function Engine.PlayerController.ServerExec // (Final|Exec|Native|Public) // Param Size : 0x10, 0x7FF6557BC000
	void ServerCheckClientPossessionReliable(); // Function Engine.PlayerController.ServerCheckClientPossessionReliable // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BBFB0
	void ServerCheckClientPossession(); // Function Engine.PlayerController.ServerCheckClientPossession // (Net|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6557BBF60
	void ServerChangeName(struct FString S); // Function Engine.PlayerController.ServerChangeName // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x10, 0x7FF6557BBEA0
	void ServerCamera(struct FName NewMode); // Function Engine.PlayerController.ServerCamera // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x8, 0x7FF6557BBDE0
	void ServerAcknowledgePossession(struct APawn* P); // Function Engine.PlayerController.ServerAcknowledgePossession // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x8, 0x7FF6557BBD20
	void SendToConsole(struct FString Command); // Function Engine.PlayerController.SendToConsole // (Exec|Native|Public) // Param Size : 0x10, 0x7FF6557BBC80
	void RestartLevel(); // Function Engine.PlayerController.RestartLevel // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6557BBC60
	void ResetControllerLightColor(); // Function Engine.PlayerController.ResetControllerLightColor // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557BBC40
	bool ProjectWorldLocationToScreen(struct FVector WorldLocation, struct FVector2D ScreenLocation, bool bPlayerViewportRelative); // Function Engine.PlayerController.ProjectWorldLocationToScreen // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x16, 0x7FF6557BBA70
	void PlayHapticEffect(struct UHapticFeedbackEffect_Base* HapticEffect, enum class EControllerHand Hand, float Scale, bool bLoop); // Function Engine.PlayerController.PlayHapticEffect // (Final|Native|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF6557BB920
	void PlayDynamicForceFeedback(float Intensity, float Duration, bool bAffectsLeftLarge, bool bAffectsLeftSmall, bool bAffectsRightLarge, bool bAffectsRightSmall, enum class EDynamicForceFeedbackAction Action, struct FLatentActionInfo LatentInfo); // Function Engine.PlayerController.PlayDynamicForceFeedback // (Final|Native|Private|BlueprintCallable) // Param Size : 0x28, 0x7FF6557BB6A0
	void Pause(); // Function Engine.PlayerController.Pause // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6557BAFE0
	void OnServerStartedVisualLogger(bool bIsLogging); // Function Engine.PlayerController.OnServerStartedVisualLogger // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x1, 0x7FF6557BAF50
	void LocalTravel(struct FString URL); // Function Engine.PlayerController.LocalTravel // (Exec|Native|Public) // Param Size : 0x10, 0x7FF6557BAEB0
	void K2_ClientPlayForceFeedback(struct UForceFeedbackEffect* ForceFeedbackEffect, struct FName Tag, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused); // Function Engine.PlayerController.K2_ClientPlayForceFeedback // (Final|Native|Public|BlueprintCallable) // Param Size : 0x13, 0x7FF6557BAD00
	bool IsInputKeyDown(struct FKey Key); // Function Engine.PlayerController.IsInputKeyDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x19, 0x7FF6557BAC10
	void GetViewportSize(int32_t SizeX, int32_t SizeY); // Function Engine.PlayerController.GetViewportSize // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557BAB30
	struct ASpectatorPawn* GetSpectatorPawn(); // Function Engine.PlayerController.GetSpectatorPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557BAB10
	bool GetMousePosition(float LocationX, float LocationY); // Function Engine.PlayerController.GetMousePosition // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9, 0x7FF6557BA9F0
	struct FVector GetInputVectorKeyState(struct FKey Key); // Function Engine.PlayerController.GetInputVectorKeyState // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x24, 0x7FF6557BA8F0
	void GetInputTouchState(enum class ETouchIndex FingerIndex, float LocationX, float LocationY, bool bIsCurrentlyPressed); // Function Engine.PlayerController.GetInputTouchState // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xD, 0x7FF6557BA770
	void GetInputMouseDelta(float DeltaX, float DeltaY); // Function Engine.PlayerController.GetInputMouseDelta // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557BA690
	void GetInputMotionState(struct FVector Tilt, struct FVector RotationRate, struct FVector Gravity, struct FVector Acceleration); // Function Engine.PlayerController.GetInputMotionState // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x30, 0x7FF6557BA500
	float GetInputKeyTimeDown(struct FKey Key); // Function Engine.PlayerController.GetInputKeyTimeDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557BA410
	void GetInputAnalogStickState(enum class EControllerAnalogStick WhichStick, float StickX, float StickY); // Function Engine.PlayerController.GetInputAnalogStickState // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557BA2F0
	float GetInputAnalogKeyState(struct FKey Key); // Function Engine.PlayerController.GetInputAnalogKeyState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557BA200
	struct AHUD* GetHUD(); // Function Engine.PlayerController.GetHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557B9640
	bool GetHitResultUnderFingerForObjects(enum class ETouchIndex FingerIndex, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct FHitResult HitResult); // Function Engine.PlayerController.GetHitResultUnderFingerForObjects // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xA5, 0x7FF6557BA040
	bool GetHitResultUnderFingerByChannel(enum class ETouchIndex FingerIndex, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct FHitResult HitResult); // Function Engine.PlayerController.GetHitResultUnderFingerByChannel // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8D, 0x7FF6557B9EA0
	bool GetHitResultUnderFinger(enum class ETouchIndex FingerIndex, enum class ECollisionChannel TraceChannel, bool bTraceComplex, struct FHitResult HitResult); // Function Engine.PlayerController.GetHitResultUnderFinger // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8D, 0x7FF6557B9D00
	bool GetHitResultUnderCursorForObjects(struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct FHitResult HitResult); // Function Engine.PlayerController.GetHitResultUnderCursorForObjects // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x9D, 0x7FF6557B9B80
	bool GetHitResultUnderCursorByChannel(enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct FHitResult HitResult); // Function Engine.PlayerController.GetHitResultUnderCursorByChannel // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8D, 0x7FF6557B9A20
	bool GetHitResultUnderCursor(enum class ECollisionChannel TraceChannel, bool bTraceComplex, struct FHitResult HitResult); // Function Engine.PlayerController.GetHitResultUnderCursor // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8D, 0x7FF6557B98C0
	struct FVector GetFocalLocation(); // Function Engine.PlayerController.GetFocalLocation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557B9600
	void FOV(float NewFOV); // Function Engine.PlayerController.FOV // (Exec|Native|Public) // Param Size : 0x4, 0x7FF6557B9420
	void EnableCheats(); // Function Engine.PlayerController.EnableCheats // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6557B9400
	bool DeprojectScreenPositionToWorld(float ScreenX, float ScreenY, struct FVector WorldLocation, struct FVector WorldDirection); // Function Engine.PlayerController.DeprojectScreenPositionToWorld // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x21, 0x7FF6557B9280
	bool DeprojectMousePositionToWorld(struct FVector WorldLocation, struct FVector WorldDirection); // Function Engine.PlayerController.DeprojectMousePositionToWorld // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x19, 0x7FF6557B9180
	void ConsoleKey(struct FKey Key); // Function Engine.PlayerController.ConsoleKey // (Exec|Native|Public) // Param Size : 0x18, 0x7FF6557B90A0
	void ClientWasKicked(struct FText KickReason); // Function Engine.PlayerController.ClientWasKicked // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x18, 0x7FF6557B8FE0
	void ClientVoiceHandshakeComplete(); // Function Engine.PlayerController.ClientVoiceHandshakeComplete // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B8FC0
	void ClientUpdateMultipleLevelsStreamingStatus(struct TArray<struct FUpdateLevelStreamingLevelStatus> LevelStatuses); // Function Engine.PlayerController.ClientUpdateMultipleLevelsStreamingStatus // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x10, 0x7FF6557B8F20
	void ClientUpdateLevelStreamingStatus(struct FName PackageName, bool bNewShouldBeLoaded, bool bNewShouldBeVisible, bool bNewShouldBlockOnLoad, int32_t LODIndex); // Function Engine.PlayerController.ClientUpdateLevelStreamingStatus // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x10, 0x7FF6557B8D70
	void ClientUnmutePlayer(struct FUniqueNetIdRepl PlayerId); // Function Engine.PlayerController.ClientUnmutePlayer // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x28, 0x7FF6557B8C50
	void ClientTravelInternal(struct FString URL, enum class ETravelType TravelType, bool bSeamless, struct FGuid MapPackageGuid); // Function Engine.PlayerController.ClientTravelInternal // (Net|NetReliable|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x24, 0x7FF6557B8AE0
	void ClientTravel(struct FString URL, enum class ETravelType TravelType, bool bSeamless, struct FGuid MapPackageGuid); // Function Engine.PlayerController.ClientTravel // (Final|Native|Public|HasDefaults) // Param Size : 0x24, 0x7FF6557B8970
	void ClientTeamMessage(struct APlayerState* SenderPlayerState, struct FString S, struct FName Type, float MsgLifeTime); // Function Engine.PlayerController.ClientTeamMessage // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x24, 0x7FF6557B8810
	void ClientStopForceFeedback(struct UForceFeedbackEffect* ForceFeedbackEffect, struct FName Tag); // Function Engine.PlayerController.ClientStopForceFeedback // (Net|NetReliable|Native|Event|Public|NetClient|BlueprintCallable) // Param Size : 0x10, 0x7FF6557B8740
	void ClientStopCameraShakesFromSource(struct UCameraShakeSourceComponent* SourceComponent, bool bImmediately); // Function Engine.PlayerController.ClientStopCameraShakesFromSource // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557B8670
	void ClientStopCameraShake(class UCameraShake* Shake, bool bImmediately); // Function Engine.PlayerController.ClientStopCameraShake // (Net|NetReliable|Native|Event|Public|NetClient|BlueprintCallable) // Param Size : 0x9, 0x7FF6557B85A0
	void ClientStopCameraAnim(struct UCameraAnim* AnimToStop); // Function Engine.PlayerController.ClientStopCameraAnim // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x8, 0x7FF654E5A1F0
	void ClientStartOnlineSession(); // Function Engine.PlayerController.ClientStartOnlineSession // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B8580
	void ClientSpawnCameraLensEffect(class AEmitterCameraLensEffectBase* LensEffectEmitterClass); // Function Engine.PlayerController.ClientSpawnCameraLensEffect // (Net|Native|Event|Public|NetClient|BlueprintCallable) // Param Size : 0x8, 0x7FF6557B84F0
	void ClientSetViewTarget(struct AActor* A, struct FViewTargetTransitionParams TransitionParams); // Function Engine.PlayerController.ClientSetViewTarget // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x18, 0x7FF6557B8400
	void ClientSetSpectatorWaiting(bool bWaiting); // Function Engine.PlayerController.ClientSetSpectatorWaiting // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x1, 0x7FF6557B8370
	void ClientSetHUD(class AHUD* NewHUDClass); // Function Engine.PlayerController.ClientSetHUD // (Net|NetReliable|Native|Event|Public|NetClient|BlueprintCallable) // Param Size : 0x8, 0x7FF6557B82E0
	void ClientSetForceMipLevelsToBeResident(struct UMaterialInterface* Material, float ForceDuration, int32_t CinematicTextureGroups); // Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x10, 0x7FF6557B81E0
	void ClientSetCinematicMode(bool bInCinematicMode, bool bAffectsMovement, bool bAffectsTurning, bool bAffectsHUD); // Function Engine.PlayerController.ClientSetCinematicMode // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x4, 0x7FF6557B8070
	void ClientSetCameraMode(struct FName NewCamMode); // Function Engine.PlayerController.ClientSetCameraMode // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x8, 0x7FF6557B7FE0
	void ClientSetCameraFade(bool bEnableFading, struct FColor FadeColor, struct FVector2D FadeAlpha, float FadeTime, bool bFadeAudio); // Function Engine.PlayerController.ClientSetCameraFade // (Net|NetReliable|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x15, 0x7FF6557B7E50
	void ClientSetBlockOnAsyncLoading(); // Function Engine.PlayerController.ClientSetBlockOnAsyncLoading // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6535CB8D0
	void ClientReturnToMainMenuWithTextReason(struct FText ReturnReason); // Function Engine.PlayerController.ClientReturnToMainMenuWithTextReason // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x18, 0x7FF6557B7D90
	void ClientReturnToMainMenu(struct FString ReturnReason); // Function Engine.PlayerController.ClientReturnToMainMenu // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x10, 0x7FF6557B7CF0
	void ClientRetryClientRestart(struct APawn* NewPawn); // Function Engine.PlayerController.ClientRetryClientRestart // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x8, 0x7FF6557B7C60
	void ClientRestart(struct APawn* NewPawn); // Function Engine.PlayerController.ClientRestart // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x8, 0x7FF6557B7BD0
	void ClientReset(); // Function Engine.PlayerController.ClientReset // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B7BB0
	void ClientRepObjRef(struct UObject* Object); // Function Engine.PlayerController.ClientRepObjRef // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x8, 0x7FF6557B7B20
	void ClientReceiveLocalizedMessage(class ULocalMessage* Message, int32_t Switch, struct APlayerState* RelatedPlayerState_2, struct APlayerState* RelatedPlayerState_3, struct UObject* OptionalObject); // Function Engine.PlayerController.ClientReceiveLocalizedMessage // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x28, 0x7FF6557B79A0
	void ClientPrestreamTextures(struct AActor* ForcedActor, float ForceDuration, bool bEnableStreaming, int32_t CinematicTextureGroups); // Function Engine.PlayerController.ClientPrestreamTextures // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x14, 0x7FF6557B7850
	void ClientPrepareMapChange(struct FName LevelName, bool bFirst, bool bLast); // Function Engine.PlayerController.ClientPrepareMapChange // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0xA, 0x7FF6557B7740
	void ClientPlaySoundAtLocation(struct USoundBase* Sound, struct FVector Location, float VolumeMultiplier, float PitchMultiplier); // Function Engine.PlayerController.ClientPlaySoundAtLocation // (Net|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x1C, 0x7FF6557B75F0
	void ClientPlaySound(struct USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier); // Function Engine.PlayerController.ClientPlaySound // (Net|Native|Event|Public|NetClient) // Param Size : 0x10, 0x7FF6557B74F0
	void ClientPlayForceFeedback_Internal(struct UForceFeedbackEffect* ForceFeedbackEffect, struct FForceFeedbackParameters Params); // Function Engine.PlayerController.ClientPlayForceFeedback_Internal // (Final|Net|Native|Event|Private|NetClient) // Param Size : 0x14, 0x7FF6557B7400
	void ClientPlayCameraShakeFromSource(class UCameraShake* Shake, struct UCameraShakeSourceComponent* SourceComponent); // Function Engine.PlayerController.ClientPlayCameraShakeFromSource // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557B7340
	void ClientPlayCameraShake(class UCameraShake* Shake, float Scale, enum class ECameraAnimPlaySpace PlaySpace, struct FRotator UserPlaySpaceRot); // Function Engine.PlayerController.ClientPlayCameraShake // (Net|Native|Event|Public|HasDefaults|NetClient|BlueprintCallable) // Param Size : 0x1C, 0x7FF6557B71E0
	void ClientPlayCameraAnim(struct UCameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float BlendOutTime, bool bLoop, bool bRandomStartTime, enum class ECameraAnimPlaySpace Space, struct FRotator CustomPlaySpace); // Function Engine.PlayerController.ClientPlayCameraAnim // (Net|Native|Event|Public|HasDefaults|NetClient|BlueprintCallable) // Param Size : 0x28, 0x7FF6557B6F40
	void ClientMutePlayer(struct FUniqueNetIdRepl PlayerId); // Function Engine.PlayerController.ClientMutePlayer // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x28, 0x7FF6557B6E20
	void ClientMessage(struct FString S, struct FName Type, float MsgLifeTime); // Function Engine.PlayerController.ClientMessage // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x1C, 0x7FF6557B6D00
	void ClientIgnoreMoveInput(bool bIgnore); // Function Engine.PlayerController.ClientIgnoreMoveInput // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x1, 0x7FF6557B6C70
	void ClientIgnoreLookInput(bool bIgnore); // Function Engine.PlayerController.ClientIgnoreLookInput // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x1, 0x7FF6557B6BE0
	void ClientGotoState(struct FName NewState); // Function Engine.PlayerController.ClientGotoState // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x8, 0x7FF6557B6B50
	void ClientGameEnded(struct AActor* EndGameFocus, bool bIsWinner); // Function Engine.PlayerController.ClientGameEnded // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x9, 0x7FF6557B6A80
	void ClientForceGarbageCollection(); // Function Engine.PlayerController.ClientForceGarbageCollection // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B6A60
	void ClientFlushLevelStreaming(); // Function Engine.PlayerController.ClientFlushLevelStreaming // (Final|Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B6A40
	void ClientEndOnlineSession(); // Function Engine.PlayerController.ClientEndOnlineSession // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B6A20
	void ClientEnableNetworkVoice(bool bEnable); // Function Engine.PlayerController.ClientEnableNetworkVoice // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x1, 0x7FF6557B6990
	void ClientCommitMapChange(); // Function Engine.PlayerController.ClientCommitMapChange // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B6970
	void ClientClearCameraLensEffects(); // Function Engine.PlayerController.ClientClearCameraLensEffects // (Net|NetReliable|Native|Event|Public|NetClient|BlueprintCallable) // Param Size : 0x0, 0x7FF6557B6950
	void ClientCapBandwidth(int32_t Cap); // Function Engine.PlayerController.ClientCapBandwidth // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x4, 0x7FF6557B68C0
	void ClientCancelPendingMapChange(); // Function Engine.PlayerController.ClientCancelPendingMapChange // (Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557B68A0
	void ClientAddTextureStreamingLoc(struct FVector InLoc, float Duration, bool bOverrideLocation); // Function Engine.PlayerController.ClientAddTextureStreamingLoc // (Final|Net|NetReliable|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x11, 0x7FF6557B6780
	void ClearAudioListenerOverride(); // Function Engine.PlayerController.ClearAudioListenerOverride // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557B6760
	void ClearAudioListenerAttenuationOverride(); // Function Engine.PlayerController.ClearAudioListenerAttenuationOverride // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557B6740
	bool CanRestartPlayer(); // Function Engine.PlayerController.CanRestartPlayer // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557B6710
	void Camera(struct FName NewMode); // Function Engine.PlayerController.Camera // (Exec|Native|Public) // Param Size : 0x8, 0x7FF6557B6680
	void AddYawInput(float Val); // Function Engine.PlayerController.AddYawInput // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B6600
	void AddRollInput(float Val); // Function Engine.PlayerController.AddRollInput // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B6580
	void AddPitchInput(float Val); // Function Engine.PlayerController.AddPitchInput // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B6500
	void ActivateTouchInterface(struct UTouchInterface* NewTouchInterface); // Function Engine.PlayerController.ActivateTouchInterface // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557B6330
};

// Class Engine.ApplicationLifecycleComponent
// Size : 0x140 (Inherited : 0xB0)
struct UApplicationLifecycleComponent : UActorComponent {
	struct FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0xB0(0x10)
	struct FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0xC0(0x10)
	struct FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0xD0(0x10)
	struct FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0xE0(0x10)
	struct FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0xF0(0x10)
	struct FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x100(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x110(0x10)
	struct FMulticastInlineDelegate OnTemperatureChangeDelegate; // 0x120(0x10)
	struct FMulticastInlineDelegate OnLowPowerModeDelegate; // 0x130(0x10)
};

// Class Engine.Subsystem
// Size : 0x30 (Inherited : 0x28)
struct USubsystem : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
};

// Class Engine.DynamicSubsystem
// Size : 0x30 (Inherited : 0x30)
struct UDynamicSubsystem : USubsystem {
};

// Class Engine.EngineSubsystem
// Size : 0x30 (Inherited : 0x30)
struct UEngineSubsystem : UDynamicSubsystem {
};

// Class Engine.SoundEffectPreset
// Size : 0x40 (Inherited : 0x28)
struct USoundEffectPreset : UObject {
	unsigned char UnknownData_28[0x0018]; // 0x28(0x18)
};

// Class Engine.SoundEffectSourcePreset
// Size : 0x40 (Inherited : 0x40)
struct USoundEffectSourcePreset : USoundEffectPreset {
};

// Class Engine.SoundEffectSubmixPreset
// Size : 0x40 (Inherited : 0x40)
struct USoundEffectSubmixPreset : USoundEffectPreset {
};

// Class Engine.TriggerBase
// Size : 0x228 (Inherited : 0x220)
struct ATriggerBase : AActor {
	struct UShapeComponent* CollisionComponent; // 0x220(0x8)
};

// Class Engine.TriggerBox
// Size : 0x228 (Inherited : 0x228)
struct ATriggerBox : ATriggerBase {
};

// Class Engine.DataTable
// Size : 0xC8 (Inherited : 0x28)
struct UDataTable : UObject {
	struct UScriptStruct* RowStruct; // 0x28(0x8)
	unsigned char UnknownData_30[0x0050]; // 0x30(0x50)
	unsigned char bStripFromClientBuilds : 1; // 0x80(0x1)
	unsigned char bIgnoreExtraFields : 1; // 0x80(0x1)
	unsigned char bIgnoreMissingFields : 1; // 0x80(0x1)
	unsigned char UnknownData_80_3 : 5; // 0x80(0x1)
	unsigned char UnknownData_81[0x0007]; // 0x81(0x7)
	struct FString ImportKeyField; // 0x88(0x10)
	unsigned char UnknownData_98[0x0030]; // 0x98(0x30)
};

// Class Engine.CameraActor
// Size : 0x7B0 (Inherited : 0x220)
struct ACameraActor : AActor {
	enum class EAutoReceiveInput AutoActivateForPlayer; // 0x220(0x1)
	unsigned char UnknownData_221[0x0007]; // 0x221(0x7)
	struct UCameraComponent* CameraComponent; // 0x228(0x8)
	struct USceneComponent* SceneComponent; // 0x230(0x8)
	unsigned char UnknownData_238[0x0008]; // 0x238(0x8)
	unsigned char bConstrainAspectRatio : 1; // 0x240(0x1)
	unsigned char UnknownData_240_1 : 7; // 0x240(0x1)
	unsigned char UnknownData_241[0x0003]; // 0x241(0x3)
	float AspectRatio; // 0x244(0x4)
	float FOVAngle; // 0x248(0x4)
	float PostProcessBlendWeight; // 0x24C(0x4)
	struct FPostProcessSettings PostProcessSettings; // 0x250(0x560)

	int32_t GetAutoActivatePlayerIndex(); // Function Engine.CameraActor.GetAutoActivatePlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D3260
};

// Class Engine.TriggerVolume
// Size : 0x258 (Inherited : 0x258)
struct ATriggerVolume : AVolume {
};

// Class Engine.AssetManager
// Size : 0x438 (Inherited : 0x28)
struct UAssetManager : UObject {
	unsigned char UnknownData_28[0x0298]; // 0x28(0x298)
	struct TArray<struct UObject*> ObjectReferenceList; // 0x2C0(0x10)
	bool bIsGlobalAsyncScanEnvironment; // 0x2D0(0x1)
	bool bShouldGuessTypeAndName; // 0x2D1(0x1)
	bool bShouldUseSynchronousLoad; // 0x2D2(0x1)
	bool bIsLoadingFromPakFiles; // 0x2D3(0x1)
	bool bShouldAcquireMissingChunksOnLoad; // 0x2D4(0x1)
	bool bOnlyCookProductionAssets; // 0x2D5(0x1)
	bool bIsBulkScanning; // 0x2D6(0x1)
	bool bIsPrimaryAssetDirectoryCurrent; // 0x2D7(0x1)
	bool bIsManagementDatabaseCurrent; // 0x2D8(0x1)
	bool bUpdateManagementDatabaseAfterScan; // 0x2D9(0x1)
	bool bIncludeOnlyOnDiskAssets; // 0x2DA(0x1)
	unsigned char UnknownData_2DB[0x0001]; // 0x2DB(0x1)
	int32_t NumberOfSpawnedNotifications; // 0x2DC(0x4)
	unsigned char UnknownData_2E0[0x0158]; // 0x2E0(0x158)
};

// Class Engine.StaticMeshComponent
// Size : 0x4A0 (Inherited : 0x430)
struct UStaticMeshComponent : UMeshComponent {
	int32_t ForcedLodModel; // 0x430(0x4)
	int32_t PreviousLODLevel; // 0x434(0x4)
	int32_t MinLOD; // 0x438(0x4)
	int32_t SubDivisionStepSize; // 0x43C(0x4)
	struct UStaticMesh* StaticMesh; // 0x440(0x8)
	struct FColor WireframeColorOverride; // 0x448(0x4)
	unsigned char bEvaluateWorldPositionOffset : 1; // 0x44C(0x1)
	unsigned char bOverrideWireframeColor : 1; // 0x44C(0x1)
	unsigned char bOverrideMinLod : 1; // 0x44C(0x1)
	unsigned char bOverrideNavigationExport : 1; // 0x44C(0x1)
	unsigned char bForceNavigationObstacle : 1; // 0x44C(0x1)
	unsigned char bDisallowMeshPaintPerInstance : 1; // 0x44C(0x1)
	unsigned char bIgnoreInstanceForTextureStreaming : 1; // 0x44C(0x1)
	unsigned char bOverrideLightMapRes : 1; // 0x44C(0x1)
	unsigned char bCastDistanceFieldIndirectShadow : 1; // 0x44D(0x1)
	unsigned char bOverrideDistanceFieldSelfShadowBias : 1; // 0x44D(0x1)
	unsigned char bUseSubDivisions : 1; // 0x44D(0x1)
	unsigned char bUseDefaultCollision : 1; // 0x44D(0x1)
	unsigned char bReverseCulling : 1; // 0x44D(0x1)
	unsigned char UnknownData_44D_5 : 3; // 0x44D(0x1)
	unsigned char UnknownData_44E[0x0002]; // 0x44E(0x2)
	int32_t OverriddenLightMapRes; // 0x450(0x4)
	float DistanceFieldIndirectShadowMinVisibility; // 0x454(0x4)
	float DistanceFieldSelfShadowBias; // 0x458(0x4)
	float StreamingDistanceMultiplier; // 0x45C(0x4)
	struct TArray<struct FStaticMeshComponentLODInfo> LODData; // 0x460(0x10)
	struct TArray<struct FStreamingTextureBuildInfo> StreamingTextureData; // 0x470(0x10)
	struct FLightmassPrimitiveSettings LightmassSettings; // 0x480(0x18)
	unsigned char UnknownData_498[0x0008]; // 0x498(0x8)

	bool SetStaticMesh(struct UStaticMesh* NewMesh); // Function Engine.StaticMeshComponent.SetStaticMesh // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF653328A30
	void SetReverseCulling(bool ReverseCulling); // Function Engine.StaticMeshComponent.SetReverseCulling // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557FD480
	void SetForcedLodModel(int32_t NewForcedLodModel); // Function Engine.StaticMeshComponent.SetForcedLodModel // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557FD080
	void SetDistanceFieldSelfShadowBias(float NewValue); // Function Engine.StaticMeshComponent.SetDistanceFieldSelfShadowBias // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557FCE00
	void OnRep_StaticMesh(struct UStaticMesh* OldStaticMesh); // Function Engine.StaticMeshComponent.OnRep_StaticMesh // (Final|Native|Public) // Param Size : 0x8, 0x7FF6557FCD80
	void GetLocalBounds(struct FVector Min, struct FVector Max); // Function Engine.StaticMeshComponent.GetLocalBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557FCBE0
};

// Class Engine.CameraShake
// Size : 0x160 (Inherited : 0x28)
struct UCameraShake : UObject {
	unsigned char bSingleInstance : 1; // 0x28(0x1)
	unsigned char UnknownData_28_1 : 7; // 0x28(0x1)
	unsigned char UnknownData_29[0x0003]; // 0x29(0x3)
	float OscillationDuration; // 0x2C(0x4)
	float OscillationBlendInTime; // 0x30(0x4)
	float OscillationBlendOutTime; // 0x34(0x4)
	struct FROscillator RotOscillation; // 0x38(0x24)
	struct FVOscillator LocOscillation; // 0x5C(0x24)
	struct FFOscillator FOVOscillation; // 0x80(0xC)
	float AnimPlayRate; // 0x8C(0x4)
	float AnimScale; // 0x90(0x4)
	float AnimBlendInTime; // 0x94(0x4)
	float AnimBlendOutTime; // 0x98(0x4)
	float RandomAnimSegmentDuration; // 0x9C(0x4)
	struct UCameraAnim* Anim; // 0xA0(0x8)
	unsigned char bRandomAnimSegment : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_1 : 7; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0017]; // 0xA9(0x17)
	struct APlayerCameraManager* CameraOwner; // 0xC0(0x8)
	unsigned char UnknownData_C8[0x0080]; // 0xC8(0x80)
	float ShakeScale; // 0x148(0x4)
	float OscillatorTimeRemaining; // 0x14C(0x4)
	struct UCameraAnimInst* AnimInst; // 0x150(0x8)
	unsigned char UnknownData_158[0x0008]; // 0x158(0x8)

	void ReceiveStopShake(bool bImmediately); // Function Engine.CameraShake.ReceiveStopShake // (Event|Public|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void ReceivePlayShake(float Scale); // Function Engine.CameraShake.ReceivePlayShake // (Event|Public|BlueprintEvent) // Param Size : 0x4, 0x7FF653FAFDF0
	bool ReceiveIsFinished(); // Function Engine.CameraShake.ReceiveIsFinished // (Native|Event|Public|BlueprintEvent|Const) // Param Size : 0x1, 0x7FF6533F7950
	void BlueprintUpdateCameraShake(float DeltaTime, float Alpha, struct FMinimalViewInfo POV, struct FMinimalViewInfo ModifiedPOV); // Function Engine.CameraShake.BlueprintUpdateCameraShake // (Event|Public|HasOutParms|BlueprintEvent) // Param Size : 0xBF0, 0x7FF653FAFDF0
};

// Class Engine.CheatManager
// Size : 0x78 (Inherited : 0x28)
struct UCheatManager : UObject {
	struct ADebugCameraController* DebugCameraControllerRef; // 0x28(0x8)
	class ADebugCameraController* DebugCameraControllerClass; // 0x30(0x8)
	unsigned char UnknownData_38[0x0040]; // 0x38(0x40)

	void Walk(); // Function Engine.CheatManager.Walk // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A14350
	void ViewSelf(); // Function Engine.CheatManager.ViewSelf // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E2520
	void ViewPlayer(struct FString S); // Function Engine.CheatManager.ViewPlayer // (Exec|Native|Public) // Param Size : 0x10, 0x7FF6556E2480
	void ViewClass(class AActor* DesiredClass); // Function Engine.CheatManager.ViewClass // (Exec|Native|Public) // Param Size : 0x8, 0x7FF6556E23F0
	void ViewActor(struct FName ActorName); // Function Engine.CheatManager.ViewActor // (Exec|Native|Public) // Param Size : 0x8, 0x7FF6556E2360
	void UpdateSafeArea(); // Function Engine.CheatManager.UpdateSafeArea // (Final|Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E2340
	void ToggleServerStatReplicatorUpdateStatNet(); // Function Engine.CheatManager.ToggleServerStatReplicatorUpdateStatNet // (Final|Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E2320
	void ToggleServerStatReplicatorClientOverwrite(); // Function Engine.CheatManager.ToggleServerStatReplicatorClientOverwrite // (Final|Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E2300
	void ToggleDebugCamera(); // Function Engine.CheatManager.ToggleDebugCamera // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E22E0
	void ToggleAILogging(); // Function Engine.CheatManager.ToggleAILogging // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E22C0
	void TestCollisionDistance(); // Function Engine.CheatManager.TestCollisionDistance // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E22A0
	void Teleport(); // Function Engine.CheatManager.Teleport // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E2280
	void Summon(struct FString ClassName); // Function Engine.CheatManager.Summon // (Exec|Native|Public) // Param Size : 0x10, 0x7FF6556E21E0
	void StreamLevelOut(struct FName PackageName); // Function Engine.CheatManager.StreamLevelOut // (Exec|Native|Public) // Param Size : 0x8, 0x7FF6556A38E0
	void StreamLevelIn(struct FName PackageName); // Function Engine.CheatManager.StreamLevelIn // (Exec|Native|Public) // Param Size : 0x8, 0x7FF65569FD30
	void SpawnServerStatReplicator(); // Function Engine.CheatManager.SpawnServerStatReplicator // (Final|Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E21C0
	void Slomo(float NewTimeDilation); // Function Engine.CheatManager.Slomo // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556E2140
	void SetWorldOrigin(); // Function Engine.CheatManager.SetWorldOrigin // (Final|Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E2120
	void SetMouseSensitivityToDefault(); // Function Engine.CheatManager.SetMouseSensitivityToDefault // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E2100
	void ServerToggleAILogging(); // Function Engine.CheatManager.ServerToggleAILogging // (Net|NetReliable|Native|Event|Public|NetServer|NetValidate) // Param Size : 0x0, 0x7FF6556E2020
	void ReceiveInitCheatManager(); // Function Engine.CheatManager.ReceiveInitCheatManager // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void ReceiveEndPlay(); // Function Engine.CheatManager.ReceiveEndPlay // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void PlayersOnly(); // Function Engine.CheatManager.PlayersOnly // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E2000
	void OnlyLoadLevel(struct FName PackageName); // Function Engine.CheatManager.OnlyLoadLevel // (Exec|Native|Public) // Param Size : 0x8, 0x7FF65569FDC0
	void LogLoc(); // Function Engine.CheatManager.LogLoc // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1FE0
	void InvertMouse(); // Function Engine.CheatManager.InvertMouse // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1FC0
	void God(); // Function Engine.CheatManager.God // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E1FA0
	void Ghost(); // Function Engine.CheatManager.Ghost // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556D3240
	void FreezeFrame(float Delay); // Function Engine.CheatManager.FreezeFrame // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556E1F20
	void Fly(); // Function Engine.CheatManager.Fly // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654F83D80
	void FlushLog(); // Function Engine.CheatManager.FlushLog // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1F00
	void EnableDebugCamera(); // Function Engine.CheatManager.EnableDebugCamera // (Native|Protected|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E1EE0
	void DumpVoiceMutingState(); // Function Engine.CheatManager.DumpVoiceMutingState // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1EC0
	void DumpPartyState(); // Function Engine.CheatManager.DumpPartyState // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1EA0
	void DumpOnlineSessionState(); // Function Engine.CheatManager.DumpOnlineSessionState // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1E80
	void DumpChatState(); // Function Engine.CheatManager.DumpChatState // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1E60
	void DisableDebugCamera(); // Function Engine.CheatManager.DisableDebugCamera // (Native|Protected|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E1E40
	void DestroyTarget(); // Function Engine.CheatManager.DestroyTarget // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E1E20
	void DestroyServerStatReplicator(); // Function Engine.CheatManager.DestroyServerStatReplicator // (Final|Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1E00
	void DestroyPawns(class APawn* aClass); // Function Engine.CheatManager.DestroyPawns // (Exec|Native|Public) // Param Size : 0x8, 0x7FF6556E1D70
	void DestroyAllPawnsExceptTarget(); // Function Engine.CheatManager.DestroyAllPawnsExceptTarget // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1D50
	void DestroyAll(class AActor* aClass); // Function Engine.CheatManager.DestroyAll // (Exec|Native|Public) // Param Size : 0x8, 0x7FF6556E1CC0
	void DebugCapsuleSweepSize(float HalfHeight, float Radius); // Function Engine.CheatManager.DebugCapsuleSweepSize // (Exec|Native|Public) // Param Size : 0x8, 0x7FF6556E1BF0
	void DebugCapsuleSweepPawn(); // Function Engine.CheatManager.DebugCapsuleSweepPawn // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1BD0
	void DebugCapsuleSweepComplex(bool bTraceComplex); // Function Engine.CheatManager.DebugCapsuleSweepComplex // (Exec|Native|Public) // Param Size : 0x1, 0x7FF6556E1B40
	void DebugCapsuleSweepClear(); // Function Engine.CheatManager.DebugCapsuleSweepClear // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1B20
	void DebugCapsuleSweepChannel(enum class ECollisionChannel Channel); // Function Engine.CheatManager.DebugCapsuleSweepChannel // (Exec|Native|Public) // Param Size : 0x1, 0x7FF6556E1AA0
	void DebugCapsuleSweepCapture(); // Function Engine.CheatManager.DebugCapsuleSweepCapture // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1A80
	void DebugCapsuleSweep(); // Function Engine.CheatManager.DebugCapsuleSweep // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556E1A60
	void DamageTarget(float DamageAmount); // Function Engine.CheatManager.DamageTarget // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556E19E0
	void CheatScript(struct FString ScriptName); // Function Engine.CheatManager.CheatScript // (Final|Exec|Native|Public) // Param Size : 0x10, 0x7FF6556E1900
	void ChangeSize(float F); // Function Engine.CheatManager.ChangeSize // (Exec|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556E1880
	void BugItStringCreator(struct FVector ViewLocation, struct FRotator ViewRotation, struct FString GoString, struct FString LocString); // Function Engine.CheatManager.BugItStringCreator // (Exec|Native|Public|HasOutParms|HasDefaults) // Param Size : 0x38, 0x7FF6556E16C0
	void BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll); // Function Engine.CheatManager.BugItGo // (Exec|Native|Public) // Param Size : 0x18, 0x7FF6556E14F0
	void BugIt(struct FString ScreenShotDescription); // Function Engine.CheatManager.BugIt // (Exec|Native|Public) // Param Size : 0x10, 0x7FF6556E1450
};

// Class Engine.PrimaryDataAsset
// Size : 0x30 (Inherited : 0x30)
struct UPrimaryDataAsset : UDataAsset {
};

// Class Engine.DPICustomScalingRule
// Size : 0x28 (Inherited : 0x28)
struct UDPICustomScalingRule : UObject {
};

// Class Engine.SpringArmComponent
// Size : 0x280 (Inherited : 0x1F0)
struct USpringArmComponent : USceneComponent {
	float TargetArmLength; // 0x1F0(0x4)
	struct FVector SocketOffset; // 0x1F4(0xC)
	struct FVector TargetOffset; // 0x200(0xC)
	float ProbeSize; // 0x20C(0x4)
	enum class ECollisionChannel ProbeChannel; // 0x210(0x1)
	unsigned char UnknownData_211[0x0003]; // 0x211(0x3)
	unsigned char bDoCollisionTest : 1; // 0x214(0x1)
	unsigned char bUsePawnControlRotation : 1; // 0x214(0x1)
	unsigned char bInheritPitch : 1; // 0x214(0x1)
	unsigned char bInheritYaw : 1; // 0x214(0x1)
	unsigned char bInheritRoll : 1; // 0x214(0x1)
	unsigned char bEnableCameraLag : 1; // 0x214(0x1)
	unsigned char bEnableCameraRotationLag : 1; // 0x214(0x1)
	unsigned char bUseCameraLagSubstepping : 1; // 0x214(0x1)
	unsigned char bDrawDebugLagMarkers : 1; // 0x215(0x1)
	unsigned char UnknownData_215_1 : 7; // 0x215(0x1)
	unsigned char UnknownData_216[0x0002]; // 0x216(0x2)
	float CameraLagSpeed; // 0x218(0x4)
	float CameraRotationLagSpeed; // 0x21C(0x4)
	float CameraLagMaxTimeStep; // 0x220(0x4)
	float CameraLagMaxDistance; // 0x224(0x4)
	unsigned char UnknownData_228[0x0058]; // 0x228(0x58)

	bool IsCollisionFixApplied(); // Function Engine.SpringArmComponent.IsCollisionFixApplied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557F8950
	struct FVector GetUnfixedCameraPosition(); // Function Engine.SpringArmComponent.GetUnfixedCameraPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6556DD480
	struct FRotator GetTargetRotation(); // Function Engine.SpringArmComponent.GetTargetRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F8910
};

// Class Engine.SphereComponent
// Size : 0x430 (Inherited : 0x420)
struct USphereComponent : UShapeComponent {
	float SphereRadius; // 0x420(0x4)
	unsigned char UnknownData_424[0x000C]; // 0x424(0xC)

	void SetSphereRadius(float InSphereRadius, bool bUpdateOverlaps); // Function Engine.SphereComponent.SetSphereRadius // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557F5240
	float GetUnscaledSphereRadius(); // Function Engine.SphereComponent.GetUnscaledSphereRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D8950
	float GetShapeScale(); // Function Engine.SphereComponent.GetShapeScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F3720
	float GetScaledSphereRadius(); // Function Engine.SphereComponent.GetScaledSphereRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F36D0
};

// Class Engine.GameInstance
// Size : 0x198 (Inherited : 0x28)
struct UGameInstance : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
	struct TArray<struct ULocalPlayer*> LocalPlayers; // 0x38(0x10)
	struct UOnlineSession* OnlineSession; // 0x48(0x8)
	struct TArray<struct UObject*> ReferencedObjects; // 0x50(0x10)
	unsigned char UnknownData_60[0x0138]; // 0x60(0x138)

	void ReceiveShutdown(); // Function Engine.GameInstance.ReceiveShutdown // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void ReceiveInit(); // Function Engine.GameInstance.ReceiveInit // (Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
	void HandleTravelError(enum class ETravelFailure FailureType); // Function Engine.GameInstance.HandleTravelError // (Event|Public|BlueprintEvent) // Param Size : 0x1, 0x7FF653FAFDF0
	void HandleNetworkError(enum class ENetworkFailure FailureType, bool bIsServer); // Function Engine.GameInstance.HandleNetworkError // (Event|Public|BlueprintEvent) // Param Size : 0x2, 0x7FF653FAFDF0
	void DebugRemovePlayer(int32_t ControllerId); // Function Engine.GameInstance.DebugRemovePlayer // (Exec|Native|Public) // Param Size : 0x4, 0x7FF6556FB130
	void DebugCreatePlayer(int32_t ControllerId); // Function Engine.GameInstance.DebugCreatePlayer // (Exec|Native|Public) // Param Size : 0x4, 0x7FF6556FB0A0
};

// Class Engine.Engine
// Size : 0xDE0 (Inherited : 0x28)
struct UEngine : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct UFont* TinyFont; // 0x30(0x8)
	struct FSoftObjectPath TinyFontName; // 0x38(0x18)
	struct UFont* SmallFont; // 0x50(0x8)
	struct FSoftObjectPath SmallFontName; // 0x58(0x18)
	struct UFont* MediumFont; // 0x70(0x8)
	struct FSoftObjectPath MediumFontName; // 0x78(0x18)
	struct UFont* LargeFont; // 0x90(0x8)
	struct FSoftObjectPath LargeFontName; // 0x98(0x18)
	struct UFont* SubtitleFont; // 0xB0(0x8)
	struct FSoftObjectPath SubtitleFontName; // 0xB8(0x18)
	struct TArray<struct UFont*> AdditionalFonts; // 0xD0(0x10)
	unsigned char UnknownData_E0[0x0008]; // 0xE0(0x8)
	struct TArray<struct FString> AdditionalFontNames; // 0xE8(0x10)
	class UConsole* ConsoleClass; // 0xF8(0x8)
	struct FSoftClassPath ConsoleClassName; // 0x100(0x18)
	class UGameViewportClient* GameViewportClientClass; // 0x118(0x8)
	struct FSoftClassPath GameViewportClientClassName; // 0x120(0x18)
	class ULocalPlayer* LocalPlayerClass; // 0x138(0x8)
	struct FSoftClassPath LocalPlayerClassName; // 0x140(0x18)
	class AWorldSettings* WorldSettingsClass; // 0x158(0x8)
	struct FSoftClassPath WorldSettingsClassName; // 0x160(0x18)
	struct FSoftClassPath NavigationSystemClassName; // 0x178(0x18)
	class UNavigationSystemBase* NavigationSystemClass; // 0x190(0x8)
	struct FSoftClassPath NavigationSystemConfigClassName; // 0x198(0x18)
	class UNavigationSystemConfig* NavigationSystemConfigClass; // 0x1B0(0x8)
	struct FSoftClassPath AvoidanceManagerClassName; // 0x1B8(0x18)
	class UAvoidanceManager* AvoidanceManagerClass; // 0x1D0(0x8)
	class UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x1D8(0x8)
	struct FSoftClassPath PhysicsCollisionHandlerClassName; // 0x1E0(0x18)
	struct FSoftClassPath GameUserSettingsClassName; // 0x1F8(0x18)
	class UGameUserSettings* GameUserSettingsClass; // 0x210(0x8)
	struct FSoftClassPath AIControllerClassName; // 0x218(0x18)
	struct UGameUserSettings* GameUserSettings; // 0x230(0x8)
	class ALevelScriptActor* LevelScriptActorClass; // 0x238(0x8)
	struct FSoftClassPath LevelScriptActorClassName; // 0x240(0x18)
	struct FSoftClassPath DefaultBlueprintBaseClassName; // 0x258(0x18)
	struct FSoftClassPath GameSingletonClassName; // 0x270(0x18)
	struct UObject* GameSingleton; // 0x288(0x8)
	struct FSoftClassPath AssetManagerClassName; // 0x290(0x18)
	struct UAssetManager* AssetManager; // 0x2A8(0x8)
	struct UTexture2D* DefaultTexture; // 0x2B0(0x8)
	struct FSoftObjectPath DefaultTextureName; // 0x2B8(0x18)
	struct UTexture* DefaultDiffuseTexture; // 0x2D0(0x8)
	struct FSoftObjectPath DefaultDiffuseTextureName; // 0x2D8(0x18)
	struct UTexture2D* DefaultBSPVertexTexture; // 0x2F0(0x8)
	struct FSoftObjectPath DefaultBSPVertexTextureName; // 0x2F8(0x18)
	struct UTexture2D* HighFrequencyNoiseTexture; // 0x310(0x8)
	struct FSoftObjectPath HighFrequencyNoiseTextureName; // 0x318(0x18)
	struct UTexture2D* DefaultBokehTexture; // 0x330(0x8)
	struct FSoftObjectPath DefaultBokehTextureName; // 0x338(0x18)
	struct UTexture2D* DefaultBloomKernelTexture; // 0x350(0x8)
	struct FSoftObjectPath DefaultBloomKernelTextureName; // 0x358(0x18)
	struct UMaterial* WireframeMaterial; // 0x370(0x8)
	struct FString WireframeMaterialName; // 0x378(0x10)
	struct UMaterial* DebugMeshMaterial; // 0x388(0x8)
	struct FSoftObjectPath DebugMeshMaterialName; // 0x390(0x18)
	struct UMaterial* EmissiveMeshMaterial; // 0x3A8(0x8)
	struct FSoftObjectPath EmissiveMeshMaterialName; // 0x3B0(0x18)
	struct UMaterial* LevelColorationLitMaterial; // 0x3C8(0x8)
	struct FString LevelColorationLitMaterialName; // 0x3D0(0x10)
	struct UMaterial* LevelColorationUnlitMaterial; // 0x3E0(0x8)
	struct FString LevelColorationUnlitMaterialName; // 0x3E8(0x10)
	struct UMaterial* LightingTexelDensityMaterial; // 0x3F8(0x8)
	struct FString LightingTexelDensityName; // 0x400(0x10)
	struct UMaterial* ShadedLevelColorationLitMaterial; // 0x410(0x8)
	struct FString ShadedLevelColorationLitMaterialName; // 0x418(0x10)
	struct UMaterial* ShadedLevelColorationUnlitMaterial; // 0x428(0x8)
	struct FString ShadedLevelColorationUnlitMaterialName; // 0x430(0x10)
	struct UMaterial* RemoveSurfaceMaterial; // 0x440(0x8)
	struct FSoftObjectPath RemoveSurfaceMaterialName; // 0x448(0x18)
	struct UMaterial* VertexColorMaterial; // 0x460(0x8)
	struct FString VertexColorMaterialName; // 0x468(0x10)
	struct UMaterial* VertexColorViewModeMaterial_ColorOnly; // 0x478(0x8)
	struct FString VertexColorViewModeMaterialName_ColorOnly; // 0x480(0x10)
	struct UMaterial* VertexColorViewModeMaterial_AlphaAsColor; // 0x490(0x8)
	struct FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x498(0x10)
	struct UMaterial* VertexColorViewModeMaterial_RedOnly; // 0x4A8(0x8)
	struct FString VertexColorViewModeMaterialName_RedOnly; // 0x4B0(0x10)
	struct UMaterial* VertexColorViewModeMaterial_GreenOnly; // 0x4C0(0x8)
	struct FString VertexColorViewModeMaterialName_GreenOnly; // 0x4C8(0x10)
	struct UMaterial* VertexColorViewModeMaterial_BlueOnly; // 0x4D8(0x8)
	struct FString VertexColorViewModeMaterialName_BlueOnly; // 0x4E0(0x10)
	struct FSoftObjectPath DebugEditorMaterialName; // 0x4F0(0x18)
	struct UMaterial* ConstraintLimitMaterial; // 0x508(0x8)
	struct UMaterialInstanceDynamic* ConstraintLimitMaterialX; // 0x510(0x8)
	struct UMaterialInstanceDynamic* ConstraintLimitMaterialXAxis; // 0x518(0x8)
	struct UMaterialInstanceDynamic* ConstraintLimitMaterialY; // 0x520(0x8)
	struct UMaterialInstanceDynamic* ConstraintLimitMaterialYAxis; // 0x528(0x8)
	struct UMaterialInstanceDynamic* ConstraintLimitMaterialZ; // 0x530(0x8)
	struct UMaterialInstanceDynamic* ConstraintLimitMaterialZAxis; // 0x538(0x8)
	struct UMaterialInstanceDynamic* ConstraintLimitMaterialPrismatic; // 0x540(0x8)
	struct UMaterial* InvalidLightmapSettingsMaterial; // 0x548(0x8)
	struct FSoftObjectPath InvalidLightmapSettingsMaterialName; // 0x550(0x18)
	struct UMaterial* PreviewShadowsIndicatorMaterial; // 0x568(0x8)
	struct FSoftObjectPath PreviewShadowsIndicatorMaterialName; // 0x570(0x18)
	struct UMaterial* ArrowMaterial; // 0x588(0x8)
	struct UMaterialInstanceDynamic* ArrowMaterialYellow; // 0x590(0x8)
	struct FSoftObjectPath ArrowMaterialName; // 0x598(0x18)
	struct FLinearColor LightingOnlyBrightness; // 0x5B0(0x10)
	struct TArray<struct FLinearColor> ShaderComplexityColors; // 0x5C0(0x10)
	struct TArray<struct FLinearColor> QuadComplexityColors; // 0x5D0(0x10)
	struct TArray<struct FLinearColor> LightComplexityColors; // 0x5E0(0x10)
	struct TArray<struct FLinearColor> StationaryLightOverlapColors; // 0x5F0(0x10)
	struct TArray<struct FLinearColor> LODColorationColors; // 0x600(0x10)
	struct TArray<struct FLinearColor> HLODColorationColors; // 0x610(0x10)
	struct TArray<struct FLinearColor> StreamingAccuracyColors; // 0x620(0x10)
	float MaxPixelShaderAdditiveComplexityCount; // 0x630(0x4)
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x634(0x4)
	float MinLightMapDensity; // 0x638(0x4)
	float IdealLightMapDensity; // 0x63C(0x4)
	float MaxLightMapDensity; // 0x640(0x4)
	unsigned char bRenderLightMapDensityGrayscale : 1; // 0x644(0x1)
	unsigned char UnknownData_644_1 : 7; // 0x644(0x1)
	unsigned char UnknownData_645[0x0003]; // 0x645(0x3)
	float RenderLightMapDensityGrayscaleScale; // 0x648(0x4)
	float RenderLightMapDensityColorScale; // 0x64C(0x4)
	struct FLinearColor LightMapDensityVertexMappedColor; // 0x650(0x10)
	struct FLinearColor LightMapDensitySelectedColor; // 0x660(0x10)
	struct TArray<struct FStatColorMapping> StatColorMappings; // 0x670(0x10)
	struct UPhysicalMaterial* DefaultPhysMaterial; // 0x680(0x8)
	struct FSoftObjectPath DefaultPhysMaterialName; // 0x688(0x18)
	struct TArray<struct FGameNameRedirect> ActiveGameNameRedirects; // 0x6A0(0x10)
	struct TArray<struct FClassRedirect> ActiveClassRedirects; // 0x6B0(0x10)
	struct TArray<struct FPluginRedirect> ActivePluginRedirects; // 0x6C0(0x10)
	struct TArray<struct FStructRedirect> ActiveStructRedirects; // 0x6D0(0x10)
	struct UTexture2D* PreIntegratedSkinBRDFTexture; // 0x6E0(0x8)
	struct FSoftObjectPath PreIntegratedSkinBRDFTextureName; // 0x6E8(0x18)
	struct UTexture2D* BlueNoiseTexture; // 0x700(0x8)
	struct FSoftObjectPath BlueNoiseTextureName; // 0x708(0x18)
	struct UTexture2D* MiniFontTexture; // 0x720(0x8)
	struct FSoftObjectPath MiniFontTextureName; // 0x728(0x18)
	struct UTexture* WeightMapPlaceholderTexture; // 0x740(0x8)
	struct FSoftObjectPath WeightMapPlaceholderTextureName; // 0x748(0x18)
	struct UTexture2D* LightMapDensityTexture; // 0x760(0x8)
	struct FSoftObjectPath LightMapDensityTextureName; // 0x768(0x18)
	unsigned char UnknownData_780[0x0008]; // 0x780(0x8)
	struct UGameViewportClient* GameViewport; // 0x788(0x8)
	struct TArray<struct FString> DeferredCommands; // 0x790(0x10)
	int32_t TickCycles; // 0x7A0(0x4)
	int32_t GameCycles; // 0x7A4(0x4)
	int32_t ClientCycles; // 0x7A8(0x4)
	float NearClipPlane; // 0x7AC(0x4)
	unsigned char bHardwareSurveyEnabled : 1; // 0x7B0(0x1)
	unsigned char bSubtitlesEnabled : 1; // 0x7B0(0x1)
	unsigned char bSubtitlesForcedOff : 1; // 0x7B0(0x1)
	unsigned char UnknownData_7B0_3 : 5; // 0x7B0(0x1)
	unsigned char UnknownData_7B1[0x0003]; // 0x7B1(0x3)
	int32_t MaximumLoopIterationCount; // 0x7B4(0x4)
	unsigned char bCanBlueprintsTickByDefault : 1; // 0x7B8(0x1)
	unsigned char bOptimizeAnimBlueprintMemberVariableAccess : 1; // 0x7B8(0x1)
	unsigned char bAllowMultiThreadedAnimationUpdate : 1; // 0x7B8(0x1)
	unsigned char bEnableEditorPSysRealtimeLOD : 1; // 0x7B8(0x1)
	unsigned char UnknownData_7B8_4 : 1; // 0x7B8(0x1)
	unsigned char bSmoothFrameRate : 1; // 0x7B8(0x1)
	unsigned char bUseFixedFrameRate : 1; // 0x7B8(0x1)
	unsigned char UnknownData_7B9[0x0003]; // 0x7B9(0x3)
	float FixedFrameRate; // 0x7BC(0x4)
	struct FFloatRange SmoothedFrameRateRange; // 0x7C0(0x10)
	struct UEngineCustomTimeStep* CustomTimeStep; // 0x7D0(0x8)
	unsigned char UnknownData_7D8[0x0020]; // 0x7D8(0x20)
	struct FSoftClassPath CustomTimeStepClassName; // 0x7F8(0x18)
	struct UTimecodeProvider* TimecodeProvider; // 0x810(0x8)
	unsigned char UnknownData_818[0x0020]; // 0x818(0x20)
	struct FSoftClassPath TimecodeProviderClassName; // 0x838(0x18)
	bool bGenerateDefaultTimecode; // 0x850(0x1)
	unsigned char UnknownData_851[0x0003]; // 0x851(0x3)
	struct FFrameRate GenerateDefaultTimecodeFrameRate; // 0x854(0x8)
	float GenerateDefaultTimecodeFrameDelay; // 0x85C(0x4)
	unsigned char bCheckForMultiplePawnsSpawnedInAFrame : 1; // 0x860(0x1)
	unsigned char UnknownData_860_1 : 7; // 0x860(0x1)
	unsigned char UnknownData_861[0x0003]; // 0x861(0x3)
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x864(0x4)
	unsigned char bShouldGenerateLowQualityLightmaps : 1; // 0x868(0x1)
	unsigned char UnknownData_868_1 : 7; // 0x868(0x1)
	unsigned char UnknownData_869[0x0003]; // 0x869(0x3)
	struct FColor C_WorldBox; // 0x86C(0x4)
	struct FColor C_BrushWire; // 0x870(0x4)
	struct FColor C_AddWire; // 0x874(0x4)
	struct FColor C_SubtractWire; // 0x878(0x4)
	struct FColor C_SemiSolidWire; // 0x87C(0x4)
	struct FColor C_NonSolidWire; // 0x880(0x4)
	struct FColor C_WireBackground; // 0x884(0x4)
	struct FColor C_ScaleBoxHi; // 0x888(0x4)
	struct FColor C_VolumeCollision; // 0x88C(0x4)
	struct FColor C_BSPCollision; // 0x890(0x4)
	struct FColor C_OrthoBackground; // 0x894(0x4)
	struct FColor C_Volume; // 0x898(0x4)
	struct FColor C_BrushShape; // 0x89C(0x4)
	float StreamingDistanceFactor; // 0x8A0(0x4)
	unsigned char UnknownData_8A4[0x0004]; // 0x8A4(0x4)
	struct FDirectoryPath GameScreenshotSaveDirectory; // 0x8A8(0x10)
	enum class ETransitionType TransitionType; // 0x8B8(0x1)
	unsigned char UnknownData_8B9[0x0007]; // 0x8B9(0x7)
	struct FString TransitionDescription; // 0x8C0(0x10)
	struct FString TransitionGameMode; // 0x8D0(0x10)
	float MeshLODRange; // 0x8E0(0x4)
	unsigned char bAllowMatureLanguage : 1; // 0x8E4(0x1)
	unsigned char UnknownData_8E4_1 : 7; // 0x8E4(0x1)
	unsigned char UnknownData_8E5[0x0003]; // 0x8E5(0x3)
	float CameraRotationThreshold; // 0x8E8(0x4)
	float CameraTranslationThreshold; // 0x8EC(0x4)
	float PrimitiveProbablyVisibleTime; // 0x8F0(0x4)
	float MaxOcclusionPixelsFraction; // 0x8F4(0x4)
	unsigned char bPauseOnLossOfFocus : 1; // 0x8F8(0x1)
	unsigned char UnknownData_8F8_1 : 7; // 0x8F8(0x1)
	unsigned char UnknownData_8F9[0x0003]; // 0x8F9(0x3)
	int32_t MaxParticleResize; // 0x8FC(0x4)
	int32_t MaxParticleResizeWarn; // 0x900(0x4)
	unsigned char UnknownData_904[0x0004]; // 0x904(0x4)
	struct TArray<struct FDropNoteInfo> PendingDroppedNotes; // 0x908(0x10)
	float NetClientTicksPerSecond; // 0x918(0x4)
	float DisplayGamma; // 0x91C(0x4)
	float MinDesiredFrameRate; // 0x920(0x4)
	struct FLinearColor DefaultSelectedMaterialColor; // 0x924(0x10)
	struct FLinearColor SelectedMaterialColor; // 0x934(0x10)
	struct FLinearColor SelectionOutlineColor; // 0x944(0x10)
	struct FLinearColor SubduedSelectionOutlineColor; // 0x954(0x10)
	struct FLinearColor SelectedMaterialColorOverride; // 0x964(0x10)
	bool bIsOverridingSelectedColor; // 0x974(0x1)
	unsigned char UnknownData_975[0x0003]; // 0x975(0x3)
	unsigned char bEnableOnScreenDebugMessages : 1; // 0x978(0x1)
	unsigned char bEnableOnScreenDebugMessagesDisplay : 1; // 0x978(0x1)
	unsigned char bSuppressMapWarnings : 1; // 0x978(0x1)
	unsigned char bDisableAILogging : 1; // 0x978(0x1)
	unsigned char UnknownData_978_4 : 4; // 0x978(0x1)
	unsigned char UnknownData_979[0x0003]; // 0x979(0x3)
	uint32_t bEnableVisualLogRecordingOnStart; // 0x97C(0x4)
	unsigned char UnknownData_980[0x0004]; // 0x980(0x4)
	int32_t ScreenSaverInhibitorSemaphore; // 0x984(0x4)
	unsigned char bLockReadOnlyLevels : 1; // 0x988(0x1)
	unsigned char UnknownData_988_1 : 7; // 0x988(0x1)
	unsigned char UnknownData_989[0x0007]; // 0x989(0x7)
	struct FString ParticleEventManagerClassPath; // 0x990(0x10)
	float SelectionHighlightIntensity; // 0x9A0(0x4)
	float BSPSelectionHighlightIntensity; // 0x9A4(0x4)
	float SelectionHighlightIntensityBillboards; // 0x9A8(0x4)
	unsigned char UnknownData_9AC[0x024C]; // 0x9AC(0x24C)
	struct TArray<struct FNetDriverDefinition> NetDriverDefinitions; // 0xBF8(0x10)
	struct TArray<struct FString> ServerActors; // 0xC08(0x10)
	struct TArray<struct FString> RuntimeServerActors; // 0xC18(0x10)
	float NetErrorLogInterval; // 0xC28(0x4)
	unsigned char bStartedLoadMapMovie : 1; // 0xC2C(0x1)
	unsigned char UnknownData_C2C_1 : 7; // 0xC2C(0x1)
	unsigned char UnknownData_C2D[0x001B]; // 0xC2D(0x1B)
	int32_t NextWorldContextHandle; // 0xC48(0x4)
	unsigned char UnknownData_C4C[0x0194]; // 0xC4C(0x194)
};

// Class Engine.ScriptViewportClient
// Size : 0x38 (Inherited : 0x28)
struct UScriptViewportClient : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
};

// Class Engine.GameViewportClient
// Size : 0x330 (Inherited : 0x38)
struct UGameViewportClient : UScriptViewportClient {
	unsigned char UnknownData_38[0x0008]; // 0x38(0x8)
	struct UConsole* ViewportConsole; // 0x40(0x8)
	struct TArray<struct FDebugDisplayProperty> DebugProperties; // 0x48(0x10)
	unsigned char UnknownData_58[0x0010]; // 0x58(0x10)
	int32_t MaxSplitscreenPlayers; // 0x68(0x4)
	unsigned char UnknownData_6C[0x000C]; // 0x6C(0xC)
	struct UWorld* World; // 0x78(0x8)
	struct UGameInstance* GameInstance; // 0x80(0x8)
	unsigned char UnknownData_88[0x02A8]; // 0x88(0x2A8)

	void SSSwapControllers(); // Function Engine.GameViewportClient.SSSwapControllers // (Exec|Native|Public) // Param Size : 0x0, 0x7FF654A144D0
	void ShowTitleSafeArea(); // Function Engine.GameViewportClient.ShowTitleSafeArea // (Exec|Native|Public) // Param Size : 0x0, 0x7FF654A144F0
	void SetConsoleTarget(int32_t PlayerIndex); // Function Engine.GameViewportClient.SetConsoleTarget // (Exec|Native|Public) // Param Size : 0x4, 0x7FF65570CF60
};

// Class Engine.ChildActorComponent
// Size : 0x220 (Inherited : 0x1F0)
struct UChildActorComponent : USceneComponent {
	class AActor* ChildActorClass; // 0x1F0(0x8)
	struct AActor* ChildActor; // 0x1F8(0x8)
	struct AActor* ChildActorTemplate; // 0x200(0x8)
	unsigned char UnknownData_208[0x0018]; // 0x208(0x18)

	void SetChildActorClass(class AActor* InClass); // Function Engine.ChildActorComponent.SetChildActorClass // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556E2070
};

// Class Engine.ParticleModule
// Size : 0x30 (Inherited : 0x28)
struct UParticleModule : UObject {
	unsigned char bSpawnModule : 1; // 0x28(0x1)
	unsigned char bUpdateModule : 1; // 0x28(0x1)
	unsigned char bFinalUpdateModule : 1; // 0x28(0x1)
	unsigned char bUpdateForGPUEmitter : 1; // 0x28(0x1)
	unsigned char bCurvesAsColor : 1; // 0x28(0x1)
	unsigned char b3DDrawMode : 1; // 0x28(0x1)
	unsigned char bSupported3DDrawMode : 1; // 0x28(0x1)
	unsigned char bEnabled : 1; // 0x28(0x1)
	unsigned char bEditable : 1; // 0x29(0x1)
	unsigned char LODDuplicate : 1; // 0x29(0x1)
	unsigned char bSupportsRandomSeed : 1; // 0x29(0x1)
	unsigned char bRequiresLoopingNotification : 1; // 0x29(0x1)
	unsigned char UnknownData_29_4 : 4; // 0x29(0x1)
	enum class None LODValidity; // 0x2A(0x1)
	unsigned char UnknownData_2B[0x0005]; // 0x2B(0x5)
};

// Class Engine.ParticleModuleCollisionBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleCollisionBase : UParticleModule {
};

// Class Engine.ParticleModuleCollision
// Size : 0x190 (Inherited : 0x30)
struct UParticleModuleCollision : UParticleModuleCollisionBase {
	struct FRawDistributionVector DampingFactor; // 0x30(0x48)
	struct FRawDistributionVector DampingFactorRotation; // 0x78(0x48)
	struct FRawDistributionFloat MaxCollisions; // 0xC0(0x30)
	enum class EParticleCollisionComplete CollisionCompletionOption; // 0xF0(0x1)
	unsigned char UnknownData_F1[0x0007]; // 0xF1(0x7)
	struct TArray<enum class EObjectTypeQuery> CollisionTypes; // 0xF8(0x10)
	unsigned char UnknownData_108[0x0008]; // 0x108(0x8)
	unsigned char bApplyPhysics : 1; // 0x110(0x1)
	unsigned char bIgnoreTriggerVolumes : 1; // 0x110(0x1)
	unsigned char UnknownData_110_2 : 6; // 0x110(0x1)
	unsigned char UnknownData_111[0x0007]; // 0x111(0x7)
	struct FRawDistributionFloat ParticleMass; // 0x118(0x30)
	float DirScalar; // 0x148(0x4)
	unsigned char bPawnsDoNotDecrementCount : 1; // 0x14C(0x1)
	unsigned char bOnlyVerticalNormalsDecrementCount : 1; // 0x14C(0x1)
	unsigned char UnknownData_14C_2 : 6; // 0x14C(0x1)
	unsigned char UnknownData_14D[0x0003]; // 0x14D(0x3)
	float VerticalFudgeFactor; // 0x150(0x4)
	unsigned char UnknownData_154[0x0004]; // 0x154(0x4)
	struct FRawDistributionFloat DelayAmount; // 0x158(0x30)
	unsigned char bDropDetail : 1; // 0x188(0x1)
	unsigned char bCollideOnlyIfVisible : 1; // 0x188(0x1)
	unsigned char bIgnoreSourceActor : 1; // 0x188(0x1)
	unsigned char UnknownData_188_3 : 5; // 0x188(0x1)
	unsigned char UnknownData_189[0x0003]; // 0x189(0x3)
	float MaxCollisionDistance; // 0x18C(0x4)
};

// Class Engine.SkyLight
// Size : 0x230 (Inherited : 0x220)
struct ASkyLight : AInfo {
	struct USkyLightComponent* LightComponent; // 0x220(0x8)
	unsigned char bEnabled : 1; // 0x228(0x1)
	unsigned char UnknownData_228_1 : 7; // 0x228(0x1)
	unsigned char UnknownData_229[0x0007]; // 0x229(0x7)

	void OnRep_bEnabled(); // Function Engine.SkyLight.OnRep_bEnabled // (Native|Public) // Param Size : 0x0, 0x7FF6556FB1C0
};

// Class Engine.TextureCube
// Size : 0x110 (Inherited : 0xB8)
struct UTextureCube : UTexture {
	unsigned char UnknownData_B8[0x0058]; // 0xB8(0x58)
};

// Class Engine.InstancedStaticMeshComponent
// Size : 0x540 (Inherited : 0x4A0)
struct UInstancedStaticMeshComponent : UStaticMeshComponent {
	struct TArray<struct FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x498(0x10)
	int32_t NumCustomDataFloats; // 0x4A8(0x4)
	struct TArray<float> PerInstanceSMCustomData; // 0x4B0(0x10)
	int32_t InstancingRandomSeed; // 0x4C0(0x4)
	int32_t InstanceStartCullDistance; // 0x4C4(0x4)
	int32_t InstanceEndCullDistance; // 0x4C8(0x4)
	struct TArray<int32_t> InstanceReorderTable; // 0x4D0(0x10)
	unsigned char UnknownData_4E0[0x0048]; // 0x4E0(0x48)
	int32_t NumPendingLightmaps; // 0x528(0x4)
	unsigned char UnknownData_52C[0x0004]; // 0x52C(0x4)
	struct TArray<struct FInstancedStaticMeshMappingInfo> CachedMappings; // 0x530(0x10)

	bool UpdateInstanceTransform(int32_t InstanceIndex, struct FTransform NewInstanceTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport); // Function Engine.InstancedStaticMeshComponent.UpdateInstanceTransform // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x44, 0x7FF655717FA0
	bool SetCustomDataValue(int32_t InstanceIndex, int32_t CustomDataIndex, float CustomDataValue, bool bMarkRenderStateDirty); // Function Engine.InstancedStaticMeshComponent.SetCustomDataValue // (Native|Public|BlueprintCallable) // Param Size : 0xE, 0x7FF655717E50
	void SetCullDistances(int32_t StartCullDistance, int32_t EndCullDistance); // Function Engine.InstancedStaticMeshComponent.SetCullDistances // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655717D90
	bool RemoveInstance(int32_t InstanceIndex); // Function Engine.InstancedStaticMeshComponent.RemoveInstance // (Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF655717CD0
	bool GetInstanceTransform(int32_t InstanceIndex, struct FTransform OutInstanceTransform, bool bWorldSpace); // Function Engine.InstancedStaticMeshComponent.GetInstanceTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x42, 0x7FF655717380
	struct TArray<int32_t> GetInstancesOverlappingSphere(struct FVector Center, float Radius, bool bSphereInWorldSpace); // Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingSphere // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x28, 0x7FF655717610
	struct TArray<int32_t> GetInstancesOverlappingBox(struct FBox Box, bool bBoxInWorldSpace); // Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingBox // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x30, 0x7FF6557174E0
	int32_t GetInstanceCount(); // Function Engine.InstancedStaticMeshComponent.GetInstanceCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF655717350
	void ClearInstances(); // Function Engine.InstancedStaticMeshComponent.ClearInstances // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655716B30
	bool BatchUpdateInstancesTransforms(int32_t StartInstanceIndex, struct TArray<struct FTransform> NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport); // Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransforms // (Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x1C, 0x7FF655716940
	bool BatchUpdateInstancesTransform(int32_t StartInstanceIndex, int32_t NumInstances, struct FTransform NewInstancesTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport); // Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransform // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x44, 0x7FF655716710
	int32_t AddInstanceWorldSpace(struct FTransform WorldTransform); // Function Engine.InstancedStaticMeshComponent.AddInstanceWorldSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x34, 0x7FF655716630
	int32_t AddInstance(struct FTransform InstanceTransform); // Function Engine.InstancedStaticMeshComponent.AddInstance // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x34, 0x7FF655716550
};

// Class Engine.HierarchicalInstancedStaticMeshComponent
// Size : 0x630 (Inherited : 0x540)
struct UHierarchicalInstancedStaticMeshComponent : UInstancedStaticMeshComponent {
	unsigned char UnknownData_540[0x0010]; // 0x540(0x10)
	struct TArray<int32_t> SortedInstances; // 0x550(0x10)
	int32_t NumBuiltInstances; // 0x560(0x4)
	unsigned char UnknownData_564[0x0004]; // 0x564(0x4)
	struct FBox BuiltInstanceBounds; // 0x568(0x1C)
	struct FBox UnbuiltInstanceBounds; // 0x584(0x1C)
	struct TArray<struct FBox> UnbuiltInstanceBoundsList; // 0x5A0(0x10)
	unsigned char bEnableDensityScaling : 1; // 0x5B0(0x1)
	unsigned char UnknownData_5B0_1 : 7; // 0x5B0(0x1)
	unsigned char UnknownData_5B1[0x0007]; // 0x5B1(0x7)
	int32_t OcclusionLayerNumNodes; // 0x5B8(0x4)
	struct FBoxSphereBounds CacheMeshExtendedBounds; // 0x5BC(0x1C)
	bool bDisableCollision; // 0x5D8(0x1)
	unsigned char UnknownData_5D9[0x0003]; // 0x5D9(0x3)
	int32_t InstanceCountToRender; // 0x5DC(0x4)
	unsigned char UnknownData_5E0[0x0050]; // 0x5E0(0x50)

	bool RemoveInstances(struct TArray<int32_t> InstancesToRemove); // Function Engine.HierarchicalInstancedStaticMeshComponent.RemoveInstances // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6557126D0
};

// Class Engine.StaticMeshActor
// Size : 0x230 (Inherited : 0x220)
struct AStaticMeshActor : AActor {
	struct UStaticMeshComponent* StaticMeshComponent; // 0x220(0x8)
	bool bStaticMeshReplicateMovement; // 0x228(0x1)
	enum class ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x229(0x1)
	unsigned char UnknownData_22A[0x0006]; // 0x22A(0x6)

	void SetMobility(enum class EComponentMobility InMobility); // Function Engine.StaticMeshActor.SetMobility // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557FD200
};

// Class Engine.MaterialInterface
// Size : 0x88 (Inherited : 0x28)
struct UMaterialInterface : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
	struct USubsurfaceProfile* SubsurfaceProfile; // 0x38(0x8)
	unsigned char UnknownData_40[0x0010]; // 0x40(0x10)
	struct FLightmassMaterialInterfaceSettings LightmassSettings; // 0x50(0x10)
	struct TArray<struct FMaterialTextureInfo> TextureStreamingData; // 0x60(0x10)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x70(0x10)
	unsigned char UnknownData_80[0x0008]; // 0x80(0x8)

	void SetForceMipLevelsToBeResident(bool OverrideForceMiplevelsToBeResident, bool bForceMiplevelsToBeResidentValue, float ForceDuration, int32_t CinematicTextureGroups, bool bFastResponse); // Function Engine.MaterialInterface.SetForceMipLevelsToBeResident // (RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6557904A0
	struct UPhysicalMaterialMask* GetPhysicalMaterialMask(); // Function Engine.MaterialInterface.GetPhysicalMaterialMask // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF654E4FD50
	struct UPhysicalMaterial* GetPhysicalMaterialFromMap(int32_t Index); // Function Engine.MaterialInterface.GetPhysicalMaterialFromMap // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF65578FC50
	struct UPhysicalMaterial* GetPhysicalMaterial(); // Function Engine.MaterialInterface.GetPhysicalMaterial // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF654E4FD80
	struct FMaterialParameterInfo GetParameterInfo(enum class EMaterialParameterAssociation Association, struct FName ParameterName, struct UMaterialFunctionInterface* LayerFunction); // Function Engine.MaterialInterface.GetParameterInfo // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x28, 0x7FF65578FB40
	struct UMaterial* GetBaseMaterial(); // Function Engine.MaterialInterface.GetBaseMaterial // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65578FB10
};

// Class Engine.MaterialInstance
// Size : 0x408 (Inherited : 0x88)
struct UMaterialInstance : UMaterialInterface {
	struct UPhysicalMaterial* PhysMaterial; // 0x88(0x8)
	struct UPhysicalMaterial* PhysicalMaterialMap[8]; // 0x90(0x40)
	struct UMaterialInterface* Parent; // 0xD0(0x8)
	unsigned char bHasStaticPermutationResource : 1; // 0xD8(0x1)
	unsigned char bOverrideSubsurfaceProfile : 1; // 0xD8(0x1)
	unsigned char UnknownData_D8_2 : 6; // 0xD8(0x1)
	unsigned char UnknownData_D9[0x0007]; // 0xD9(0x7)
	struct TArray<struct FScalarParameterValue> ScalarParameterValues; // 0xE0(0x10)
	struct TArray<struct FVectorParameterValue> VectorParameterValues; // 0xF0(0x10)
	struct TArray<struct FTextureParameterValue> TextureParameterValues; // 0x100(0x10)
	struct TArray<struct FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0x110(0x10)
	struct TArray<struct FFontParameterValue> FontParameterValues; // 0x120(0x10)
	struct FMaterialInstanceBasePropertyOverrides BasePropertyOverrides; // 0x130(0x8)
	unsigned char UnknownData_138[0x0010]; // 0x138(0x10)
	struct FStaticParameterSet StaticParameters; // 0x148(0x40)
	struct FMaterialCachedParameters CachedLayerParameters; // 0x188(0x1A0)
	struct TArray<struct UObject*> CachedReferencedTextures; // 0x328(0x10)
	unsigned char UnknownData_338[0x00D0]; // 0x338(0xD0)
};

// Class Engine.MaterialInstanceConstant
// Size : 0x410 (Inherited : 0x408)
struct UMaterialInstanceConstant : UMaterialInstance {
	struct UPhysicalMaterialMask* PhysMaterialMask; // 0x408(0x8)

	struct FLinearColor K2_GetVectorParameterValue(struct FName ParameterName); // Function Engine.MaterialInstanceConstant.K2_GetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF655790190
	struct UTexture* K2_GetTextureParameterValue(struct FName ParameterName); // Function Engine.MaterialInstanceConstant.K2_GetTextureParameterValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65578FFC0
	float K2_GetScalarParameterValue(struct FName ParameterName); // Function Engine.MaterialInstanceConstant.K2_GetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF65578FDC0
};

// Class Engine.WorldSubsystem
// Size : 0x30 (Inherited : 0x30)
struct UWorldSubsystem : USubsystem {
};

// Class Engine.MaterialExpressionCustomOutput
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionCustomOutput : UMaterialExpression {
};

// Class Engine.EngineCustomTimeStep
// Size : 0x28 (Inherited : 0x28)
struct UEngineCustomTimeStep : UObject {
};

// Class Engine.DynamicBlueprintBinding
// Size : 0x28 (Inherited : 0x28)
struct UDynamicBlueprintBinding : UObject {
};

// Class Engine.BlueprintGeneratedClass
// Size : 0x328 (Inherited : 0x230)
struct UBlueprintGeneratedClass : UClass {
	int32_t NumReplicatedProperties; // 0x230(0x4)
	unsigned char bHasNativizedParent : 1; // 0x234(0x1)
	unsigned char bHasCookedComponentInstancingData : 1; // 0x234(0x1)
	unsigned char UnknownData_234_2 : 6; // 0x234(0x1)
	unsigned char UnknownData_235[0x0003]; // 0x235(0x3)
	struct TArray<struct UDynamicBlueprintBinding*> DynamicBindingObjects; // 0x238(0x10)
	struct TArray<struct UActorComponent*> ComponentTemplates; // 0x248(0x10)
	struct TArray<struct UTimelineTemplate*> Timelines; // 0x258(0x10)
	struct TArray<struct FBPComponentClassOverride> ComponentClassOverrides; // 0x268(0x10)
	struct USimpleConstructionScript* SimpleConstructionScript; // 0x278(0x8)
	struct UInheritableComponentHandler* InheritableComponentHandler; // 0x280(0x8)
	struct UStructProperty* UberGraphFramePointerProperty; // 0x288(0x8)
	unsigned char UnknownData_290[0x0008]; // 0x290(0x8)
	struct UFunction* UberGraphFunction; // 0x298(0x8)
	struct TMap<struct FName, struct FBlueprintCookedComponentInstancingData> CookedComponentInstancingData; // 0x2A0(0x50)
	unsigned char UnknownData_2F0[0x0038]; // 0x2F0(0x38)
};

// Class Engine.CameraComponent
// Size : 0x7D0 (Inherited : 0x1F0)
struct UCameraComponent : USceneComponent {
	float FieldOfView; // 0x1F0(0x4)
	float OrthoWidth; // 0x1F4(0x4)
	float OrthoNearClipPlane; // 0x1F8(0x4)
	float OrthoFarClipPlane; // 0x1FC(0x4)
	float AspectRatio; // 0x200(0x4)
	unsigned char bConstrainAspectRatio : 1; // 0x204(0x1)
	unsigned char bUseFieldOfViewForLOD : 1; // 0x204(0x1)
	unsigned char bLockToHmd : 1; // 0x204(0x1)
	unsigned char bUsePawnControlRotation : 1; // 0x204(0x1)
	unsigned char UnknownData_204_4 : 4; // 0x204(0x1)
	enum class ECameraProjectionMode ProjectionMode; // 0x205(0x1)
	unsigned char UnknownData_206[0x003A]; // 0x206(0x3A)
	float PostProcessBlendWeight; // 0x240(0x4)
	unsigned char UnknownData_244[0x002C]; // 0x244(0x2C)
	struct FPostProcessSettings PostProcessSettings; // 0x270(0x560)

	void SetUseFieldOfViewForLOD(bool bInUseFieldOfViewForLOD); // Function Engine.CameraComponent.SetUseFieldOfViewForLOD // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556D3A40
	void SetProjectionMode(enum class ECameraProjectionMode InProjectionMode); // Function Engine.CameraComponent.SetProjectionMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556D3940
	void SetPostProcessBlendWeight(float InPostProcessBlendWeight); // Function Engine.CameraComponent.SetPostProcessBlendWeight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D38C0
	void SetOrthoWidth(float InOrthoWidth); // Function Engine.CameraComponent.SetOrthoWidth // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D3840
	void SetOrthoNearClipPlane(float InOrthoNearClipPlane); // Function Engine.CameraComponent.SetOrthoNearClipPlane // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D37C0
	void SetOrthoFarClipPlane(float InOrthoFarClipPlane); // Function Engine.CameraComponent.SetOrthoFarClipPlane // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D3740
	void SetFieldOfView(float InFieldOfView); // Function Engine.CameraComponent.SetFieldOfView // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D36C0
	void SetConstraintAspectRatio(bool bInConstrainAspectRatio); // Function Engine.CameraComponent.SetConstraintAspectRatio // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556D35B0
	void SetAspectRatio(float InAspectRatio); // Function Engine.CameraComponent.SetAspectRatio // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D3530
	void RemoveBlendable(struct TScriptInterface<None> InBlendableObject); // Function Engine.CameraComponent.RemoveBlendable // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556D3400
	void OnCameraMeshHiddenChanged(); // Function Engine.CameraComponent.OnCameraMeshHiddenChanged // (Final|Native|Protected|BlueprintCallable) // Param Size : 0x0, 0x7FF6533F7E70
	void GetCameraView(float DeltaTime, struct FMinimalViewInfo DesiredView); // Function Engine.CameraComponent.GetCameraView // (Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x600, 0x7FF6556D3290
	void AddOrUpdateBlendable(struct TScriptInterface<None> InBlendableObject, float InWeight); // Function Engine.CameraComponent.AddOrUpdateBlendable // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6556D3060
};

// Class Engine.SoundBase
// Size : 0x160 (Inherited : 0x28)
struct USoundBase : UObject {
	struct USoundClass* SoundClassObject; // 0x28(0x8)
	unsigned char bDebug : 1; // 0x30(0x1)
	unsigned char bOverrideConcurrency : 1; // 0x30(0x1)
	unsigned char bOutputToBusOnly : 1; // 0x30(0x1)
	unsigned char bHasDelayNode : 1; // 0x30(0x1)
	unsigned char bHasConcatenatorNode : 1; // 0x30(0x1)
	unsigned char bBypassVolumeScaleForPriority : 1; // 0x30(0x1)
	unsigned char UnknownData_30_6 : 2; // 0x30(0x1)
	enum class EVirtualizationMode VirtualizationMode; // 0x31(0x1)
	unsigned char UnknownData_32[0x0056]; // 0x32(0x56)
	struct TSet<struct USoundConcurrency*> ConcurrencySet; // 0x88(0x50)
	struct FSoundConcurrencySettings ConcurrencyOverrides; // 0xD8(0x20)
	float Duration; // 0xF8(0x4)
	float MaxDistance; // 0xFC(0x4)
	float TotalSamples; // 0x100(0x4)
	float Priority; // 0x104(0x4)
	struct USoundAttenuation* AttenuationSettings; // 0x108(0x8)
	struct FSoundModulation Modulation; // 0x110(0x10)
	struct USoundSubmixBase* SoundSubmixObject; // 0x120(0x8)
	struct TArray<struct FSoundSubmixSendInfo> SoundSubmixSends; // 0x128(0x10)
	struct USoundEffectSourcePresetChain* SourceEffectChain; // 0x138(0x8)
	struct TArray<struct FSoundSourceBusSendInfo> BusSends; // 0x140(0x10)
	struct TArray<struct FSoundSourceBusSendInfo> PreEffectBusSends; // 0x150(0x10)
};

// Class Engine.SoundWave
// Size : 0x308 (Inherited : 0x160)
struct USoundWave : USoundBase {
	int32_t CompressionQuality; // 0x160(0x4)
	int32_t StreamingPriority; // 0x164(0x4)
	enum class ESoundwaveSampleRateSettings SampleRateQuality; // 0x168(0x1)
	unsigned char UnknownData_169[0x0001]; // 0x169(0x1)
	enum class ESoundGroup SoundGroup; // 0x16A(0x1)
	unsigned char bLooping : 1; // 0x16B(0x1)
	unsigned char bStreaming : 1; // 0x16B(0x1)
	unsigned char bSeekableStreaming : 1; // 0x16B(0x1)
	unsigned char UnknownData_16B_3 : 5; // 0x16B(0x1)
	enum class ESoundWaveLoadingBehavior LoadingBehavior; // 0x16C(0x1)
	unsigned char UnknownData_16D_0 : 5; // 0x16D(0x1)
	unsigned char bMature : 1; // 0x16D(0x1)
	unsigned char bManualWordWrap : 1; // 0x16D(0x1)
	unsigned char bSingleLine : 1; // 0x16D(0x1)
	unsigned char bIsAmbisonics : 1; // 0x16E(0x1)
	unsigned char UnknownData_16E_1 : 7; // 0x16E(0x1)
	unsigned char UnknownData_16F[0x0001]; // 0x16F(0x1)
	struct TArray<float> FrequenciesToAnalyze; // 0x170(0x10)
	struct TArray<struct FSoundWaveSpectralTimeData> CookedSpectralTimeData; // 0x180(0x10)
	struct TArray<struct FSoundWaveEnvelopeTimeData> CookedEnvelopeTimeData; // 0x190(0x10)
	int32_t InitialChunkSize; // 0x1A0(0x4)
	unsigned char UnknownData_1A4[0x0044]; // 0x1A4(0x44)
	struct FString SpokenText; // 0x1E8(0x10)
	float SubtitlePriority; // 0x1F8(0x4)
	float Volume; // 0x1FC(0x4)
	float Pitch; // 0x200(0x4)
	int32_t NumChannels; // 0x204(0x4)
	int32_t SampleRate; // 0x208(0x4)
	unsigned char UnknownData_20C[0x000C]; // 0x20C(0xC)
	struct TArray<struct FSubtitleCue> Subtitles; // 0x218(0x10)
	struct UCurveTable* Curves; // 0x228(0x8)
	struct UCurveTable* InternalCurves; // 0x230(0x8)
	unsigned char UnknownData_238[0x00D0]; // 0x238(0xD0)
};

// Class Engine.SoundWaveProcedural
// Size : 0x360 (Inherited : 0x308)
struct USoundWaveProcedural : USoundWave {
	unsigned char UnknownData_308[0x0058]; // 0x308(0x58)
};

// Class Engine.BlueprintCore
// Size : 0x50 (Inherited : 0x28)
struct UBlueprintCore : UObject {
	class UObject* SkeletonGeneratedClass; // 0x28(0x8)
	class UObject* GeneratedClass; // 0x30(0x8)
	bool bLegacyNeedToPurgeSkelRefs; // 0x38(0x1)
	unsigned char UnknownData_39[0x0003]; // 0x39(0x3)
	struct FGuid BlueprintGuid; // 0x3C(0x10)
	unsigned char UnknownData_4C[0x0004]; // 0x4C(0x4)
};

// Class Engine.Blueprint
// Size : 0xA0 (Inherited : 0x50)
struct UBlueprint : UBlueprintCore {
	class UObject* ParentClass; // 0x50(0x8)
	enum class EBlueprintType BlueprintType; // 0x58(0x1)
	unsigned char bRecompileOnLoad : 1; // 0x59(0x1)
	unsigned char bHasBeenRegenerated : 1; // 0x59(0x1)
	unsigned char bIsRegeneratingOnLoad : 1; // 0x59(0x1)
	unsigned char UnknownData_59_3 : 5; // 0x59(0x1)
	unsigned char UnknownData_5A[0x0002]; // 0x5A(0x2)
	int32_t BlueprintSystemVersion; // 0x5C(0x4)
	struct USimpleConstructionScript* SimpleConstructionScript; // 0x60(0x8)
	struct TArray<struct UActorComponent*> ComponentTemplates; // 0x68(0x10)
	struct TArray<struct UTimelineTemplate*> Timelines; // 0x78(0x10)
	struct TArray<struct FBPComponentClassOverride> ComponentClassOverrides; // 0x88(0x10)
	struct UInheritableComponentHandler* InheritableComponentHandler; // 0x98(0x8)
};

// Class Engine.Model
// Size : 0x258 (Inherited : 0x28)
struct UModel : UObject {
	unsigned char UnknownData_28[0x0230]; // 0x28(0x230)
};

// Class Engine.Channel
// Size : 0x70 (Inherited : 0x28)
struct UChannel : UObject {
	struct UNetConnection* Connection; // 0x28(0x8)
	unsigned char UnknownData_30[0x0040]; // 0x30(0x40)
};

// Class Engine.ActorChannel
// Size : 0x298 (Inherited : 0x70)
struct UActorChannel : UChannel {
	struct AActor* Actor; // 0x70(0x8)
	unsigned char UnknownData_78[0x00E8]; // 0x78(0xE8)
	struct TArray<struct UObject*> CreateSubObjects; // 0x160(0x10)
	unsigned char UnknownData_170[0x0128]; // 0x170(0x128)
};

// Class Engine.AnimationAsset
// Size : 0x80 (Inherited : 0x28)
struct UAnimationAsset : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
	struct USkeleton* Skeleton; // 0x38(0x8)
	unsigned char UnknownData_40[0x0020]; // 0x40(0x20)
	struct TArray<struct UAnimMetaData*> MetaData; // 0x60(0x10)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x70(0x10)
};

// Class Engine.BlendSpaceBase
// Size : 0x148 (Inherited : 0x80)
struct UBlendSpaceBase : UAnimationAsset {
	unsigned char UnknownData_80[0x0008]; // 0x80(0x8)
	bool bRotationBlendInMeshSpace; // 0x88(0x1)
	unsigned char UnknownData_89[0x0003]; // 0x89(0x3)
	float AnimLength; // 0x8C(0x4)
	struct FInterpolationParameter InterpolationParam[3]; // 0x90(0x18)
	float TargetWeightInterpolationSpeedPerSec; // 0xA8(0x4)
	enum class ENotifyTriggerMode NotifyTriggerMode; // 0xAC(0x1)
	unsigned char UnknownData_AD[0x0003]; // 0xAD(0x3)
	struct TArray<struct FPerBoneInterpolation> PerBoneBlend; // 0xB0(0x10)
	int32_t SampleIndexWithMarkers; // 0xC0(0x4)
	unsigned char UnknownData_C4[0x0004]; // 0xC4(0x4)
	struct TArray<struct FBlendSample> SampleData; // 0xC8(0x10)
	struct TArray<struct FEditorElement> GridSamples; // 0xD8(0x10)
	struct FBlendParameter BlendParameters[3]; // 0xE8(0x60)
};

// Class Engine.BlendSpace
// Size : 0x150 (Inherited : 0x148)
struct UBlendSpace : UBlendSpaceBase {
	enum class EBlendSpaceAxis AxisToScaleAnimation; // 0x148(0x1)
	unsigned char UnknownData_149[0x0007]; // 0x149(0x7)
};

// Class Engine.AimOffsetBlendSpace
// Size : 0x150 (Inherited : 0x150)
struct UAimOffsetBlendSpace : UBlendSpace {
};

// Class Engine.BlendSpace1D
// Size : 0x150 (Inherited : 0x148)
struct UBlendSpace1D : UBlendSpaceBase {
	bool bScaleAnimation; // 0x148(0x1)
	unsigned char UnknownData_149[0x0007]; // 0x149(0x7)
};

// Class Engine.AimOffsetBlendSpace1D
// Size : 0x150 (Inherited : 0x150)
struct UAimOffsetBlendSpace1D : UBlendSpace1D {
};

// Class Engine.AISystemBase
// Size : 0x58 (Inherited : 0x28)
struct UAISystemBase : UObject {
	struct FSoftClassPath AISystemClassName; // 0x28(0x18)
	struct FName AISystemModuleName; // 0x40(0x8)
	unsigned char UnknownData_48[0x0008]; // 0x48(0x8)
	bool bInstantiateAISystemOnClient; // 0x50(0x1)
	unsigned char UnknownData_51[0x0007]; // 0x51(0x7)
};

// Class Engine.AmbientSound
// Size : 0x228 (Inherited : 0x220)
struct AAmbientSound : AActor {
	struct UAudioComponent* AudioComponent; // 0x220(0x8)

	void Stop(); // Function Engine.AmbientSound.Stop // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556A7CC0
	void Play(float StartTime); // Function Engine.AmbientSound.Play // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556A77A0
	void FadeOut(float FadeOutDuration, float FadeVolumeLevel); // Function Engine.AmbientSound.FadeOut // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A7580
	void FadeIn(float FadeInDuration, float FadeVolumeLevel); // Function Engine.AmbientSound.FadeIn // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A74C0
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel); // Function Engine.AmbientSound.AdjustVolume // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556A7370
};

// Class Engine.AnimationSettings
// Size : 0x58 (Inherited : 0x38)
struct UAnimationSettings : UDeveloperSettings {
	int32_t CompressCommandletVersion; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
	struct TArray<struct FString> KeyEndEffectorsMatchNameArray; // 0x40(0x10)
	bool ForceRecompression; // 0x50(0x1)
	bool bOnlyCheckForMissingSkeletalMeshes; // 0x51(0x1)
	bool bForceBelowThreshold; // 0x52(0x1)
	bool bFirstRecompressUsingCurrentOrDefault; // 0x53(0x1)
	bool bRaiseMaxErrorToExisting; // 0x54(0x1)
	bool bEnablePerformanceLog; // 0x55(0x1)
	bool bStripAnimationDataOnDedicatedServer; // 0x56(0x1)
	bool bTickAnimationOnSkeletalMeshInit; // 0x57(0x1)
};

// Class Engine.AnimBlueprint
// Size : 0xC8 (Inherited : 0xA0)
struct UAnimBlueprint : UBlueprint {
	unsigned char UnknownData_A0[0x0008]; // 0xA0(0x8)
	struct USkeleton* TargetSkeleton; // 0xA8(0x8)
	struct TArray<struct FAnimGroupInfo> Groups; // 0xB0(0x10)
	bool bUseMultiThreadedAnimationUpdate; // 0xC0(0x1)
	bool bWarnAboutBlueprintUsage; // 0xC1(0x1)
	unsigned char UnknownData_C2[0x0006]; // 0xC2(0x6)
};

// Class Engine.AnimBlueprintGeneratedClass
// Size : 0x4E8 (Inherited : 0x328)
struct UAnimBlueprintGeneratedClass : UBlueprintGeneratedClass {
	unsigned char UnknownData_328[0x0008]; // 0x328(0x8)
	struct TArray<struct FBakedAnimationStateMachine> BakedStateMachines; // 0x330(0x10)
	struct USkeleton* TargetSkeleton; // 0x340(0x8)
	struct TArray<struct FAnimNotifyEvent> AnimNotifies; // 0x348(0x10)
	struct TMap<struct FName, struct FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x358(0x50)
	unsigned char UnknownData_3A8[0x0080]; // 0x3A8(0x80)
	struct TArray<struct FName> SyncGroupNames; // 0x428(0x10)
	struct TArray<struct FExposedValueHandler> EvaluateGraphExposedInputs; // 0x438(0x10)
	struct TMap<struct FName, struct FGraphAssetPlayerInformation> GraphAssetPlayerInformation; // 0x448(0x50)
	struct TMap<struct FName, struct FAnimGraphBlendOptions> GraphBlendOptions; // 0x498(0x50)
};

// Class Engine.AnimBoneCompressionCodec
// Size : 0x38 (Inherited : 0x28)
struct UAnimBoneCompressionCodec : UObject {
	struct FString Description; // 0x28(0x10)
};

// Class Engine.AnimBoneCompressionSettings
// Size : 0x38 (Inherited : 0x28)
struct UAnimBoneCompressionSettings : UObject {
	struct TArray<struct UAnimBoneCompressionCodec*> Codecs; // 0x28(0x10)
};

// Class Engine.AnimClassData
// Size : 0x268 (Inherited : 0x28)
struct UAnimClassData : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct TArray<struct FBakedAnimationStateMachine> BakedStateMachines; // 0x30(0x10)
	struct USkeleton* TargetSkeleton; // 0x40(0x8)
	struct TArray<struct FAnimNotifyEvent> AnimNotifies; // 0x48(0x10)
	struct TMap<struct FName, struct FCachedPoseIndices> OrderedSavedPoseIndicesMap; // 0x58(0x50)
	struct TArray<struct FAnimBlueprintFunction> AnimBlueprintFunctions; // 0xA8(0x10)
	struct TArray<struct FAnimBlueprintFunctionData> AnimBlueprintFunctionData; // 0xB8(0x10)
	struct TArray<FieldPathProperty> AnimNodeProperties; // 0xC8(0x10)
	unsigned char UnknownData_D8[0x0010]; // 0xD8(0x10)
	struct TArray<FieldPathProperty> LinkedAnimGraphNodeProperties; // 0xE8(0x10)
	unsigned char UnknownData_F8[0x0010]; // 0xF8(0x10)
	struct TArray<FieldPathProperty> LinkedAnimLayerNodeProperties; // 0x108(0x10)
	unsigned char UnknownData_118[0x0010]; // 0x118(0x10)
	struct TArray<FieldPathProperty> PreUpdateNodeProperties; // 0x128(0x10)
	unsigned char UnknownData_138[0x0010]; // 0x138(0x10)
	struct TArray<FieldPathProperty> DynamicResetNodeProperties; // 0x148(0x10)
	unsigned char UnknownData_158[0x0010]; // 0x158(0x10)
	struct TArray<FieldPathProperty> StateMachineNodeProperties; // 0x168(0x10)
	unsigned char UnknownData_178[0x0010]; // 0x178(0x10)
	struct TArray<FieldPathProperty> InitializationNodeProperties; // 0x188(0x10)
	unsigned char UnknownData_198[0x0010]; // 0x198(0x10)
	struct TMap<struct FName, struct FGraphAssetPlayerInformation> GraphNameAssetPlayers; // 0x1A8(0x50)
	struct TArray<struct FName> SyncGroupNames; // 0x1F8(0x10)
	struct TArray<struct FExposedValueHandler> EvaluateGraphExposedInputs; // 0x208(0x10)
	struct TMap<struct FName, struct FAnimGraphBlendOptions> GraphBlendOptions; // 0x218(0x50)
};

// Class Engine.AnimClassInterface
// Size : 0x28 (Inherited : 0x28)
struct UAnimClassInterface : UInterface {
};

// Class Engine.AnimSequenceBase
// Size : 0xA8 (Inherited : 0x80)
struct UAnimSequenceBase : UAnimationAsset {
	struct TArray<struct FAnimNotifyEvent> Notifies; // 0x80(0x10)
	float SequenceLength; // 0x90(0x4)
	float RateScale; // 0x94(0x4)
	struct FRawCurveTracks RawCurveData; // 0x98(0x10)

	float GetPlayLength(); // Function Engine.AnimSequenceBase.GetPlayLength // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556B92A0
};

// Class Engine.AnimCompositeBase
// Size : 0xA8 (Inherited : 0xA8)
struct UAnimCompositeBase : UAnimSequenceBase {
};

// Class Engine.AnimComposite
// Size : 0xB8 (Inherited : 0xA8)
struct UAnimComposite : UAnimCompositeBase {
	struct FAnimTrack AnimationTrack; // 0xA8(0x10)
};

// Class Engine.AnimCompress
// Size : 0x40 (Inherited : 0x38)
struct UAnimCompress : UAnimBoneCompressionCodec {
	unsigned char bNeedsSkeleton : 1; // 0x38(0x1)
	unsigned char UnknownData_38_1 : 7; // 0x38(0x1)
	unsigned char UnknownData_39[0x0003]; // 0x39(0x3)
	enum class AnimationCompressionFormat TranslationCompressionFormat; // 0x3C(0x1)
	enum class AnimationCompressionFormat RotationCompressionFormat; // 0x3D(0x1)
	enum class AnimationCompressionFormat ScaleCompressionFormat; // 0x3E(0x1)
	unsigned char UnknownData_3F[0x0001]; // 0x3F(0x1)
};

// Class Engine.AnimCompress_BitwiseCompressOnly
// Size : 0x40 (Inherited : 0x40)
struct UAnimCompress_BitwiseCompressOnly : UAnimCompress {
};

// Class Engine.AnimCompress_LeastDestructive
// Size : 0x40 (Inherited : 0x40)
struct UAnimCompress_LeastDestructive : UAnimCompress_BitwiseCompressOnly {
};

// Class Engine.AnimCompress_RemoveLinearKeys
// Size : 0x60 (Inherited : 0x40)
struct UAnimCompress_RemoveLinearKeys : UAnimCompress {
	float MaxPosDiff; // 0x40(0x4)
	float MaxAngleDiff; // 0x44(0x4)
	float MaxScaleDiff; // 0x48(0x4)
	float MaxEffectorDiff; // 0x4C(0x4)
	float MinEffectorDiff; // 0x50(0x4)
	float EffectorDiffSocket; // 0x54(0x4)
	float ParentKeyScale; // 0x58(0x4)
	unsigned char bRetarget : 1; // 0x5C(0x1)
	unsigned char bActuallyFilterLinearKeys : 1; // 0x5C(0x1)
	unsigned char UnknownData_5C_2 : 6; // 0x5C(0x1)
	unsigned char UnknownData_5D[0x0003]; // 0x5D(0x3)
};

// Class Engine.AnimCompress_PerTrackCompression
// Size : 0xD8 (Inherited : 0x60)
struct UAnimCompress_PerTrackCompression : UAnimCompress_RemoveLinearKeys {
	float MaxZeroingThreshold; // 0x60(0x4)
	float MaxPosDiffBitwise; // 0x64(0x4)
	float MaxAngleDiffBitwise; // 0x68(0x4)
	float MaxScaleDiffBitwise; // 0x6C(0x4)
	struct TArray<enum class AnimationCompressionFormat> AllowedRotationFormats; // 0x70(0x10)
	struct TArray<enum class AnimationCompressionFormat> AllowedTranslationFormats; // 0x80(0x10)
	struct TArray<enum class AnimationCompressionFormat> AllowedScaleFormats; // 0x90(0x10)
	unsigned char bResampleAnimation : 1; // 0xA0(0x1)
	unsigned char UnknownData_A0_1 : 7; // 0xA0(0x1)
	unsigned char UnknownData_A1[0x0003]; // 0xA1(0x3)
	float ResampledFramerate; // 0xA4(0x4)
	int32_t MinKeysForResampling; // 0xA8(0x4)
	unsigned char bUseAdaptiveError : 1; // 0xAC(0x1)
	unsigned char bUseOverrideForEndEffectors : 1; // 0xAC(0x1)
	unsigned char UnknownData_AC_2 : 6; // 0xAC(0x1)
	unsigned char UnknownData_AD[0x0003]; // 0xAD(0x3)
	int32_t TrackHeightBias; // 0xB0(0x4)
	float ParentingDivisor; // 0xB4(0x4)
	float ParentingDivisorExponent; // 0xB8(0x4)
	unsigned char bUseAdaptiveError2 : 1; // 0xBC(0x1)
	unsigned char UnknownData_BC_1 : 7; // 0xBC(0x1)
	unsigned char UnknownData_BD[0x0003]; // 0xBD(0x3)
	float RotationErrorSourceRatio; // 0xC0(0x4)
	float TranslationErrorSourceRatio; // 0xC4(0x4)
	float ScaleErrorSourceRatio; // 0xC8(0x4)
	float MaxErrorPerTrackRatio; // 0xCC(0x4)
	float PerturbationProbeSize; // 0xD0(0x4)
	unsigned char UnknownData_D4[0x0004]; // 0xD4(0x4)
};

// Class Engine.AnimCompress_RemoveEverySecondKey
// Size : 0x48 (Inherited : 0x40)
struct UAnimCompress_RemoveEverySecondKey : UAnimCompress {
	int32_t MinKeys; // 0x40(0x4)
	unsigned char bStartAtSecondKey : 1; // 0x44(0x1)
	unsigned char UnknownData_44_1 : 7; // 0x44(0x1)
	unsigned char UnknownData_45[0x0003]; // 0x45(0x3)
};

// Class Engine.AnimCompress_RemoveTrivialKeys
// Size : 0x50 (Inherited : 0x40)
struct UAnimCompress_RemoveTrivialKeys : UAnimCompress {
	float MaxPosDiff; // 0x40(0x4)
	float MaxAngleDiff; // 0x44(0x4)
	float MaxScaleDiff; // 0x48(0x4)
	unsigned char UnknownData_4C[0x0004]; // 0x4C(0x4)
};

// Class Engine.AnimCurveCompressionCodec
// Size : 0x28 (Inherited : 0x28)
struct UAnimCurveCompressionCodec : UObject {
};

// Class Engine.AnimCurveCompressionCodec_CompressedRichCurve
// Size : 0x28 (Inherited : 0x28)
struct UAnimCurveCompressionCodec_CompressedRichCurve : UAnimCurveCompressionCodec {
};

// Class Engine.AnimCurveCompressionCodec_UniformIndexable
// Size : 0x28 (Inherited : 0x28)
struct UAnimCurveCompressionCodec_UniformIndexable : UAnimCurveCompressionCodec {
};

// Class Engine.AnimCurveCompressionCodec_UniformlySampled
// Size : 0x28 (Inherited : 0x28)
struct UAnimCurveCompressionCodec_UniformlySampled : UAnimCurveCompressionCodec {
};

// Class Engine.AnimCurveCompressionSettings
// Size : 0x30 (Inherited : 0x28)
struct UAnimCurveCompressionSettings : UObject {
	struct UAnimCurveCompressionCodec* Codec; // 0x28(0x8)
};

// Class Engine.AnimLayerInterface
// Size : 0x28 (Inherited : 0x28)
struct UAnimLayerInterface : UInterface {
};

// Class Engine.AnimMetaData
// Size : 0x28 (Inherited : 0x28)
struct UAnimMetaData : UObject {
};

// Class Engine.AnimMontage
// Size : 0x1D0 (Inherited : 0xA8)
struct UAnimMontage : UAnimCompositeBase {
	struct FAlphaBlend BlendIn; // 0xA8(0x30)
	float BlendInTime; // 0xD8(0x4)
	unsigned char UnknownData_DC[0x0004]; // 0xDC(0x4)
	struct FAlphaBlend BlendOut; // 0xE0(0x30)
	float BlendOutTime; // 0x110(0x4)
	float BlendOutTriggerTime; // 0x114(0x4)
	struct FName SyncGroup; // 0x118(0x8)
	int32_t SyncSlotIndex; // 0x120(0x4)
	unsigned char UnknownData_124[0x0004]; // 0x124(0x4)
	struct FMarkerSyncData MarkerData; // 0x128(0x20)
	struct TArray<struct FCompositeSection> CompositeSections; // 0x148(0x10)
	struct TArray<struct FSlotAnimationTrack> SlotAnimTracks; // 0x158(0x10)
	struct TArray<struct FBranchingPoint> BranchingPoints; // 0x168(0x10)
	bool bEnableRootMotionTranslation; // 0x178(0x1)
	bool bEnableRootMotionRotation; // 0x179(0x1)
	bool bEnableAutoBlendOut; // 0x17A(0x1)
	enum class ERootMotionRootLock RootMotionRootLock; // 0x17B(0x1)
	unsigned char UnknownData_17C[0x0004]; // 0x17C(0x4)
	struct TArray<struct FBranchingPointMarker> BranchingPointMarkers; // 0x180(0x10)
	struct TArray<int32_t> BranchingPointStateNotifyIndices; // 0x190(0x10)
	struct FTimeStretchCurve TimeStretchCurve; // 0x1A0(0x28)
	struct FName TimeStretchCurveName; // 0x1C8(0x8)

	float GetDefaultBlendOutTime(); // Function Engine.AnimMontage.GetDefaultBlendOutTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF654D72C40
};

// Class Engine.AnimNotify_PauseClothingSimulation
// Size : 0x38 (Inherited : 0x38)
struct UAnimNotify_PauseClothingSimulation : UAnimNotify {
};

// Class Engine.AnimNotify_PlayParticleEffect
// Size : 0x90 (Inherited : 0x38)
struct UAnimNotify_PlayParticleEffect : UAnimNotify {
	struct UParticleSystem* PSTemplate; // 0x38(0x8)
	struct FVector LocationOffset; // 0x40(0xC)
	struct FRotator RotationOffset; // 0x4C(0xC)
	struct FVector Scale; // 0x58(0xC)
	unsigned char UnknownData_64[0x001C]; // 0x64(0x1C)
	unsigned char Attached : 1; // 0x80(0x1)
	unsigned char UnknownData_80_1 : 7; // 0x80(0x1)
	unsigned char UnknownData_81[0x0003]; // 0x81(0x3)
	struct FName SocketName; // 0x84(0x8)
	unsigned char UnknownData_8C[0x0004]; // 0x8C(0x4)
};

// Class Engine.AnimNotify_PlaySound
// Size : 0x58 (Inherited : 0x38)
struct UAnimNotify_PlaySound : UAnimNotify {
	struct USoundBase* Sound; // 0x38(0x8)
	float VolumeMultiplier; // 0x40(0x4)
	float PitchMultiplier; // 0x44(0x4)
	unsigned char bFollow : 1; // 0x48(0x1)
	unsigned char UnknownData_48_1 : 7; // 0x48(0x1)
	unsigned char UnknownData_49[0x0003]; // 0x49(0x3)
	struct FName AttachName; // 0x4C(0x8)
	unsigned char UnknownData_54[0x0004]; // 0x54(0x4)
};

// Class Engine.AnimNotify_ResetClothingSimulation
// Size : 0x38 (Inherited : 0x38)
struct UAnimNotify_ResetClothingSimulation : UAnimNotify {
};

// Class Engine.AnimNotify_ResetDynamics
// Size : 0x38 (Inherited : 0x38)
struct UAnimNotify_ResetDynamics : UAnimNotify {
};

// Class Engine.AnimNotify_ResumeClothingSimulation
// Size : 0x38 (Inherited : 0x38)
struct UAnimNotify_ResumeClothingSimulation : UAnimNotify {
};

// Class Engine.AnimNotifyState_DisableRootMotion
// Size : 0x30 (Inherited : 0x30)
struct UAnimNotifyState_DisableRootMotion : UAnimNotifyState {
};

// Class Engine.AnimNotifyState_TimedParticleEffect
// Size : 0x60 (Inherited : 0x30)
struct UAnimNotifyState_TimedParticleEffect : UAnimNotifyState {
	struct UParticleSystem* PSTemplate; // 0x30(0x8)
	struct FName SocketName; // 0x38(0x8)
	struct FVector LocationOffset; // 0x40(0xC)
	struct FRotator RotationOffset; // 0x4C(0xC)
	bool bDestroyAtEnd; // 0x58(0x1)
	unsigned char UnknownData_59[0x0007]; // 0x59(0x7)
};

// Class Engine.AnimNotifyState_Trail
// Size : 0x58 (Inherited : 0x30)
struct UAnimNotifyState_Trail : UAnimNotifyState {
	struct UParticleSystem* PSTemplate; // 0x30(0x8)
	struct FName FirstSocketName; // 0x38(0x8)
	struct FName SecondSocketName; // 0x40(0x8)
	enum class ETrailWidthMode WidthScaleMode; // 0x48(0x1)
	unsigned char UnknownData_49[0x0003]; // 0x49(0x3)
	struct FName WidthScaleCurve; // 0x4C(0x8)
	unsigned char bRecycleSpawnedSystems : 1; // 0x54(0x1)
	unsigned char UnknownData_54_1 : 7; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)

	struct UParticleSystem* OverridePSTemplate(struct USkeletalMeshComponent* MeshComp, struct UAnimSequenceBase* Animation); // Function Engine.AnimNotifyState_Trail.OverridePSTemplate // (Event|Public|BlueprintEvent|Const) // Param Size : 0x18, 0x7FF653FAFDF0
};

// Class Engine.AnimSequence
// Size : 0x1A0 (Inherited : 0xA8)
struct UAnimSequence : UAnimSequenceBase {
	int32_t NumFrames; // 0xA8(0x4)
	unsigned char UnknownData_AC[0x0004]; // 0xAC(0x4)
	struct TArray<struct FTrackToSkeletonMap> TrackToSkeletonMapTable; // 0xB0(0x10)
	unsigned char UnknownData_C0[0x0010]; // 0xC0(0x10)
	struct UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xD0(0x8)
	struct UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xD8(0x8)
	unsigned char UnknownData_E0[0x0070]; // 0xE0(0x70)
	enum class EAdditiveAnimationType AdditiveAnimType; // 0x150(0x1)
	enum class EAdditiveBasePoseType RefPoseType; // 0x151(0x1)
	unsigned char UnknownData_152[0x0006]; // 0x152(0x6)
	struct UAnimSequence* RefPoseSeq; // 0x158(0x8)
	int32_t RefFrameIndex; // 0x160(0x4)
	struct FName RetargetSource; // 0x164(0x8)
	enum class EAnimInterpolationType Interpolation; // 0x16C(0x1)
	bool bEnableRootMotion; // 0x16D(0x1)
	enum class ERootMotionRootLock RootMotionRootLock; // 0x16E(0x1)
	bool bForceRootLock; // 0x16F(0x1)
	bool bUseNormalizedRootMotionScale; // 0x170(0x1)
	bool bRootMotionSettingsCopiedFromMontage; // 0x171(0x1)
	unsigned char UnknownData_172[0x0006]; // 0x172(0x6)
	struct TArray<struct FAnimSyncMarker> AuthoredSyncMarkers; // 0x178(0x10)
	unsigned char UnknownData_188[0x0018]; // 0x188(0x18)
};

// Class Engine.AnimSet
// Size : 0xF0 (Inherited : 0x28)
struct UAnimSet : UObject {
	unsigned char bAnimRotationOnly : 1; // 0x28(0x1)
	unsigned char UnknownData_28_1 : 7; // 0x28(0x1)
	unsigned char UnknownData_29[0x0007]; // 0x29(0x7)
	struct TArray<struct FName> TrackBoneNames; // 0x30(0x10)
	struct TArray<struct FAnimSetMeshLinkup> LinkupCache; // 0x40(0x10)
	struct TArray<enum class None> BoneUseAnimTranslation; // 0x50(0x10)
	struct TArray<enum class None> ForceUseMeshTranslation; // 0x60(0x10)
	struct TArray<struct FName> UseTranslationBoneNames; // 0x70(0x10)
	struct TArray<struct FName> ForceMeshTranslationBoneNames; // 0x80(0x10)
	struct FName PreviewSkelMeshName; // 0x90(0x8)
	struct FName BestRatioSkelMeshName; // 0x98(0x8)
	unsigned char UnknownData_A0[0x0050]; // 0xA0(0x50)
};

// Class Engine.AnimSingleNodeInstance
// Size : 0x280 (Inherited : 0x270)
struct UAnimSingleNodeInstance : UAnimInstance {
	struct UAnimationAsset* CurrentAsset; // 0x268(0x8)
	struct FDelegate PostEvaluateAnimEvent; // 0x270(0x10)

	void StopAnim(); // Function Engine.AnimSingleNodeInstance.StopAnim // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556B9AB0
	void SetReverse(bool bInReverse); // Function Engine.AnimSingleNodeInstance.SetReverse // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556B9A20
	void SetPreviewCurveOverride(struct FName PoseName, float Value, bool bRemoveIfZero); // Function Engine.AnimSingleNodeInstance.SetPreviewCurveOverride // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0xD, 0x7FF6556B9900
	void SetPositionWithPreviousTime(float InPosition, float InPreviousTime, bool bFireNotifies); // Function Engine.AnimSingleNodeInstance.SetPositionWithPreviousTime // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6556B97F0
	void SetPosition(float InPosition, bool bFireNotifies); // Function Engine.AnimSingleNodeInstance.SetPosition // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6556B9720
	void SetPlayRate(float InPlayRate); // Function Engine.AnimSingleNodeInstance.SetPlayRate // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556B9610
	void SetPlaying(bool bIsPlaying); // Function Engine.AnimSingleNodeInstance.SetPlaying // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556B9690
	void SetLooping(bool bIsLooping); // Function Engine.AnimSingleNodeInstance.SetLooping // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556B9580
	void SetBlendSpaceInput(struct FVector InBlendInput); // Function Engine.AnimSingleNodeInstance.SetBlendSpaceInput // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6556B94F0
	void SetAnimationAsset(struct UAnimationAsset* NewAsset, bool bIsLooping, float InPlayRate); // Function Engine.AnimSingleNodeInstance.SetAnimationAsset // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556B93E0
	void PlayAnim(bool bIsLooping, float InPlayRate, float InStartPosition); // Function Engine.AnimSingleNodeInstance.PlayAnim // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556B92E0
	float GetLength(); // Function Engine.AnimSingleNodeInstance.GetLength // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556B9270
	struct UAnimationAsset* GetAnimationAsset(); // Function Engine.AnimSingleNodeInstance.GetAnimationAsset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556B9240
};

// Class Engine.AnimStateMachineTypes
// Size : 0x28 (Inherited : 0x28)
struct UAnimStateMachineTypes : UObject {
};

// Class Engine.AnimStreamable
// Size : 0xE0 (Inherited : 0xA8)
struct UAnimStreamable : UAnimSequenceBase {
	int32_t NumFrames; // 0xA8(0x4)
	enum class EAnimInterpolationType Interpolation; // 0xAC(0x1)
	unsigned char UnknownData_AD[0x0003]; // 0xAD(0x3)
	struct FName RetargetSource; // 0xB0(0x8)
	unsigned char UnknownData_B8[0x0010]; // 0xB8(0x10)
	struct UAnimBoneCompressionSettings* BoneCompressionSettings; // 0xC8(0x8)
	struct UAnimCurveCompressionSettings* CurveCompressionSettings; // 0xD0(0x8)
	bool bEnableRootMotion; // 0xD8(0x1)
	enum class ERootMotionRootLock RootMotionRootLock; // 0xD9(0x1)
	bool bForceRootLock; // 0xDA(0x1)
	bool bUseNormalizedRootMotionScale; // 0xDB(0x1)
	unsigned char UnknownData_DC[0x0004]; // 0xDC(0x4)
};

// Class Engine.ArrowComponent
// Size : 0x420 (Inherited : 0x410)
struct UArrowComponent : UPrimitiveComponent {
	struct FColor ArrowColor; // 0x408(0x4)
	float ArrowSize; // 0x40C(0x4)
	float ScreenSize; // 0x410(0x4)
	unsigned char bIsScreenSizeScaled : 1; // 0x414(0x1)
	unsigned char bTreatAsASprite : 1; // 0x414(0x1)
	unsigned char UnknownData_41C_2 : 6; // 0x41C(0x1)
	unsigned char UnknownData_41D[0x0003]; // 0x41D(0x3)

	void SetArrowColor(struct FLinearColor NewColor); // Function Engine.ArrowComponent.SetArrowColor // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6556BC820
};

// Class Engine.AssetExportTask
// Size : 0x78 (Inherited : 0x28)
struct UAssetExportTask : UObject {
	struct UObject* Object; // 0x28(0x8)
	struct UExporter* Exporter; // 0x30(0x8)
	struct FString Filename; // 0x38(0x10)
	bool bSelected; // 0x48(0x1)
	bool bReplaceIdentical; // 0x49(0x1)
	bool bPrompt; // 0x4A(0x1)
	bool bAutomated; // 0x4B(0x1)
	bool bUseFileArchive; // 0x4C(0x1)
	bool bWriteEmptyFiles; // 0x4D(0x1)
	unsigned char UnknownData_4E[0x0002]; // 0x4E(0x2)
	struct TArray<struct UObject*> IgnoreObjectList; // 0x50(0x10)
	struct UObject* Options; // 0x60(0x8)
	struct TArray<struct FString> Errors; // 0x68(0x10)
};

// Class Engine.AssetManagerSettings
// Size : 0x100 (Inherited : 0x38)
struct UAssetManagerSettings : UDeveloperSettings {
	struct TArray<struct FPrimaryAssetTypeInfo> PrimaryAssetTypesToScan; // 0x38(0x10)
	struct TArray<struct FDirectoryPath> DirectoriesToExclude; // 0x48(0x10)
	struct TArray<struct FPrimaryAssetRulesOverride> PrimaryAssetRules; // 0x58(0x10)
	struct TArray<struct FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules; // 0x68(0x10)
	bool bOnlyCookProductionAssets; // 0x78(0x1)
	bool bShouldManagerDetermineTypeAndName; // 0x79(0x1)
	bool bShouldGuessTypeAndNameInEditor; // 0x7A(0x1)
	bool bShouldAcquireMissingChunksOnLoad; // 0x7B(0x1)
	unsigned char UnknownData_7C[0x0004]; // 0x7C(0x4)
	struct TArray<struct FAssetManagerRedirect> PrimaryAssetIdRedirects; // 0x80(0x10)
	struct TArray<struct FAssetManagerRedirect> PrimaryAssetTypeRedirects; // 0x90(0x10)
	struct TArray<struct FAssetManagerRedirect> AssetPathRedirects; // 0xA0(0x10)
	struct TSet<struct FName> MetaDataTagsForAssetRegistry; // 0xB0(0x50)
};

// Class Engine.AssetMappingTable
// Size : 0x38 (Inherited : 0x28)
struct UAssetMappingTable : UObject {
	struct TArray<struct FAssetMapping> MappedAssets; // 0x28(0x10)
};

// Class Engine.AsyncActionHandleSaveGame
// Size : 0x68 (Inherited : 0x30)
struct UAsyncActionHandleSaveGame : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate Completed; // 0x30(0x10)
	unsigned char UnknownData_40[0x0020]; // 0x40(0x20)
	struct USaveGame* SaveGameObject; // 0x60(0x8)

	struct UAsyncActionHandleSaveGame* AsyncSaveGameToSlot(struct UObject* WorldContextObject, struct USaveGame* SaveGameObject, struct FString SlotName, int32_t UserIndex); // Function Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF6556BC6D0
	struct UAsyncActionHandleSaveGame* AsyncLoadGameFromSlot(struct UObject* WorldContextObject, struct FString SlotName, int32_t UserIndex); // Function Engine.AsyncActionHandleSaveGame.AsyncLoadGameFromSlot // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF6556BC5B0
};

// Class Engine.AsyncActionLoadPrimaryAssetBase
// Size : 0x78 (Inherited : 0x30)
struct UAsyncActionLoadPrimaryAssetBase : UBlueprintAsyncActionBase {
	unsigned char UnknownData_30[0x0048]; // 0x30(0x48)
};

// Class Engine.AsyncActionLoadPrimaryAsset
// Size : 0x88 (Inherited : 0x78)
struct UAsyncActionLoadPrimaryAsset : UAsyncActionLoadPrimaryAssetBase {
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)

	struct UAsyncActionLoadPrimaryAsset* AsyncLoadPrimaryAsset(struct UObject* WorldContextObject, struct FPrimaryAssetId PrimaryAsset, struct TArray<struct FName> LoadBundles); // Function Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x30, 0x7FF6556BF0D0
};

// Class Engine.AsyncActionLoadPrimaryAssetClass
// Size : 0x88 (Inherited : 0x78)
struct UAsyncActionLoadPrimaryAssetClass : UAsyncActionLoadPrimaryAssetBase {
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)

	struct UAsyncActionLoadPrimaryAssetClass* AsyncLoadPrimaryAssetClass(struct UObject* WorldContextObject, struct FPrimaryAssetId PrimaryAsset, struct TArray<struct FName> LoadBundles); // Function Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x30, 0x7FF6556BF210
};

// Class Engine.AsyncActionLoadPrimaryAssetList
// Size : 0x88 (Inherited : 0x78)
struct UAsyncActionLoadPrimaryAssetList : UAsyncActionLoadPrimaryAssetBase {
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)

	struct UAsyncActionLoadPrimaryAssetList* AsyncLoadPrimaryAssetList(struct UObject* WorldContextObject, struct TArray<struct FPrimaryAssetId> PrimaryAssetList, struct TArray<struct FName> LoadBundles); // Function Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x30, 0x7FF6556BF4B0
};

// Class Engine.AsyncActionLoadPrimaryAssetClassList
// Size : 0x88 (Inherited : 0x78)
struct UAsyncActionLoadPrimaryAssetClassList : UAsyncActionLoadPrimaryAssetBase {
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)

	struct UAsyncActionLoadPrimaryAssetClassList* AsyncLoadPrimaryAssetClassList(struct UObject* WorldContextObject, struct TArray<struct FPrimaryAssetId> PrimaryAssetList, struct TArray<struct FName> LoadBundles); // Function Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x30, 0x7FF6556BF350
};

// Class Engine.AsyncActionChangePrimaryAssetBundles
// Size : 0x88 (Inherited : 0x78)
struct UAsyncActionChangePrimaryAssetBundles : UAsyncActionLoadPrimaryAssetBase {
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)

	struct UAsyncActionChangePrimaryAssetBundles* AsyncChangeBundleStateForPrimaryAssetList(struct UObject* WorldContextObject, struct TArray<struct FPrimaryAssetId> PrimaryAssetList, struct TArray<struct FName> AddBundles, struct TArray<struct FName> RemoveBundles); // Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x40, 0x7FF6556BEF20
	struct UAsyncActionChangePrimaryAssetBundles* AsyncChangeBundleStateForMatchingPrimaryAssets(struct UObject* WorldContextObject, struct TArray<struct FName> NewBundles, struct TArray<struct FName> OldBundles); // Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForMatchingPrimaryAssets // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x30, 0x7FF6556BEDC0
};

// Class Engine.AtmosphericFog
// Size : 0x228 (Inherited : 0x220)
struct AAtmosphericFog : AInfo {
	struct UAtmosphericFogComponent* AtmosphericFogComponent; // 0x220(0x8)
};

// Class Engine.AtmosphericFogComponent
// Size : 0x2E0 (Inherited : 0x1F0)
struct UAtmosphericFogComponent : USceneComponent {
	float SunMultiplier; // 0x1F0(0x4)
	float FogMultiplier; // 0x1F4(0x4)
	float DensityMultiplier; // 0x1F8(0x4)
	float DensityOffset; // 0x1FC(0x4)
	float DistanceScale; // 0x200(0x4)
	float AltitudeScale; // 0x204(0x4)
	float DistanceOffset; // 0x208(0x4)
	float GroundOffset; // 0x20C(0x4)
	float StartDistance; // 0x210(0x4)
	float SunDiscScale; // 0x214(0x4)
	float DefaultBrightness; // 0x218(0x4)
	struct FColor DefaultLightColor; // 0x21C(0x4)
	unsigned char bDisableSunDisk : 1; // 0x220(0x1)
	unsigned char bAtmosphereAffectsSunIlluminance : 1; // 0x220(0x1)
	unsigned char bDisableGroundScattering : 1; // 0x220(0x1)
	unsigned char UnknownData_220_3 : 5; // 0x220(0x1)
	unsigned char UnknownData_221[0x0003]; // 0x221(0x3)
	struct FAtmospherePrecomputeParameters PrecomputeParams; // 0x224(0x2C)
	struct UTexture2D* TransmittanceTexture; // 0x250(0x8)
	struct UTexture2D* IrradianceTexture; // 0x258(0x8)
	unsigned char UnknownData_260[0x0080]; // 0x260(0x80)

	void StartPrecompute(); // Function Engine.AtmosphericFogComponent.StartPrecompute // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6533F7E70
	void SetSunMultiplier(float NewSunMultiplier); // Function Engine.AtmosphericFogComponent.SetSunMultiplier // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0C10
	void SetStartDistance(float NewStartDistance); // Function Engine.AtmosphericFogComponent.SetStartDistance // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0AC0
	void SetPrecomputeParams(float DensityHeight, int32_t MaxScatteringOrder, int32_t InscatterAltitudeSampleNum); // Function Engine.AtmosphericFogComponent.SetPrecomputeParams // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556C0790
	void SetFogMultiplier(float NewFogMultiplier); // Function Engine.AtmosphericFogComponent.SetFogMultiplier // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0430
	void SetDistanceScale(float NewDistanceScale); // Function Engine.AtmosphericFogComponent.SetDistanceScale // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C02E0
	void SetDistanceOffset(float NewDistanceOffset); // Function Engine.AtmosphericFogComponent.SetDistanceOffset // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0260
	void SetDensityOffset(float NewDensityOffset); // Function Engine.AtmosphericFogComponent.SetDensityOffset // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C01E0
	void SetDensityMultiplier(float NewDensityMultiplier); // Function Engine.AtmosphericFogComponent.SetDensityMultiplier // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0160
	void SetDefaultLightColor(struct FLinearColor NewLightColor); // Function Engine.AtmosphericFogComponent.SetDefaultLightColor // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6556C00E0
	void SetDefaultBrightness(float NewBrightness); // Function Engine.AtmosphericFogComponent.SetDefaultBrightness // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0060
	void SetAltitudeScale(float NewAltitudeScale); // Function Engine.AtmosphericFogComponent.SetAltitudeScale // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556BFF10
	void DisableSunDisk(bool NewSunDisk); // Function Engine.AtmosphericFogComponent.DisableSunDisk // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556BF770
	void DisableGroundScattering(bool NewGroundScattering); // Function Engine.AtmosphericFogComponent.DisableGroundScattering // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556BF6E0
};

// Class Engine.AudioSettings
// Size : 0x148 (Inherited : 0x38)
struct UAudioSettings : UDeveloperSettings {
	struct FSoftObjectPath DefaultSoundClassName; // 0x38(0x18)
	struct FSoftObjectPath DefaultMediaSoundClassName; // 0x50(0x18)
	struct FSoftObjectPath DefaultSoundConcurrencyName; // 0x68(0x18)
	struct FSoftObjectPath DefaultBaseSoundMix; // 0x80(0x18)
	struct FSoftObjectPath VoiPSoundClass; // 0x98(0x18)
	struct FSoftObjectPath MasterSubmix; // 0xB0(0x18)
	struct FSoftObjectPath ReverbSubmix; // 0xC8(0x18)
	struct FSoftObjectPath EQSubmix; // 0xE0(0x18)
	enum class EVoiceSampleRate VoiPSampleRate; // 0xF8(0x4)
	float DefaultReverbSendLevel; // 0xFC(0x4)
	int32_t MaximumConcurrentStreams; // 0x100(0x4)
	float GlobalMinPitchScale; // 0x104(0x4)
	float GlobalMaxPitchScale; // 0x108(0x4)
	unsigned char UnknownData_10C[0x0004]; // 0x10C(0x4)
	struct TArray<struct FAudioQualitySettings> QualityLevels; // 0x110(0x10)
	unsigned char bAllowPlayWhenSilent : 1; // 0x120(0x1)
	unsigned char bDisableMasterEQ : 1; // 0x120(0x1)
	unsigned char bAllowCenterChannel3DPanning : 1; // 0x120(0x1)
	unsigned char UnknownData_120_3 : 5; // 0x120(0x1)
	unsigned char UnknownData_121[0x0003]; // 0x121(0x3)
	uint32_t NumStoppingSources; // 0x124(0x4)
	enum class EPanningMethod PanningMethod; // 0x128(0x1)
	enum class EMonoChannelUpmixMethod MonoChannelUpmixMethod; // 0x129(0x1)
	unsigned char UnknownData_12A[0x0006]; // 0x12A(0x6)
	struct FString DialogueFilenameFormat; // 0x130(0x10)
	unsigned char UnknownData_140[0x0008]; // 0x140(0x8)
};

// Class Engine.AudioVolume
// Size : 0x2A8 (Inherited : 0x258)
struct AAudioVolume : AVolume {
	float Priority; // 0x258(0x4)
	unsigned char bEnabled : 1; // 0x25C(0x1)
	unsigned char UnknownData_25C_1 : 7; // 0x25C(0x1)
	unsigned char UnknownData_25D[0x0003]; // 0x25D(0x3)
	struct FReverbSettings Settings; // 0x260(0x20)
	struct FInteriorSettings AmbientZoneSettings; // 0x280(0x24)
	unsigned char UnknownData_2A4[0x0004]; // 0x2A4(0x4)

	void SetReverbSettings(struct FReverbSettings NewReverbSettings); // Function Engine.AudioVolume.SetReverbSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF6556C4A50
	void SetPriority(float NewPriority); // Function Engine.AudioVolume.SetPriority // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C49D0
	void SetInteriorSettings(struct FInteriorSettings NewInteriorSettings); // Function Engine.AudioVolume.SetInteriorSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x24, 0x7FF6556C4930
	void SetEnabled(bool bNewEnabled); // Function Engine.AudioVolume.SetEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556C48A0
	void OnRep_bEnabled(); // Function Engine.AudioVolume.OnRep_bEnabled // (Final|Native|Private) // Param Size : 0x0, 0x7FF6556C47B0
};

// Class Engine.AutoDestroySubsystem
// Size : 0x48 (Inherited : 0x30)
struct UAutoDestroySubsystem : UWorldSubsystem {
	unsigned char UnknownData_30[0x0008]; // 0x30(0x8)
	struct TArray<struct AActor*> ActorsToPoll; // 0x38(0x10)

	void OnActorEndPlay(struct AActor* Actor, enum class EEndPlayReason EndPlayReason); // Function Engine.AutoDestroySubsystem.OnActorEndPlay // (Final|Native|Private) // Param Size : 0x9, 0x7FF6556C46F0
};

// Class Engine.AutomationTestSettings
// Size : 0x328 (Inherited : 0x28)
struct UAutomationTestSettings : UObject {
	struct TArray<struct FString> EngineTestModules; // 0x28(0x10)
	struct TArray<struct FString> EditorTestModules; // 0x38(0x10)
	struct FSoftObjectPath AutomationTestmap; // 0x48(0x18)
	struct TArray<struct FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps; // 0x60(0x10)
	struct TArray<struct FSoftObjectPath> AssetsToOpen; // 0x70(0x10)
	struct FBuildPromotionTestSettings BuildPromotionTest; // 0x80(0x1F0)
	struct FMaterialEditorPromotionSettings MaterialEditorPromotionTest; // 0x270(0x30)
	struct FParticleEditorPromotionSettings ParticleEditorPromotionTest; // 0x2A0(0x10)
	struct FBlueprintEditorPromotionSettings BlueprintEditorPromotionTest; // 0x2B0(0x30)
	struct TArray<struct FString> TestLevelFolders; // 0x2E0(0x10)
	struct TArray<struct FExternalToolDefinition> ExternalTools; // 0x2F0(0x10)
	struct TArray<struct FEditorImportExportTestDefinition> ImportExportTestDefinitions; // 0x300(0x10)
	struct TArray<struct FLaunchOnTestSettings> LaunchOnSettings; // 0x310(0x10)
	struct FIntPoint DefaultScreenshotResolution; // 0x320(0x8)
};

// Class Engine.AvoidanceManager
// Size : 0xE0 (Inherited : 0x28)
struct UAvoidanceManager : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	float DefaultTimeToLive; // 0x30(0x4)
	float LockTimeAfterAvoid; // 0x34(0x4)
	float LockTimeAfterClean; // 0x38(0x4)
	float DeltaTimeToPredict; // 0x3C(0x4)
	float ArtificialRadiusExpansion; // 0x40(0x4)
	float TestHeightDifference; // 0x44(0x4)
	float HeightCheckMargin; // 0x48(0x4)
	unsigned char UnknownData_4C[0x0094]; // 0x4C(0x94)

	bool RegisterMovementComponent(struct UMovementComponent* MovementComp, float AvoidanceWeight); // Function Engine.AvoidanceManager.RegisterMovementComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0xD, 0x7FF6556C47D0
	int32_t GetObjectCount(); // Function Engine.AvoidanceManager.GetObjectCount // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C46C0
	int32_t GetNewAvoidanceUID(); // Function Engine.AvoidanceManager.GetNewAvoidanceUID // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C4690
	struct FVector GetAvoidanceVelocityForComponent(struct UMovementComponent* MovementComp); // Function Engine.AvoidanceManager.GetAvoidanceVelocityForComponent // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6556C45F0
};

// Class Engine.BandwidthTestActor
// Size : 0x240 (Inherited : 0x220)
struct ABandwidthTestActor : AActor {
	struct FBandwidthTestGenerator BandwidthGenerator; // 0x220(0x20)
};

// Class Engine.BillboardComponent
// Size : 0x430 (Inherited : 0x410)
struct UBillboardComponent : UPrimitiveComponent {
	struct UTexture2D* Sprite; // 0x408(0x8)
	unsigned char bIsScreenSizeScaled : 1; // 0x410(0x1)
	float ScreenSize; // 0x414(0x4)
	float U; // 0x418(0x4)
	float UL; // 0x41C(0x4)
	float V; // 0x420(0x4)
	float VL; // 0x424(0x4)
	unsigned char UnknownData_42C_1 : 7; // 0x42C(0x1)
	unsigned char UnknownData_42D[0x0003]; // 0x42D(0x3)

	void SetUV(int32_t NewU, int32_t NewUL, int32_t NewV, int32_t NewVL); // Function Engine.BillboardComponent.SetUV // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556C4D10
	void SetSpriteAndUV(struct UTexture2D* NewSprite, int32_t NewU, int32_t NewUL, int32_t NewV, int32_t NewVL); // Function Engine.BillboardComponent.SetSpriteAndUV // (Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6556C4B90
	void SetSprite(struct UTexture2D* NewSprite); // Function Engine.BillboardComponent.SetSprite // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556C4B00
};

// Class Engine.BlendableInterface
// Size : 0x28 (Inherited : 0x28)
struct UBlendableInterface : UInterface {
};

// Class Engine.Skeleton
// Size : 0x368 (Inherited : 0x28)
struct USkeleton : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
	struct TArray<struct FBoneNode> BoneTree; // 0x38(0x10)
	struct TArray<struct FTransform> RefLocalPoses; // 0x48(0x10)
	unsigned char UnknownData_58[0x0118]; // 0x58(0x118)
	struct FGuid VirtualBoneGuid; // 0x170(0x10)
	struct TArray<struct FVirtualBone> VirtualBones; // 0x180(0x10)
	struct TArray<struct USkeletalMeshSocket*> Sockets; // 0x190(0x10)
	unsigned char UnknownData_1A0[0x0050]; // 0x1A0(0x50)
	struct FSmartNameContainer SmartNames; // 0x1F0(0x50)
	unsigned char UnknownData_240[0x0030]; // 0x240(0x30)
	struct TArray<struct UBlendProfile*> BlendProfiles; // 0x270(0x10)
	struct TArray<struct FAnimSlotGroup> SlotGroups; // 0x280(0x10)
	unsigned char UnknownData_290[0x00C8]; // 0x290(0xC8)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x358(0x10)
};

// Class Engine.BlendProfile
// Size : 0x48 (Inherited : 0x28)
struct UBlendProfile : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct USkeleton* OwningSkeleton; // 0x30(0x8)
	struct TArray<struct FBlendProfileBoneEntry> ProfileEntries; // 0x38(0x10)
};

// Class Engine.BlockingVolume
// Size : 0x258 (Inherited : 0x258)
struct ABlockingVolume : AVolume {
};

// Class Engine.BlueprintExtension
// Size : 0x28 (Inherited : 0x28)
struct UBlueprintExtension : UObject {
};

// Class Engine.BlueprintMapLibrary
// Size : 0x28 (Inherited : 0x28)
struct UBlueprintMapLibrary : UBlueprintFunctionLibrary {

	void SetMapPropertyByName(struct UObject* Object, struct FName PropertyName, struct TMap<int32_t, int32_t> Value); // Function Engine.BlueprintMapLibrary.SetMapPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x60, 0x7FF6556CC620
	void Map_Values(struct TMap<int32_t, int32_t> TargetMap, struct TArray<int32_t> Values); // Function Engine.BlueprintMapLibrary.Map_Values // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x60, 0x7FF6556CBA20
	bool Map_Remove(struct TMap<int32_t, int32_t> TargetMap, int32_t Key); // Function Engine.BlueprintMapLibrary.Map_Remove // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x55, 0x7FF6556CB870
	int32_t Map_Length(struct TMap<int32_t, int32_t> TargetMap); // Function Engine.BlueprintMapLibrary.Map_Length // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x54, 0x7FF6556CB7C0
	void Map_Keys(struct TMap<int32_t, int32_t> TargetMap, struct TArray<int32_t> Keys); // Function Engine.BlueprintMapLibrary.Map_Keys // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x60, 0x7FF6556CB6C0
	bool Map_Find(struct TMap<int32_t, int32_t> TargetMap, int32_t Key, int32_t Value); // Function Engine.BlueprintMapLibrary.Map_Find // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x59, 0x7FF6556CB430
	bool Map_Contains(struct TMap<int32_t, int32_t> TargetMap, int32_t Key); // Function Engine.BlueprintMapLibrary.Map_Contains // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x55, 0x7FF6556CB280
	void Map_Clear(struct TMap<int32_t, int32_t> TargetMap); // Function Engine.BlueprintMapLibrary.Map_Clear // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x50, 0x7FF6556CB1E0
	void Map_Add(struct TMap<int32_t, int32_t> TargetMap, int32_t Key, int32_t Value); // Function Engine.BlueprintMapLibrary.Map_Add // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x58, 0x7FF6556CAF70
};

// Class Engine.BlueprintPathsLibrary
// Size : 0x28 (Inherited : 0x28)
struct UBlueprintPathsLibrary : UBlueprintFunctionLibrary {

	struct FString VideoCaptureDir(); // Function Engine.BlueprintPathsLibrary.VideoCaptureDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CCB80
	void ValidatePath(struct FString InPath, bool bDidSucceed, struct FText OutReason); // Function Engine.BlueprintPathsLibrary.ValidatePath // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6556CCA10
	void Split(struct FString InPath, struct FString PathPart, struct FString FilenamePart, struct FString ExtensionPart); // Function Engine.BlueprintPathsLibrary.Split // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF6556CC850
	struct FString SourceConfigDir(); // Function Engine.BlueprintPathsLibrary.SourceConfigDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CBD80
	bool ShouldSaveToUserDir(); // Function Engine.BlueprintPathsLibrary.ShouldSaveToUserDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6556CC820
	struct FString ShaderWorkingDir(); // Function Engine.BlueprintPathsLibrary.ShaderWorkingDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC7A0
	void SetProjectFilePath(struct FString NewGameProjectFilePath); // Function Engine.BlueprintPathsLibrary.SetProjectFilePath // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556CC710
	struct FString SetExtension(struct FString InPath, struct FString InNewExtension); // Function Engine.BlueprintPathsLibrary.SetExtension // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6556CC4F0
	struct FString ScreenShotDir(); // Function Engine.BlueprintPathsLibrary.ScreenShotDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC470
	struct FString SandboxesDir(); // Function Engine.BlueprintPathsLibrary.SandboxesDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC3F0
	struct FString RootDir(); // Function Engine.BlueprintPathsLibrary.RootDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC370
	void RemoveDuplicateSlashes(struct FString InPath, struct FString OutPath); // Function Engine.BlueprintPathsLibrary.RemoveDuplicateSlashes // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556CC280
	struct FString ProjectUserDir(); // Function Engine.BlueprintPathsLibrary.ProjectUserDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC200
	struct FString ProjectSavedDir(); // Function Engine.BlueprintPathsLibrary.ProjectSavedDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC180
	struct FString ProjectPluginsDir(); // Function Engine.BlueprintPathsLibrary.ProjectPluginsDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC100
	struct FString ProjectPersistentDownloadDir(); // Function Engine.BlueprintPathsLibrary.ProjectPersistentDownloadDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC080
	struct FString ProjectModsDir(); // Function Engine.BlueprintPathsLibrary.ProjectModsDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CC000
	struct FString ProjectLogDir(); // Function Engine.BlueprintPathsLibrary.ProjectLogDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CBF80
	struct FString ProjectIntermediateDir(); // Function Engine.BlueprintPathsLibrary.ProjectIntermediateDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CBF00
	struct FString ProjectDir(); // Function Engine.BlueprintPathsLibrary.ProjectDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CBE80
	struct FString ProjectContentDir(); // Function Engine.BlueprintPathsLibrary.ProjectContentDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CBE00
	struct FString ProjectConfigDir(); // Function Engine.BlueprintPathsLibrary.ProjectConfigDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CBD80
	struct FString ProfilingDir(); // Function Engine.BlueprintPathsLibrary.ProfilingDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CBD00
	void NormalizeFilename(struct FString InPath, struct FString OutPath); // Function Engine.BlueprintPathsLibrary.NormalizeFilename // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556CBC10
	void NormalizeDirectoryName(struct FString InPath, struct FString OutPath); // Function Engine.BlueprintPathsLibrary.NormalizeDirectoryName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556CBB20
	struct FString MakeValidFileName(struct FString inString, struct FString InReplacementChar); // Function Engine.BlueprintPathsLibrary.MakeValidFileName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6556CAE40
	void MakeStandardFilename(struct FString InPath, struct FString OutPath); // Function Engine.BlueprintPathsLibrary.MakeStandardFilename // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556CAD50
	void MakePlatformFilename(struct FString InPath, struct FString OutPath); // Function Engine.BlueprintPathsLibrary.MakePlatformFilename // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556CAC60
	bool MakePathRelativeTo(struct FString InPath, struct FString InRelativeTo, struct FString OutPath); // Function Engine.BlueprintPathsLibrary.MakePathRelativeTo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x31, 0x7FF6556CAB10
	struct FString LaunchDir(); // Function Engine.BlueprintPathsLibrary.LaunchDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CAA90
	bool IsSamePath(struct FString PathA, struct FString PathB); // Function Engine.BlueprintPathsLibrary.IsSamePath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF6556CA9A0
	bool IsRestrictedPath(struct FString InPath); // Function Engine.BlueprintPathsLibrary.IsRestrictedPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6556CA900
	bool IsRelative(struct FString InPath); // Function Engine.BlueprintPathsLibrary.IsRelative // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6556CA860
	bool IsProjectFilePathSet(); // Function Engine.BlueprintPathsLibrary.IsProjectFilePathSet // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6556CA830
	bool IsDrive(struct FString InPath); // Function Engine.BlueprintPathsLibrary.IsDrive // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6556CA790
	bool HasProjectPersistentDownloadDir(); // Function Engine.BlueprintPathsLibrary.HasProjectPersistentDownloadDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6556CA760
	struct TArray<struct FString> GetToolTipLocalizationPaths(); // Function Engine.BlueprintPathsLibrary.GetToolTipLocalizationPaths // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA720
	struct TArray<struct FString> GetRestrictedFolderNames(); // Function Engine.BlueprintPathsLibrary.GetRestrictedFolderNames // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA6E0
	struct FString GetRelativePathToRoot(); // Function Engine.BlueprintPathsLibrary.GetRelativePathToRoot // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA6A0
	struct TArray<struct FString> GetPropertyNameLocalizationPaths(); // Function Engine.BlueprintPathsLibrary.GetPropertyNameLocalizationPaths // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA660
	struct FString GetProjectFilePath(); // Function Engine.BlueprintPathsLibrary.GetProjectFilePath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA5E0
	struct FString GetPath(struct FString InPath); // Function Engine.BlueprintPathsLibrary.GetPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556CA500
	struct FString GetInvalidFileSystemChars(); // Function Engine.BlueprintPathsLibrary.GetInvalidFileSystemChars // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA480
	struct TArray<struct FString> GetGameLocalizationPaths(); // Function Engine.BlueprintPathsLibrary.GetGameLocalizationPaths // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA440
	struct FString GetExtension(struct FString InPath, bool bIncludeDot); // Function Engine.BlueprintPathsLibrary.GetExtension // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF6556CA320
	struct TArray<struct FString> GetEngineLocalizationPaths(); // Function Engine.BlueprintPathsLibrary.GetEngineLocalizationPaths // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA2E0
	struct TArray<struct FString> GetEditorLocalizationPaths(); // Function Engine.BlueprintPathsLibrary.GetEditorLocalizationPaths // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA2A0
	struct FString GetCleanFilename(struct FString InPath); // Function Engine.BlueprintPathsLibrary.GetCleanFilename // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556CA1C0
	struct FString GetBaseFilename(struct FString InPath, bool bRemovePath); // Function Engine.BlueprintPathsLibrary.GetBaseFilename // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF6556CA0A0
	struct FString GeneratedConfigDir(); // Function Engine.BlueprintPathsLibrary.GeneratedConfigDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556CA020
	struct FString GameUserDeveloperDir(); // Function Engine.BlueprintPathsLibrary.GameUserDeveloperDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9FA0
	struct FString GameSourceDir(); // Function Engine.BlueprintPathsLibrary.GameSourceDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9F20
	struct FString GameDevelopersDir(); // Function Engine.BlueprintPathsLibrary.GameDevelopersDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9EA0
	struct FString GameAgnosticSavedDir(); // Function Engine.BlueprintPathsLibrary.GameAgnosticSavedDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9A00
	bool FileExists(struct FString InPath); // Function Engine.BlueprintPathsLibrary.FileExists // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6556C9E00
	struct FString FeaturePackDir(); // Function Engine.BlueprintPathsLibrary.FeaturePackDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9D80
	struct FString EnterprisePluginsDir(); // Function Engine.BlueprintPathsLibrary.EnterprisePluginsDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9D00
	struct FString EnterpriseFeaturePackDir(); // Function Engine.BlueprintPathsLibrary.EnterpriseFeaturePackDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9C80
	struct FString EnterpriseDir(); // Function Engine.BlueprintPathsLibrary.EnterpriseDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9C00
	struct FString EngineVersionAgnosticUserDir(); // Function Engine.BlueprintPathsLibrary.EngineVersionAgnosticUserDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9B80
	struct FString EngineUserDir(); // Function Engine.BlueprintPathsLibrary.EngineUserDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9B00
	struct FString EngineSourceDir(); // Function Engine.BlueprintPathsLibrary.EngineSourceDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9A80
	struct FString EngineSavedDir(); // Function Engine.BlueprintPathsLibrary.EngineSavedDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9A00
	struct FString EnginePluginsDir(); // Function Engine.BlueprintPathsLibrary.EnginePluginsDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9980
	struct FString EngineIntermediateDir(); // Function Engine.BlueprintPathsLibrary.EngineIntermediateDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9900
	struct FString EngineDir(); // Function Engine.BlueprintPathsLibrary.EngineDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9880
	struct FString EngineContentDir(); // Function Engine.BlueprintPathsLibrary.EngineContentDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9800
	struct FString EngineConfigDir(); // Function Engine.BlueprintPathsLibrary.EngineConfigDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9780
	bool DirectoryExists(struct FString InPath); // Function Engine.BlueprintPathsLibrary.DirectoryExists // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6556C96E0
	struct FString DiffDir(); // Function Engine.BlueprintPathsLibrary.DiffDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C9660
	struct FString CreateTempFilename(struct FString Path, struct FString Prefix, struct FString Extension); // Function Engine.BlueprintPathsLibrary.CreateTempFilename // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF6556C94E0
	struct FString ConvertToSandboxPath(struct FString InPath, struct FString InSandboxName); // Function Engine.BlueprintPathsLibrary.ConvertToSandboxPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6556C93B0
	struct FString ConvertRelativePathToFull(struct FString InPath, struct FString InBasePath); // Function Engine.BlueprintPathsLibrary.ConvertRelativePathToFull // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6556C9280
	struct FString ConvertFromSandboxPath(struct FString InPath, struct FString InSandboxName); // Function Engine.BlueprintPathsLibrary.ConvertFromSandboxPath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6556C9150
	struct FString Combine(struct TArray<struct FString> InPaths); // Function Engine.BlueprintPathsLibrary.Combine // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6556C9040
	bool CollapseRelativeDirectories(struct FString InPath, struct FString OutPath); // Function Engine.BlueprintPathsLibrary.CollapseRelativeDirectories // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF6556C8F40
	struct FString CloudDir(); // Function Engine.BlueprintPathsLibrary.CloudDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C8EC0
	struct FString ChangeExtension(struct FString InPath, struct FString InNewExtension); // Function Engine.BlueprintPathsLibrary.ChangeExtension // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6556C8D90
	struct FString BugItDir(); // Function Engine.BlueprintPathsLibrary.BugItDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C8D10
	struct FString AutomationTransientDir(); // Function Engine.BlueprintPathsLibrary.AutomationTransientDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C8C90
	struct FString AutomationLogDir(); // Function Engine.BlueprintPathsLibrary.AutomationLogDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C8C10
	struct FString AutomationDir(); // Function Engine.BlueprintPathsLibrary.AutomationDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6556C8B90
};

// Class Engine.PlatformGameInstance
// Size : 0x268 (Inherited : 0x198)
struct UPlatformGameInstance : UGameInstance {
	struct FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0x198(0x10)
	struct FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0x1A8(0x10)
	struct FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0x1B8(0x10)
	struct FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0x1C8(0x10)
	struct FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x1D8(0x10)
	struct FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x1E8(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x1F8(0x10)
	struct FMulticastInlineDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x208(0x10)
	struct FMulticastInlineDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x218(0x10)
	struct FMulticastInlineDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x228(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x238(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedLocalNotificationDelegate; // 0x248(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x258(0x10)
};

// Class Engine.BlueprintPlatformLibrary
// Size : 0x28 (Inherited : 0x28)
struct UBlueprintPlatformLibrary : UBlueprintFunctionLibrary {

	int32_t ScheduleLocalNotificationFromNow(int32_t inSecondsFromNow, struct FText Title, struct FText Body, struct FText Action, struct FString ActivationEvent); // Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x64, 0x7FF6556CF270
	void ScheduleLocalNotificationBadgeFromNow(int32_t inSecondsFromNow, struct FString ActivationEvent); // Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeFromNow // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6556CF1A0
	int32_t ScheduleLocalNotificationBadgeAtTime(struct FDateTime FireDateTime, bool LocalTime, struct FString ActivationEvent); // Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeAtTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x24, 0x7FF6556CF070
	int32_t ScheduleLocalNotificationAtTime(struct FDateTime FireDateTime, bool LocalTime, struct FText Title, struct FText Body, struct FText Action, struct FString ActivationEvent); // Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationAtTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x6C, 0x7FF6556CED90
	void GetLaunchNotification(bool NotificationLaunchedApp, struct FString ActivationEvent, int32_t FireDate); // Function Engine.BlueprintPlatformLibrary.GetLaunchNotification // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x1C, 0x7FF6556CEBB0
	enum class EScreenOrientation GetDeviceOrientation(); // Function Engine.BlueprintPlatformLibrary.GetDeviceOrientation // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6556CEB80
	void ClearAllLocalNotifications(); // Function Engine.BlueprintPlatformLibrary.ClearAllLocalNotifications // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556CEB60
	void CancelLocalNotificationById(int32_t NotificationId); // Function Engine.BlueprintPlatformLibrary.CancelLocalNotificationById // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556CEAF0
	void CancelLocalNotification(struct FString ActivationEvent); // Function Engine.BlueprintPlatformLibrary.CancelLocalNotification // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556CEA60
};

// Class Engine.BlueprintSetLibrary
// Size : 0x28 (Inherited : 0x28)
struct UBlueprintSetLibrary : UBlueprintFunctionLibrary {

	void SetSetPropertyByName(struct UObject* Object, struct FName PropertyName, struct TSet<int32_t> Value); // Function Engine.BlueprintSetLibrary.SetSetPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x60, 0x7FF6556CF5E0
	void Set_Union(struct TSet<int32_t> A, struct TSet<int32_t> B, struct TSet<int32_t> Result); // Function Engine.BlueprintSetLibrary.Set_Union // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0xF0, 0x7FF6556D0300
	void Set_ToArray(struct TSet<int32_t> A, struct TArray<int32_t> Result); // Function Engine.BlueprintSetLibrary.Set_ToArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x60, 0x7FF6556D0200
	void Set_RemoveItems(struct TSet<int32_t> TargetSet, struct TArray<int32_t> Items); // Function Engine.BlueprintSetLibrary.Set_RemoveItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x60, 0x7FF6556D0100
	bool Set_Remove(struct TSet<int32_t> TargetSet, int32_t Item); // Function Engine.BlueprintSetLibrary.Set_Remove // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x55, 0x7FF6556CFF50
	int32_t Set_Length(struct TSet<int32_t> TargetSet); // Function Engine.BlueprintSetLibrary.Set_Length // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x54, 0x7FF6556CFEA0
	void Set_Intersection(struct TSet<int32_t> A, struct TSet<int32_t> B, struct TSet<int32_t> Result); // Function Engine.BlueprintSetLibrary.Set_Intersection // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0xF0, 0x7FF6556CFD30
	void Set_Difference(struct TSet<int32_t> A, struct TSet<int32_t> B, struct TSet<int32_t> Result); // Function Engine.BlueprintSetLibrary.Set_Difference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0xF0, 0x7FF6556CFBC0
	bool Set_Contains(struct TSet<int32_t> TargetSet, int32_t ItemToFind); // Function Engine.BlueprintSetLibrary.Set_Contains // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x55, 0x7FF6556CFA10
	void Set_Clear(struct TSet<int32_t> TargetSet); // Function Engine.BlueprintSetLibrary.Set_Clear // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x50, 0x7FF6556CF970
	void Set_AddItems(struct TSet<int32_t> TargetSet, struct TArray<int32_t> NewItems); // Function Engine.BlueprintSetLibrary.Set_AddItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x60, 0x7FF6556CF870
	void Set_Add(struct TSet<int32_t> TargetSet, int32_t NewItem); // Function Engine.BlueprintSetLibrary.Set_Add // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x54, 0x7FF6556CF6D0
};

// Class Engine.BodySetup
// Size : 0x270 (Inherited : 0x28)
struct UBodySetup : UObject {
	struct FKAggregateGeom AggGeom; // 0x28(0x58)
	struct FName BoneName; // 0x80(0x8)
	enum class EPhysicsType PhysicsType; // 0x88(0x1)
	unsigned char bAlwaysFullAnimWeight : 1; // 0x89(0x1)
	unsigned char bConsiderForBounds : 1; // 0x89(0x1)
	unsigned char bMeshCollideAll : 1; // 0x89(0x1)
	unsigned char bDoubleSidedGeometry : 1; // 0x89(0x1)
	unsigned char bGenerateNonMirroredCollision : 1; // 0x89(0x1)
	unsigned char bSharedCookedData : 1; // 0x89(0x1)
	unsigned char bGenerateMirroredCollision : 1; // 0x89(0x1)
	unsigned char bSupportUVsAndFaceRemap : 1; // 0x89(0x1)
	unsigned char UnknownData_8A[0x0001]; // 0x8A(0x1)
	enum class EBodyCollisionResponse CollisionReponse; // 0x8B(0x1)
	enum class ECollisionTraceFlag CollisionTraceFlag; // 0x8C(0x1)
	unsigned char UnknownData_8D[0x0003]; // 0x8D(0x3)
	struct UPhysicalMaterial* PhysMaterial; // 0x90(0x8)
	struct FWalkableSlopeOverride WalkableSlopeOverride; // 0x98(0x10)
	unsigned char UnknownData_A8[0x0078]; // 0xA8(0x78)
	struct FBodyInstance DefaultInstance; // 0x120(0x130)
	unsigned char UnknownData_250[0x0008]; // 0x250(0x8)
	struct FVector BuildScale3D; // 0x258(0xC)
	unsigned char UnknownData_264[0x000C]; // 0x264(0xC)
};

// Class Engine.BoneMaskFilter
// Size : 0x38 (Inherited : 0x28)
struct UBoneMaskFilter : UObject {
	struct TArray<struct FInputBlendPose> BlendPoses; // 0x28(0x10)
};

// Class Engine.BookmarkBase
// Size : 0x28 (Inherited : 0x28)
struct UBookmarkBase : UObject {
};

// Class Engine.BookMark
// Size : 0x50 (Inherited : 0x28)
struct UBookMark : UBookmarkBase {
	struct FVector Location; // 0x28(0xC)
	struct FRotator Rotation; // 0x34(0xC)
	struct TArray<struct FString> HiddenLevels; // 0x40(0x10)
};

// Class Engine.BookMark2D
// Size : 0x38 (Inherited : 0x28)
struct UBookMark2D : UBookmarkBase {
	float Zoom2D; // 0x28(0x4)
	struct FIntPoint Location; // 0x2C(0x8)
	unsigned char UnknownData_34[0x0004]; // 0x34(0x4)
};

// Class Engine.ReflectionCapture
// Size : 0x228 (Inherited : 0x220)
struct AReflectionCapture : AActor {
	struct UReflectionCaptureComponent* CaptureComponent; // 0x220(0x8)
};

// Class Engine.BoxReflectionCapture
// Size : 0x228 (Inherited : 0x228)
struct ABoxReflectionCapture : AReflectionCapture {
};

// Class Engine.ReflectionCaptureComponent
// Size : 0x270 (Inherited : 0x1F0)
struct UReflectionCaptureComponent : USceneComponent {
	struct UBillboardComponent* CaptureOffsetComponent; // 0x1F0(0x8)
	enum class EReflectionSourceType ReflectionSourceType; // 0x1F8(0x1)
	unsigned char UnknownData_1F9[0x0007]; // 0x1F9(0x7)
	struct UTextureCube* Cubemap; // 0x200(0x8)
	float SourceCubemapAngle; // 0x208(0x4)
	float Brightness; // 0x20C(0x4)
	struct FVector CaptureOffset; // 0x210(0xC)
	struct FGuid MapBuildDataId; // 0x21C(0x10)
	unsigned char UnknownData_22C[0x0044]; // 0x22C(0x44)
};

// Class Engine.BoxReflectionCaptureComponent
// Size : 0x280 (Inherited : 0x270)
struct UBoxReflectionCaptureComponent : UReflectionCaptureComponent {
	float BoxTransitionDistance; // 0x268(0x4)
	struct UBoxComponent* PreviewInfluenceBox; // 0x270(0x8)
	struct UBoxComponent* PreviewCaptureBox; // 0x278(0x8)
};

// Class Engine.Breakpoint
// Size : 0x40 (Inherited : 0x28)
struct UBreakpoint : UObject {
	unsigned char bEnabled : 1; // 0x28(0x1)
	unsigned char UnknownData_28_1 : 7; // 0x28(0x1)
	unsigned char UnknownData_29[0x0007]; // 0x29(0x7)
	struct UEdGraphNode* Node; // 0x30(0x8)
	unsigned char bStepOnce : 1; // 0x38(0x1)
	unsigned char bStepOnce_WasPreviouslyDisabled : 1; // 0x38(0x1)
	unsigned char bStepOnce_RemoveAfterHit : 1; // 0x38(0x1)
	unsigned char UnknownData_38_3 : 5; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
};

// Class Engine.BrushBuilder
// Size : 0x80 (Inherited : 0x28)
struct UBrushBuilder : UObject {
	struct FString BitmapFilename; // 0x28(0x10)
	struct FString Tooltip; // 0x38(0x10)
	unsigned char NotifyBadParams : 1; // 0x48(0x1)
	unsigned char UnknownData_48_1 : 7; // 0x48(0x1)
	unsigned char UnknownData_49[0x0007]; // 0x49(0x7)
	struct TArray<struct FVector> Vertices; // 0x50(0x10)
	struct TArray<struct FBuilderPoly> Polys; // 0x60(0x10)
	struct FName Layer; // 0x70(0x8)
	unsigned char MergeCoplanars : 1; // 0x78(0x1)
	unsigned char UnknownData_78_1 : 7; // 0x78(0x1)
	unsigned char UnknownData_79[0x0007]; // 0x79(0x7)
};

// Class Engine.BrushComponent
// Size : 0x420 (Inherited : 0x410)
struct UBrushComponent : UPrimitiveComponent {
	struct UModel* Brush; // 0x408(0x8)
	struct UBodySetup* BrushBodySetup; // 0x410(0x8)
};

// Class Engine.BrushShape
// Size : 0x258 (Inherited : 0x258)
struct ABrushShape : ABrush {
};

// Class Engine.ButtonStyleAsset
// Size : 0x2A0 (Inherited : 0x28)
struct UButtonStyleAsset : UObject {
	struct FButtonStyle ButtonStyle; // 0x28(0x278)
};

// Class Engine.CameraAnim
// Size : 0x5D0 (Inherited : 0x28)
struct UCameraAnim : UObject {
	struct UInterpGroup* CameraInterpGroup; // 0x28(0x8)
	float AnimLength; // 0x30(0x4)
	struct FBox BoundingBox; // 0x34(0x1C)
	unsigned char bRelativeToInitialTransform : 1; // 0x50(0x1)
	unsigned char bRelativeToInitialFOV : 1; // 0x50(0x1)
	unsigned char UnknownData_50_2 : 6; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	float BaseFOV; // 0x54(0x4)
	unsigned char UnknownData_58[0x0008]; // 0x58(0x8)
	struct FPostProcessSettings BasePostProcessSettings; // 0x60(0x560)
	float BasePostProcessBlendWeight; // 0x5C0(0x4)
	unsigned char UnknownData_5C4[0x000C]; // 0x5C4(0xC)
};

// Class Engine.CameraAnimInst
// Size : 0x110 (Inherited : 0x28)
struct UCameraAnimInst : UObject {
	struct UCameraAnim* CamAnim; // 0x28(0x8)
	struct UInterpGroupInst* InterpGroupInst; // 0x30(0x8)
	unsigned char UnknownData_38[0x0018]; // 0x38(0x18)
	float PlayRate; // 0x50(0x4)
	unsigned char UnknownData_54[0x0014]; // 0x54(0x14)
	struct UInterpTrackMove* MoveTrack; // 0x68(0x8)
	struct UInterpTrackInstMove* MoveInst; // 0x70(0x8)
	enum class ECameraAnimPlaySpace PlaySpace; // 0x78(0x1)
	unsigned char UnknownData_79[0x0097]; // 0x79(0x97)

	void Stop(bool bImmediate); // Function Engine.CameraAnimInst.Stop // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556D3AD0
	void SetScale(float NewDuration); // Function Engine.CameraAnimInst.SetScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D39C0
	void SetDuration(float NewDuration); // Function Engine.CameraAnimInst.SetDuration // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D3640
};

// Class Engine.CameraBlockingVolume
// Size : 0x258 (Inherited : 0x258)
struct ACameraBlockingVolume : AVolume {
};

// Class Engine.CameraModifier
// Size : 0x48 (Inherited : 0x28)
struct UCameraModifier : UObject {
	unsigned char bDebug : 1; // 0x28(0x1)
	unsigned char bExclusive : 1; // 0x28(0x1)
	unsigned char UnknownData_28_2 : 6; // 0x28(0x1)
	unsigned char UnknownData_29[0x0003]; // 0x29(0x3)
	enum class None Priority; // 0x2C(0x1)
	unsigned char UnknownData_2D[0x0003]; // 0x2D(0x3)
	struct APlayerCameraManager* CameraOwner; // 0x30(0x8)
	float AlphaInTime; // 0x38(0x4)
	float AlphaOutTime; // 0x3C(0x4)
	float Alpha; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)

	bool IsDisabled(); // Function Engine.CameraModifier.IsDisabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF654A14450
	struct AActor* GetViewTarget(); // Function Engine.CameraModifier.GetViewTarget // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF654E4FD80
	void EnableModifier(); // Function Engine.CameraModifier.EnableModifier // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556D3240
	void DisableModifier(bool bImmediate); // Function Engine.CameraModifier.DisableModifier // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556D31B0
	void BlueprintModifyPostProcess(float DeltaTime, float PostProcessBlendWeight, struct FPostProcessSettings PostProcessSettings); // Function Engine.CameraModifier.BlueprintModifyPostProcess // (BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent) // Param Size : 0x570, 0x7FF653FAFDF0
	void BlueprintModifyCamera(float DeltaTime, struct FVector ViewLocation, struct FRotator ViewRotation, float FOV, struct FVector NewViewLocation, struct FRotator NewViewRotation, float NewFOV); // Function Engine.CameraModifier.BlueprintModifyCamera // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0x3C, 0x7FF653FAFDF0
};

// Class Engine.CameraModifier_CameraShake
// Size : 0xB0 (Inherited : 0x48)
struct UCameraModifier_CameraShake : UCameraModifier {
	struct TArray<struct FActiveCameraShakeInfo> ActiveShakes; // 0x48(0x10)
	struct TMap<class UCameraShake*, struct FPooledCameraShakes> ExpiredPooledShakesMap; // 0x58(0x50)
	float SplitScreenShakeScale; // 0xA8(0x4)
	unsigned char UnknownData_AC[0x0004]; // 0xAC(0x4)
};

// Class Engine.CameraShakeSourceActor
// Size : 0x228 (Inherited : 0x220)
struct ACameraShakeSourceActor : AActor {
	struct UCameraShakeSourceComponent* CameraShakeSourceComponent; // 0x220(0x8)
};

// Class Engine.CameraShakeSourceComponent
// Size : 0x210 (Inherited : 0x1F0)
struct UCameraShakeSourceComponent : USceneComponent {
	enum class ECameraShakeAttenuation Attenuation; // 0x1F0(0x1)
	unsigned char UnknownData_1F1[0x0003]; // 0x1F1(0x3)
	float InnerAttenuationRadius; // 0x1F4(0x4)
	float OuterAttenuationRadius; // 0x1F8(0x4)
	unsigned char UnknownData_1FC[0x0004]; // 0x1FC(0x4)
	class UCameraShake* CameraShake; // 0x200(0x8)
	bool bAutoPlay; // 0x208(0x1)
	unsigned char UnknownData_209[0x0007]; // 0x209(0x7)

	void StopAllCameraShakes(bool bImmediately); // Function Engine.CameraShakeSourceComponent.StopAllCameraShakes // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556DBED0
	void PlayCameraShake(class UCameraShake* InCameraShake); // Function Engine.CameraShakeSourceComponent.PlayCameraShake // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556DA7B0
	void Play(); // Function Engine.CameraShakeSourceComponent.Play // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556DA680
	float GetAttenuationFactor(struct FVector Location); // Function Engine.CameraShakeSourceComponent.GetAttenuationFactor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556D83F0
};

// Class Engine.Canvas
// Size : 0x2C0 (Inherited : 0x28)
struct UCanvas : UObject {
	float OrgX; // 0x28(0x4)
	float OrgY; // 0x2C(0x4)
	float ClipX; // 0x30(0x4)
	float ClipY; // 0x34(0x4)
	struct FColor DrawColor; // 0x38(0x4)
	unsigned char bCenterX : 1; // 0x3C(0x1)
	unsigned char bCenterY : 1; // 0x3C(0x1)
	unsigned char bNoSmooth : 1; // 0x3C(0x1)
	unsigned char UnknownData_3C_3 : 5; // 0x3C(0x1)
	unsigned char UnknownData_3D[0x0003]; // 0x3D(0x3)
	int32_t SizeX; // 0x40(0x4)
	int32_t SizeY; // 0x44(0x4)
	unsigned char UnknownData_48[0x0008]; // 0x48(0x8)
	struct FPlane ColorModulate; // 0x50(0x10)
	struct UTexture2D* DefaultTexture; // 0x60(0x8)
	struct UTexture2D* GradientTexture0; // 0x68(0x8)
	struct UReporterGraph* ReporterGraph; // 0x70(0x8)
	unsigned char UnknownData_78[0x0248]; // 0x78(0x248)

	struct FVector2D K2_TextSize(struct UFont* RenderFont, struct FString RenderText, struct FVector2D Scale); // Function Engine.Canvas.K2_TextSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF6556DA200
	struct FVector2D K2_StrLen(struct UFont* RenderFont, struct FString RenderText); // Function Engine.Canvas.K2_StrLen // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6556DA120
	struct FVector K2_Project(struct FVector WorldLocation); // Function Engine.Canvas.K2_Project // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6556DA070
	void K2_DrawTriangle(struct UTexture* RenderTexture, struct TArray<struct FCanvasUVTri> Triangles); // Function Engine.Canvas.K2_DrawTriangle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6556D9F50
	void K2_DrawTexture(struct UTexture* RenderTexture, struct FVector2D ScreenPosition, struct FVector2D ScreenSize, struct FVector2D CoordinatePosition, struct FVector2D CoordinateSize, struct FLinearColor RenderColor, enum class EBlendMode BlendMode, float Rotation, struct FVector2D PivotPoint); // Function Engine.Canvas.K2_DrawTexture // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x48, 0x7FF6556D9CD0
	void K2_DrawText(struct UFont* RenderFont, struct FString RenderText, struct FVector2D ScreenPosition, struct FVector2D Scale, struct FLinearColor RenderColor, float Kerning, struct FLinearColor ShadowColor, struct FVector2D ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, struct FLinearColor OutlineColor); // Function Engine.Canvas.K2_DrawText // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x68, 0x7FF6556D9950
	void K2_DrawPolygon(struct UTexture* RenderTexture, struct FVector2D ScreenPosition, struct FVector2D Radius, int32_t NumberOfSides, struct FLinearColor RenderColor); // Function Engine.Canvas.K2_DrawPolygon // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x2C, 0x7FF6556D97C0
	void K2_DrawMaterialTriangle(struct UMaterialInterface* RenderMaterial, struct TArray<struct FCanvasUVTri> Triangles); // Function Engine.Canvas.K2_DrawMaterialTriangle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6556D96A0
	void K2_DrawMaterial(struct UMaterialInterface* RenderMaterial, struct FVector2D ScreenPosition, struct FVector2D ScreenSize, struct FVector2D CoordinatePosition, struct FVector2D CoordinateSize, float Rotation, struct FVector2D PivotPoint); // Function Engine.Canvas.K2_DrawMaterial // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x34, 0x7FF6556D9480
	void K2_DrawLine(struct FVector2D ScreenPositionA, struct FVector2D ScreenPositionB, float Thickness, struct FLinearColor RenderColor); // Function Engine.Canvas.K2_DrawLine // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x24, 0x7FF6556D9330
	void K2_DrawBox(struct FVector2D ScreenPosition, struct FVector2D ScreenSize, float Thickness, struct FLinearColor RenderColor); // Function Engine.Canvas.K2_DrawBox // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x24, 0x7FF6556D91E0
	void K2_DrawBorder(struct UTexture* BorderTexture, struct UTexture* BackgroundTexture, struct UTexture* LeftBorderTexture, struct UTexture* RightBorderTexture, struct UTexture* TopBorderTexture, struct UTexture* BottomBorderTexture, struct FVector2D ScreenPosition, struct FVector2D ScreenSize, struct FVector2D CoordinatePosition, struct FVector2D CoordinateSize, struct FLinearColor RenderColor, struct FVector2D BorderScale, struct FVector2D BackgroundScale, float Rotation, struct FVector2D PivotPoint, struct FVector2D CornerSize); // Function Engine.Canvas.K2_DrawBorder // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x84, 0x7FF6556D8DA0
	void K2_Deproject(struct FVector2D ScreenPosition, struct FVector WorldOrigin, struct FVector WorldDirection); // Function Engine.Canvas.K2_Deproject // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6556D8C80
};

// Class Engine.TextureRenderTarget
// Size : 0xC0 (Inherited : 0xB8)
struct UTextureRenderTarget : UTexture {
	float TargetGamma; // 0xB8(0x4)
	unsigned char UnknownData_BC[0x0004]; // 0xBC(0x4)
};

// Class Engine.TextureRenderTarget2D
// Size : 0xE8 (Inherited : 0xC0)
struct UTextureRenderTarget2D : UTextureRenderTarget {
	int32_t SizeX; // 0xC0(0x4)
	int32_t SizeY; // 0xC4(0x4)
	struct FLinearColor ClearColor; // 0xC8(0x10)
	enum class TextureAddress AddressX; // 0xD8(0x1)
	enum class TextureAddress AddressY; // 0xD9(0x1)
	unsigned char bForceLinearGamma : 1; // 0xDA(0x1)
	unsigned char bHDR : 1; // 0xDA(0x1)
	unsigned char bGPUSharedFlag : 1; // 0xDA(0x1)
	unsigned char UnknownData_DA_3 : 5; // 0xDA(0x1)
	enum class ETextureRenderTargetFormat RenderTargetFormat; // 0xDB(0x1)
	unsigned char bAutoGenerateMips : 1; // 0xDC(0x1)
	unsigned char UnknownData_DC_1 : 7; // 0xDC(0x1)
	enum class TextureFilter MipsSamplerFilter; // 0xDD(0x1)
	enum class TextureAddress MipsAddressU; // 0xDE(0x1)
	enum class TextureAddress MipsAddressV; // 0xDF(0x1)
	enum class EPixelFormat OverrideFormat; // 0xE0(0x1)
	unsigned char UnknownData_E1[0x0007]; // 0xE1(0x7)
};

// Class Engine.CanvasRenderTarget2D
// Size : 0x108 (Inherited : 0xE8)
struct UCanvasRenderTarget2D : UTextureRenderTarget2D {
	struct FMulticastInlineDelegate OnCanvasRenderTargetUpdate; // 0xE8(0x10)
	struct FWeakObjectPtr<struct UWorld> World; // 0xF8(0x8)
	bool bShouldClearRenderTargetOnReceiveUpdate; // 0x100(0x1)
	unsigned char UnknownData_101[0x0007]; // 0x101(0x7)

	void UpdateResource(); // Function Engine.CanvasRenderTarget2D.UpdateResource // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556DC0A0
	void ReceiveUpdate(struct UCanvas* Canvas, int32_t Width, int32_t Height); // Function Engine.CanvasRenderTarget2D.ReceiveUpdate // (Event|Public|BlueprintEvent) // Param Size : 0x10, 0x7FF653FAFDF0
	void GetSize(int32_t Width, int32_t Height); // Function Engine.CanvasRenderTarget2D.GetSize // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6556D8870
	struct UCanvasRenderTarget2D* CreateCanvasRenderTarget2D(struct UObject* WorldContextObject, class UCanvasRenderTarget2D* CanvasRenderTarget2DClass, int32_t Width, int32_t Height); // Function Engine.CanvasRenderTarget2D.CreateCanvasRenderTarget2D // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF6556D8200
};

// Class Engine.CapsuleComponent
// Size : 0x430 (Inherited : 0x420)
struct UCapsuleComponent : UShapeComponent {
	float CapsuleHalfHeight; // 0x420(0x4)
	float CapsuleRadius; // 0x424(0x4)
	unsigned char UnknownData_428[0x0008]; // 0x428(0x8)

	void SetCapsuleSize(float InRadius, float InHalfHeight, bool bUpdateOverlaps); // Function Engine.CapsuleComponent.SetCapsuleSize // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6556DBDC0
	void SetCapsuleRadius(float Radius, bool bUpdateOverlaps); // Function Engine.CapsuleComponent.SetCapsuleRadius // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6556DBCF0
	void SetCapsuleHalfHeight(float HalfHeight, bool bUpdateOverlaps); // Function Engine.CapsuleComponent.SetCapsuleHalfHeight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6556DBC20
	void GetUnscaledCapsuleSize_WithoutHemisphere(float OutRadius, float OutHalfHeightWithoutHemisphere); // Function Engine.CapsuleComponent.GetUnscaledCapsuleSize_WithoutHemisphere // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556D8AB0
	void GetUnscaledCapsuleSize(float OutRadius, float OutHalfHeight); // Function Engine.CapsuleComponent.GetUnscaledCapsuleSize // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556D89C0
	float GetUnscaledCapsuleRadius(); // Function Engine.CapsuleComponent.GetUnscaledCapsuleRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D89A0
	float GetUnscaledCapsuleHalfHeight_WithoutHemisphere(); // Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight_WithoutHemisphere // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D8970
	float GetUnscaledCapsuleHalfHeight(); // Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D8950
	float GetShapeScale(); // Function Engine.CapsuleComponent.GetShapeScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D8830
	void GetScaledCapsuleSize_WithoutHemisphere(float OutRadius, float OutHalfHeightWithoutHemisphere); // Function Engine.CapsuleComponent.GetScaledCapsuleSize_WithoutHemisphere // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556D8710
	void GetScaledCapsuleSize(float OutRadius, float OutHalfHeight); // Function Engine.CapsuleComponent.GetScaledCapsuleSize // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556D8600
	float GetScaledCapsuleRadius(); // Function Engine.CapsuleComponent.GetScaledCapsuleRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D85C0
	float GetScaledCapsuleHalfHeight_WithoutHemisphere(); // Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight_WithoutHemisphere // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D8570
	float GetScaledCapsuleHalfHeight(); // Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556D8540
};

// Class Engine.ChaosPhysicalMaterial
// Size : 0x48 (Inherited : 0x28)
struct UChaosPhysicalMaterial : UObject {
	float Friction; // 0x28(0x4)
	float StaticFriction; // 0x2C(0x4)
	float Restitution; // 0x30(0x4)
	float LinearEtherDrag; // 0x34(0x4)
	float AngularEtherDrag; // 0x38(0x4)
	float SleepingLinearVelocityThreshold; // 0x3C(0x4)
	float SleepingAngularVelocityThreshold; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
};

// Class Engine.CheckBoxStyleAsset
// Size : 0x5A8 (Inherited : 0x28)
struct UCheckBoxStyleAsset : UObject {
	struct FCheckBoxStyle CheckBoxStyle; // 0x28(0x580)
};

// Class Engine.ChildConnection
// Size : 0x1A38 (Inherited : 0x1A30)
struct UChildConnection : UNetConnection {
	struct UNetConnection* Parent; // 0x1A30(0x8)
};

// Class Engine.PlatformInterfaceBase
// Size : 0x38 (Inherited : 0x28)
struct UPlatformInterfaceBase : UObject {
	struct TArray<struct FDelegateArray> AllDelegates; // 0x28(0x10)
};

// Class Engine.CloudStorageBase
// Size : 0x50 (Inherited : 0x38)
struct UCloudStorageBase : UPlatformInterfaceBase {
	struct TArray<struct FString> LocalCloudFiles; // 0x38(0x10)
	unsigned char bSuppressDelegateCalls : 1; // 0x48(0x1)
	unsigned char UnknownData_48_1 : 7; // 0x48(0x1)
	unsigned char UnknownData_49[0x0007]; // 0x49(0x7)
};

// Class Engine.CollisionProfile
// Size : 0x158 (Inherited : 0x38)
struct UCollisionProfile : UDeveloperSettings {
	struct TArray<struct FCollisionResponseTemplate> Profiles; // 0x38(0x10)
	struct TArray<struct FCustomChannelSetup> DefaultChannelResponses; // 0x48(0x10)
	struct TArray<struct FCustomProfile> EditProfiles; // 0x58(0x10)
	struct TArray<struct FRedirector> ProfileRedirects; // 0x68(0x10)
	struct TArray<struct FRedirector> CollisionChannelRedirects; // 0x78(0x10)
	unsigned char UnknownData_88[0x00D0]; // 0x88(0xD0)
};

// Class Engine.Commandlet
// Size : 0x80 (Inherited : 0x28)
struct UCommandlet : UObject {
	struct FString HelpDescription; // 0x28(0x10)
	struct FString HelpUsage; // 0x38(0x10)
	struct FString HelpWebLink; // 0x48(0x10)
	struct TArray<struct FString> HelpParamNames; // 0x58(0x10)
	struct TArray<struct FString> HelpParamDescriptions; // 0x68(0x10)
	unsigned char IsServer : 1; // 0x78(0x1)
	unsigned char IsClient : 1; // 0x78(0x1)
	unsigned char IsEditor : 1; // 0x78(0x1)
	unsigned char LogToConsole : 1; // 0x78(0x1)
	unsigned char ShowErrorCount : 1; // 0x78(0x1)
	unsigned char ShowProgress : 1; // 0x78(0x1)
	unsigned char UnknownData_78_6 : 2; // 0x78(0x1)
	unsigned char UnknownData_79[0x0007]; // 0x79(0x7)
};

// Class Engine.ComponentDelegateBinding
// Size : 0x38 (Inherited : 0x28)
struct UComponentDelegateBinding : UDynamicBlueprintBinding {
	struct TArray<struct FBlueprintComponentDelegateBinding> ComponentDelegateBindings; // 0x28(0x10)
};

// Class Engine.CurveTable
// Size : 0xA0 (Inherited : 0x28)
struct UCurveTable : UObject {
	unsigned char UnknownData_28[0x0078]; // 0x28(0x78)
};

// Class Engine.CompositeCurveTable
// Size : 0xC8 (Inherited : 0xA0)
struct UCompositeCurveTable : UCurveTable {
	struct TArray<struct UCurveTable*> ParentTables; // 0xA0(0x10)
	struct TArray<struct UCurveTable*> OldParentTables; // 0xB0(0x10)
	unsigned char UnknownData_C0[0x0008]; // 0xC0(0x8)
};

// Class Engine.CompositeDataTable
// Size : 0xF0 (Inherited : 0xC8)
struct UCompositeDataTable : UDataTable {
	struct TArray<struct UDataTable*> ParentTables; // 0xC8(0x10)
	struct TArray<struct UDataTable*> OldParentTables; // 0xD8(0x10)
	unsigned char UnknownData_E8[0x0008]; // 0xE8(0x8)
};

// Class Engine.Console
// Size : 0x130 (Inherited : 0x28)
struct UConsole : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
	struct ULocalPlayer* ConsoleTargetPlayer; // 0x38(0x8)
	struct UTexture2D* DefaultTexture_Black; // 0x40(0x8)
	struct UTexture2D* DefaultTexture_White; // 0x48(0x8)
	unsigned char UnknownData_50[0x0018]; // 0x50(0x18)
	struct TArray<struct FString> HistoryBuffer; // 0x68(0x10)
	unsigned char UnknownData_78[0x00B8]; // 0x78(0xB8)
};

// Class Engine.ControlChannel
// Size : 0x88 (Inherited : 0x70)
struct UControlChannel : UChannel {
	unsigned char UnknownData_70[0x0018]; // 0x70(0x18)
};

// Class Engine.StreamingSettings
// Size : 0x70 (Inherited : 0x38)
struct UStreamingSettings : UDeveloperSettings {
	unsigned char AsyncLoadingThreadEnabled : 1; // 0x38(0x1)
	unsigned char WarnIfTimeLimitExceeded : 1; // 0x38(0x1)
	unsigned char UnknownData_38_2 : 6; // 0x38(0x1)
	unsigned char UnknownData_39[0x0003]; // 0x39(0x3)
	float TimeLimitExceededMultiplier; // 0x3C(0x4)
	float TimeLimitExceededMinTime; // 0x40(0x4)
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44(0x4)
	unsigned char UseBackgroundLevelStreaming : 1; // 0x48(0x1)
	unsigned char AsyncLoadingUseFullTimeLimit : 1; // 0x48(0x1)
	unsigned char UnknownData_48_2 : 6; // 0x48(0x1)
	unsigned char UnknownData_49[0x0003]; // 0x49(0x3)
	float AsyncLoadingTimeLimit; // 0x4C(0x4)
	float PriorityAsyncLoadingExtraTime; // 0x50(0x4)
	float LevelStreamingActorsUpdateTimeLimit; // 0x54(0x4)
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58(0x4)
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5C(0x4)
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60(0x4)
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64(0x4)
	unsigned char FlushStreamingOnExit : 1; // 0x68(0x1)
	unsigned char EventDrivenLoaderEnabled : 1; // 0x68(0x1)
	unsigned char UnknownData_68_2 : 6; // 0x68(0x1)
	unsigned char UnknownData_69[0x0007]; // 0x69(0x7)
};

// Class Engine.GarbageCollectionSettings
// Size : 0x58 (Inherited : 0x38)
struct UGarbageCollectionSettings : UDeveloperSettings {
	float TimeBetweenPurgingPendingKillObjects; // 0x38(0x4)
	unsigned char FlushStreamingOnGC : 1; // 0x3C(0x1)
	unsigned char AllowParallelGC : 1; // 0x3C(0x1)
	unsigned char IncrementalBeginDestroyEnabled : 1; // 0x3C(0x1)
	unsigned char MultithreadedDestructionEnabled : 1; // 0x3C(0x1)
	unsigned char CreateGCClusters : 1; // 0x3C(0x1)
	unsigned char AssetClusteringEnabled : 1; // 0x3C(0x1)
	unsigned char ActorClusteringEnabled : 1; // 0x3C(0x1)
	unsigned char BlueprintClusteringEnabled : 1; // 0x3C(0x1)
	unsigned char UseDisregardForGCOnDedicatedServers : 1; // 0x3D(0x1)
	unsigned char UnknownData_3D_1 : 7; // 0x3D(0x1)
	unsigned char UnknownData_3E[0x0002]; // 0x3E(0x2)
	int32_t MinGCClusterSize; // 0x40(0x4)
	int32_t NumRetriesBeforeForcingGC; // 0x44(0x4)
	int32_t MaxObjectsNotConsideredByGC; // 0x48(0x4)
	int32_t SizeOfPermanentObjectPool; // 0x4C(0x4)
	int32_t MaxObjectsInGame; // 0x50(0x4)
	int32_t MaxObjectsInEditor; // 0x54(0x4)
};

// Class Engine.CullDistanceVolume
// Size : 0x270 (Inherited : 0x258)
struct ACullDistanceVolume : AVolume {
	struct TArray<struct FCullDistanceSizePair> CullDistances; // 0x258(0x10)
	unsigned char bEnabled : 1; // 0x268(0x1)
	unsigned char UnknownData_268_1 : 7; // 0x268(0x1)
	unsigned char UnknownData_269[0x0007]; // 0x269(0x7)
};

// Class Engine.CurveBase
// Size : 0x30 (Inherited : 0x28)
struct UCurveBase : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)

	void GetValueRange(float MinValue, float MaxValue); // Function Engine.CurveBase.GetValueRange // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556E5ED0
	void GetTimeRange(float MinTime, float MaxTime); // Function Engine.CurveBase.GetTimeRange // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556E5DF0
};

// Class Engine.CurveEdPresetCurve
// Size : 0x28 (Inherited : 0x28)
struct UCurveEdPresetCurve : UObject {
};

// Class Engine.CurveFloat
// Size : 0xB8 (Inherited : 0x30)
struct UCurveFloat : UCurveBase {
	struct FRichCurve FloatCurve; // 0x30(0x80)
	bool bIsEventCurve; // 0xB0(0x1)
	unsigned char UnknownData_B1[0x0007]; // 0xB1(0x7)

	float GetFloatValue(float InTime); // Function Engine.CurveFloat.GetFloatValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556E5CC0
};

// Class Engine.CurveLinearColor
// Size : 0x250 (Inherited : 0x30)
struct UCurveLinearColor : UCurveBase {
	struct FRichCurve FloatCurves[4]; // 0x30(0x200)
	float AdjustHue; // 0x230(0x4)
	float AdjustSaturation; // 0x234(0x4)
	float AdjustBrightness; // 0x238(0x4)
	float AdjustBrightnessCurve; // 0x23C(0x4)
	float AdjustVibrance; // 0x240(0x4)
	float AdjustMinAlpha; // 0x244(0x4)
	float AdjustMaxAlpha; // 0x248(0x4)
	unsigned char UnknownData_24C[0x0004]; // 0x24C(0x4)

	struct FLinearColor GetLinearColorValue(float InTime); // Function Engine.CurveLinearColor.GetLinearColorValue // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6556E5D50
	struct FLinearColor GetClampedLinearColorValue(float InTime); // Function Engine.CurveLinearColor.GetClampedLinearColorValue // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6556E5970
};

// Class Engine.Texture2D
// Size : 0xE8 (Inherited : 0xB8)
struct UTexture2D : UTexture {
	int32_t LevelIndex; // 0xB8(0x4)
	int32_t FirstResourceMemMip; // 0xBC(0x4)
	unsigned char bTemporarilyDisableStreaming : 1; // 0xC0(0x1)
	unsigned char UnknownData_C0_1 : 7; // 0xC0(0x1)
	enum class TextureAddress AddressX; // 0xC1(0x1)
	enum class TextureAddress AddressY; // 0xC2(0x1)
	unsigned char UnknownData_C3[0x0001]; // 0xC3(0x1)
	struct FIntPoint ImportedSize; // 0xC4(0x8)
	unsigned char UnknownData_CC[0x001C]; // 0xCC(0x1C)

	int32_t Blueprint_GetSizeY(); // Function Engine.Texture2D.Blueprint_GetSizeY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557FFCF0
	int32_t Blueprint_GetSizeX(); // Function Engine.Texture2D.Blueprint_GetSizeX // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557FFCC0
};

// Class Engine.CurveLinearColorAtlas
// Size : 0x100 (Inherited : 0xE8)
struct UCurveLinearColorAtlas : UTexture2D {
	uint32_t TextureSize; // 0xE8(0x4)
	unsigned char UnknownData_EC[0x0004]; // 0xEC(0x4)
	struct TArray<struct UCurveLinearColor*> GradientCurves; // 0xF0(0x10)

	bool GetCurvePosition(struct UCurveLinearColor* InCurve, float Position); // Function Engine.CurveLinearColorAtlas.GetCurvePosition // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0xD, 0x7FF6556E5A50
};

// Class Engine.CurveSourceInterface
// Size : 0x28 (Inherited : 0x28)
struct UCurveSourceInterface : UInterface {

	float GetCurveValue(struct FName CurveName); // Function Engine.CurveSourceInterface.GetCurveValue // (Native|Event|Public|BlueprintEvent|Const) // Param Size : 0xC, 0x7FF6556E5B30
	void GetCurves(struct TArray<struct FNamedCurveValue> OutValues); // Function Engine.CurveSourceInterface.GetCurves // (Native|Event|Public|HasOutParms|BlueprintEvent|Const) // Param Size : 0x10, 0x7FF6556E5BD0
	struct FName GetBindingName(); // Function Engine.CurveSourceInterface.GetBindingName // (Native|Event|Public|BlueprintEvent|Const) // Param Size : 0x8, 0x7FF6556E5930
};

// Class Engine.CurveVector
// Size : 0x1B0 (Inherited : 0x30)
struct UCurveVector : UCurveBase {
	struct FRichCurve FloatCurves[3]; // 0x30(0x180)

	struct FVector GetVectorValue(float InTime); // Function Engine.CurveVector.GetVectorValue // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6556E5FB0
};

// Class Engine.DamageType
// Size : 0x40 (Inherited : 0x28)
struct UDamageType : UObject {
	unsigned char bCausedByWorld : 1; // 0x28(0x1)
	unsigned char bScaleMomentumByMass : 1; // 0x28(0x1)
	unsigned char bRadialDamageVelChange : 1; // 0x28(0x1)
	unsigned char UnknownData_28_3 : 5; // 0x28(0x1)
	unsigned char UnknownData_29[0x0003]; // 0x29(0x3)
	float DamageImpulse; // 0x2C(0x4)
	float DestructibleImpulse; // 0x30(0x4)
	float DestructibleDamageSpreadScale; // 0x34(0x4)
	float DamageFalloff; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.DataTableFunctionLibrary
// Size : 0x28 (Inherited : 0x28)
struct UDataTableFunctionLibrary : UBlueprintFunctionLibrary {

	void GetDataTableRowNames(struct UDataTable* Table, struct TArray<struct FName> OutRowNames); // Function Engine.DataTableFunctionLibrary.GetDataTableRowNames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF6556E9F20
	bool GetDataTableRowFromName(struct UDataTable* Table, struct FName RowName, struct FTableRowBase OutRow); // Function Engine.DataTableFunctionLibrary.GetDataTableRowFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x19, 0x7FF6556E9BA0
	struct TArray<struct FString> GetDataTableColumnAsString(struct UDataTable* DataTable, struct FName PropertyName); // Function Engine.DataTableFunctionLibrary.GetDataTableColumnAsString // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF6556E9A40
	void EvaluateCurveTableRow(struct UCurveTable* CurveTable, struct FName RowName, float InXY, enum class EEvaluateCurveTableResult OutResult, float OutXY, struct FString ContextString); // Function Engine.DataTableFunctionLibrary.EvaluateCurveTableRow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x30, 0x7FF6556E9850
	bool DoesDataTableRowExist(struct UDataTable* Table, struct FName RowName); // Function Engine.DataTableFunctionLibrary.DoesDataTableRowExist // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF6556E9790
};

// Class Engine.DebugCameraController
// Size : 0x670 (Inherited : 0x570)
struct ADebugCameraController : APlayerController {
	unsigned char bShowSelectedInfo : 1; // 0x570(0x1)
	unsigned char bIsFrozenRendering : 1; // 0x570(0x1)
	unsigned char bIsOrbitingSelectedActor : 1; // 0x570(0x1)
	unsigned char bOrbitPivotUseCenter : 1; // 0x570(0x1)
	unsigned char bEnableBufferVisualization : 1; // 0x570(0x1)
	unsigned char bEnableBufferVisualizationFullMode : 1; // 0x570(0x1)
	unsigned char bIsBufferVisualizationInputSetup : 1; // 0x570(0x1)
	unsigned char bLastDisplayEnabled : 1; // 0x570(0x1)
	unsigned char UnknownData_571[0x0007]; // 0x571(0x7)
	struct UDrawFrustumComponent* DrawFrustum; // 0x578(0x8)
	struct AActor* SelectedActor; // 0x580(0x8)
	struct UPrimitiveComponent* SelectedComponent; // 0x588(0x8)
	struct FHitResult SelectedHitPoint; // 0x590(0x88)
	struct APlayerController* OriginalControllerRef; // 0x618(0x8)
	struct UPlayer* OriginalPlayer; // 0x620(0x8)
	float SpeedScale; // 0x628(0x4)
	float InitialMaxSpeed; // 0x62C(0x4)
	float InitialAccel; // 0x630(0x4)
	float InitialDecel; // 0x634(0x4)
	unsigned char UnknownData_638[0x0038]; // 0x638(0x38)

	void ToggleDisplay(); // Function Engine.DebugCameraController.ToggleDisplay // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556EA7C0
	void ShowDebugSelectedInfo(); // Function Engine.DebugCameraController.ShowDebugSelectedInfo // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556EA7A0
	void SetPawnMovementSpeedScale(float NewSpeedScale); // Function Engine.DebugCameraController.SetPawnMovementSpeedScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA6A0
	void ReceiveOnDeactivate(struct APlayerController* RestoredPC); // Function Engine.DebugCameraController.ReceiveOnDeactivate // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveOnActorSelected(struct AActor* NewSelectedActor, struct FVector SelectHitLocation, struct FVector SelectHitNormal, struct FHitResult Hit); // Function Engine.DebugCameraController.ReceiveOnActorSelected // (Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0xA8, 0x7FF653FAFDF0
	void ReceiveOnActivate(struct APlayerController* OriginalPC); // Function Engine.DebugCameraController.ReceiveOnActivate // (Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	struct AActor* GetSelectedActor(); // Function Engine.DebugCameraController.GetSelectedActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556EA120
};

// Class Engine.DebugCameraControllerSettings
// Size : 0x48 (Inherited : 0x38)
struct UDebugCameraControllerSettings : UDeveloperSettings {
	struct TArray<struct FDebugCameraControllerSettingsViewModeIndex> CycleViewModes; // 0x38(0x10)
};

// Class Engine.HUD
// Size : 0x310 (Inherited : 0x220)
struct AHUD : AActor {
	struct APlayerController* PlayerOwner; // 0x220(0x8)
	unsigned char bLostFocusPaused : 1; // 0x228(0x1)
	unsigned char bShowHUD : 1; // 0x228(0x1)
	unsigned char bShowDebugInfo : 1; // 0x228(0x1)
	unsigned char UnknownData_228_3 : 5; // 0x228(0x1)
	unsigned char UnknownData_229[0x0003]; // 0x229(0x3)
	int32_t CurrentTargetIndex; // 0x22C(0x4)
	unsigned char bShowHitBoxDebugInfo : 1; // 0x230(0x1)
	unsigned char bShowOverlays : 1; // 0x230(0x1)
	unsigned char bEnableDebugTextShadow : 1; // 0x230(0x1)
	unsigned char UnknownData_230_3 : 5; // 0x230(0x1)
	unsigned char UnknownData_231[0x0007]; // 0x231(0x7)
	struct TArray<struct AActor*> PostRenderedActors; // 0x238(0x10)
	unsigned char UnknownData_248[0x0008]; // 0x248(0x8)
	struct TArray<struct FName> DebugDisplay; // 0x250(0x10)
	struct TArray<struct FName> ToggledDebugCategories; // 0x260(0x10)
	struct UCanvas* Canvas; // 0x270(0x8)
	struct UCanvas* DebugCanvas; // 0x278(0x8)
	struct TArray<struct FDebugTextInfo> DebugTextList; // 0x280(0x10)
	class AActor* ShowDebugTargetDesiredClass; // 0x290(0x8)
	struct AActor* ShowDebugTargetActor; // 0x298(0x8)
	unsigned char UnknownData_2A0[0x0070]; // 0x2A0(0x70)

	void ShowHUD(); // Function Engine.HUD.ShowHUD // (Exec|Native|Public) // Param Size : 0x0, 0x7FF6556FB1C0
	void ShowDebugToggleSubCategory(struct FName Category); // Function Engine.HUD.ShowDebugToggleSubCategory // (Final|Exec|Native|Public) // Param Size : 0x8, 0x7FF6557128A0
	void ShowDebugForReticleTargetToggle(class AActor* DesiredClass); // Function Engine.HUD.ShowDebugForReticleTargetToggle // (Final|Exec|Native|Public) // Param Size : 0x8, 0x7FF655712820
	void ShowDebug(struct FName DebugType); // Function Engine.HUD.ShowDebug // (Exec|Native|Public) // Param Size : 0x8, 0x7FF655712790
	void RemoveDebugText(struct AActor* SrcActor, bool bLeaveDurationText); // Function Engine.HUD.RemoveDebugText // (Final|Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x9, 0x7FF655712600
	void RemoveAllDebugStrings(); // Function Engine.HUD.RemoveAllDebugStrings // (Final|Net|NetReliable|Native|Event|Public|NetClient) // Param Size : 0x0, 0x7FF6557125E0
	void ReceiveHitBoxRelease(struct FName BoxName); // Function Engine.HUD.ReceiveHitBoxRelease // (BlueprintCosmetic|Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveHitBoxEndCursorOver(struct FName BoxName); // Function Engine.HUD.ReceiveHitBoxEndCursorOver // (BlueprintCosmetic|Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveHitBoxClick(struct FName BoxName); // Function Engine.HUD.ReceiveHitBoxClick // (BlueprintCosmetic|Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveHitBoxBeginCursorOver(struct FName BoxName); // Function Engine.HUD.ReceiveHitBoxBeginCursorOver // (BlueprintCosmetic|Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveDrawHUD(int32_t SizeX, int32_t SizeY); // Function Engine.HUD.ReceiveDrawHUD // (BlueprintCosmetic|Event|Public|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	struct FVector Project(struct FVector Location); // Function Engine.HUD.Project // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF655712160
	void PreviousDebugTarget(); // Function Engine.HUD.PreviousDebugTarget // (Exec|Native|Public) // Param Size : 0x0, 0x7FF65570CCC0
	void NextDebugTarget(); // Function Engine.HUD.NextDebugTarget // (Exec|Native|Public) // Param Size : 0x0, 0x7FF65320BD40
	void GetTextSize(struct FString Text, float OutWidth, float OutHeight, struct UFont* Font, float Scale); // Function Engine.HUD.GetTextSize // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x24, 0x7FF655711680
	struct APlayerController* GetOwningPlayerController(); // Function Engine.HUD.GetOwningPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF65335DFA0
	struct APawn* GetOwningPawn(); // Function Engine.HUD.GetOwningPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF655711650
	void GetActorsInSelectionRectangle(class AActor* ClassFilter, struct FVector2D FirstPoint, struct FVector2D SecondPoint, struct TArray<struct AActor*> OutActors, bool bIncludeNonCollidingComponents, bool bActorMustBeFullyEnclosed); // Function Engine.HUD.GetActorsInSelectionRectangle // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2A, 0x7FF655711440
	void DrawTextureSimple(struct UTexture* Texture, float ScreenX, float ScreenY, float Scale, bool bScalePosition); // Function Engine.HUD.DrawTextureSimple // (Final|Native|Public|BlueprintCallable) // Param Size : 0x15, 0x7FF6557112B0
	void DrawTexture(struct UTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, struct FLinearColor TintColor, enum class EBlendMode BlendMode, float Scale, bool bScalePosition, float Rotation, struct FVector2D RotPivot); // Function Engine.HUD.DrawTexture // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF655710E90
	void DrawText(struct FString Text, struct FLinearColor TextColor, float ScreenX, float ScreenY, struct UFont* Font, float Scale, bool bScalePosition); // Function Engine.HUD.DrawText // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x35, 0x7FF655710C70
	void DrawRect(struct FLinearColor RectColor, float ScreenX, float ScreenY, float ScreenW, float ScreenH); // Function Engine.HUD.DrawRect // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF655710AC0
	void DrawMaterialTriangle(struct UMaterialInterface* Material, struct FVector2D V0_Pos, struct FVector2D V1_Pos, struct FVector2D V2_Pos, struct FVector2D V0_UV, struct FVector2D V1_UV, struct FVector2D V2_UV, struct FLinearColor V0_Color, struct FLinearColor V1_Color, struct FLinearColor V2_Color); // Function Engine.HUD.DrawMaterialTriangle // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x68, 0x7FF655710800
	void DrawMaterialSimple(struct UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float Scale, bool bScalePosition); // Function Engine.HUD.DrawMaterialSimple // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1D, 0x7FF655710600
	void DrawMaterial(struct UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float Scale, bool bScalePosition, float Rotation, struct FVector2D RotPivot); // Function Engine.HUD.DrawMaterial // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x3C, 0x7FF655710270
	void DrawLine(float StartScreenX, float StartScreenY, float EndScreenX, float EndScreenY, struct FLinearColor LineColor, float LineThickness); // Function Engine.HUD.DrawLine // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x24, 0x7FF655710090
	void Deproject(float ScreenX, float ScreenY, struct FVector WorldPosition, struct FVector WorldDirection); // Function Engine.HUD.Deproject // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x20, 0x7FF65570FF20
	void AddHitBox(struct FVector2D Position, struct FVector2D Size, struct FName InName, bool bConsumesInput, int32_t Priority); // Function Engine.HUD.AddHitBox // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF65570FC10
	void AddDebugText(struct FString DebugText, struct AActor* SrcActor, float Duration, struct FVector Offset, struct FVector DesiredOffset, struct FColor TextColor, bool bSkipOverwriteCheck, bool bAbsoluteLocation, bool bKeepAttachedToActor, struct UFont* InFont, float FontScale, bool bDrawShadow); // Function Engine.HUD.AddDebugText // (Final|Net|NetReliable|Native|Event|Public|HasDefaults|NetClient) // Param Size : 0x4D, 0x7FF65570F890
};

// Class Engine.DebugCameraHUD
// Size : 0x310 (Inherited : 0x310)
struct ADebugCameraHUD : AHUD {
};

// Class Engine.DebugDrawService
// Size : 0x28 (Inherited : 0x28)
struct UDebugDrawService : UBlueprintFunctionLibrary {
};

// Class Engine.DecalActor
// Size : 0x228 (Inherited : 0x220)
struct ADecalActor : AActor {
	struct UDecalComponent* decal; // 0x220(0x8)

	void SetDecalMaterial(struct UMaterialInterface* NewDecalMaterial); // Function Engine.DecalActor.SetDecalMaterial // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556EA350
	struct UMaterialInterface* GetDecalMaterial(); // Function Engine.DecalActor.GetDecalMaterial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556EA000
	struct UMaterialInstanceDynamic* CreateDynamicMaterialInstance(); // Function Engine.DecalActor.CreateDynamicMaterialInstance // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556E9730
};

// Class Engine.DecalComponent
// Size : 0x230 (Inherited : 0x1F0)
struct UDecalComponent : USceneComponent {
	struct UMaterialInterface* DecalMaterial; // 0x1F0(0x8)
	int32_t SortOrder; // 0x1F8(0x4)
	float FadeScreenSize; // 0x1FC(0x4)
	float FadeStartDelay; // 0x200(0x4)
	float FadeDuration; // 0x204(0x4)
	float FadeInDuration; // 0x208(0x4)
	float FadeInStartDelay; // 0x20C(0x4)
	unsigned char bDestroyOwnerAfterFade : 1; // 0x210(0x1)
	unsigned char UnknownData_210_1 : 7; // 0x210(0x1)
	unsigned char UnknownData_211[0x0003]; // 0x211(0x3)
	struct FVector DecalSize; // 0x214(0xC)
	unsigned char UnknownData_220[0x0010]; // 0x220(0x10)

	void SetSortOrder(int32_t Value); // Function Engine.DecalComponent.SetSortOrder // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA720
	void SetFadeScreenSize(float NewFadeScreenSize); // Function Engine.DecalComponent.SetFadeScreenSize // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA620
	void SetFadeOut(float StartDelay, float Duration, bool DestroyOwnerAfterFade); // Function Engine.DecalComponent.SetFadeOut // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6556EA510
	void SetFadeIn(float StartDelay, float Duaration); // Function Engine.DecalComponent.SetFadeIn // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556EA450
	void SetDecalMaterial(struct UMaterialInterface* NewDecalMaterial); // Function Engine.DecalComponent.SetDecalMaterial // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556EA3D0
	float GetFadeStartDelay(); // Function Engine.DecalComponent.GetFadeStartDelay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556EA0F0
	float GetFadeInStartDelay(); // Function Engine.DecalComponent.GetFadeInStartDelay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556EA0C0
	float GetFadeInDuration(); // Function Engine.DecalComponent.GetFadeInDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556EA090
	float GetFadeDuration(); // Function Engine.DecalComponent.GetFadeDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6556EA060
	struct UMaterialInterface* GetDecalMaterial(); // Function Engine.DecalComponent.GetDecalMaterial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6556EA030
	struct UMaterialInstanceDynamic* CreateDynamicMaterialInstance(); // Function Engine.DecalComponent.CreateDynamicMaterialInstance // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556E9760
};

// Class Engine.DefaultPawn
// Size : 0x2A8 (Inherited : 0x280)
struct ADefaultPawn : APawn {
	float BaseTurnRate; // 0x280(0x4)
	float BaseLookUpRate; // 0x284(0x4)
	struct UPawnMovementComponent* MovementComponent; // 0x288(0x8)
	struct USphereComponent* CollisionComponent; // 0x290(0x8)
	struct UStaticMeshComponent* MeshComponent; // 0x298(0x8)
	unsigned char bAddDefaultMovementBindings : 1; // 0x2A0(0x1)
	unsigned char UnknownData_2A0_1 : 7; // 0x2A0(0x1)
	unsigned char UnknownData_2A1[0x0007]; // 0x2A1(0x7)

	void TurnAtRate(float Rate); // Function Engine.DefaultPawn.TurnAtRate // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA7E0
	void MoveUp_World(float Val); // Function Engine.DefaultPawn.MoveUp_World // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA2D0
	void MoveRight(float Val); // Function Engine.DefaultPawn.MoveRight // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA250
	void MoveForward(float Val); // Function Engine.DefaultPawn.MoveForward // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA1D0
	void LookUpAtRate(float Rate); // Function Engine.DefaultPawn.LookUpAtRate // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EA150
};

// Class Engine.PhysicsVolume
// Size : 0x268 (Inherited : 0x258)
struct APhysicsVolume : AVolume {
	float TerminalVelocity; // 0x258(0x4)
	int32_t Priority; // 0x25C(0x4)
	float FluidFriction; // 0x260(0x4)
	unsigned char bWaterVolume : 1; // 0x264(0x1)
	unsigned char bPhysicsOnContact : 1; // 0x264(0x1)
	unsigned char UnknownData_264_2 : 6; // 0x264(0x1)
	unsigned char UnknownData_265[0x0003]; // 0x265(0x3)
};

// Class Engine.DefaultPhysicsVolume
// Size : 0x268 (Inherited : 0x268)
struct ADefaultPhysicsVolume : APhysicsVolume {
};

// Class Engine.DemoNetConnection
// Size : 0x1AA0 (Inherited : 0x1A30)
struct UDemoNetConnection : UNetConnection {
	unsigned char UnknownData_1A30[0x0070]; // 0x1A30(0x70)
};

// Class Engine.DemoNetDriver
// Size : 0x1120 (Inherited : 0x748)
struct UDemoNetDriver : UNetDriver {
	unsigned char UnknownData_748[0x00F8]; // 0x748(0xF8)
	struct TMap<struct FString, struct FRollbackNetStartupActorInfo> RollbackNetStartupActors; // 0x840(0x50)
	unsigned char UnknownData_890[0x03C4]; // 0x890(0x3C4)
	float CheckpointSaveMaxMSPerFrame; // 0xC54(0x4)
	unsigned char UnknownData_C58[0x0030]; // 0xC58(0x30)
	struct TArray<struct FMulticastRecordOptions> MulticastRecordOptions; // 0xC88(0x10)
	unsigned char UnknownData_C98[0x0050]; // 0xC98(0x50)
	bool bIsLocalReplay; // 0xCE8(0x1)
	unsigned char UnknownData_CE9[0x0007]; // 0xCE9(0x7)
	struct TArray<struct APlayerController*> SpectatorControllers; // 0xCF0(0x10)
	unsigned char UnknownData_D00[0x0420]; // 0xD00(0x420)
};

// Class Engine.PendingNetGame
// Size : 0xC0 (Inherited : 0x28)
struct UPendingNetGame : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct UNetDriver* NetDriver; // 0x30(0x8)
	struct UDemoNetDriver* DemoNetDriver; // 0x38(0x8)
	unsigned char UnknownData_40[0x0080]; // 0x40(0x80)
};

// Class Engine.DemoPendingNetGame
// Size : 0xC0 (Inherited : 0xC0)
struct UDemoPendingNetGame : UPendingNetGame {
};

// Class Engine.DestructibleInterface
// Size : 0x28 (Inherited : 0x28)
struct UDestructibleInterface : UInterface {
};

// Class Engine.TextureLODSettings
// Size : 0x38 (Inherited : 0x28)
struct UTextureLODSettings : UObject {
	struct TArray<struct FTextureLODGroup> TextureLODGroups; // 0x28(0x10)
};

// Class Engine.DeviceProfile
// Size : 0x98 (Inherited : 0x38)
struct UDeviceProfile : UTextureLODSettings {
	struct FString DeviceType; // 0x38(0x10)
	struct FString BaseProfileName; // 0x48(0x10)
	struct UObject* Parent; // 0x58(0x8)
	unsigned char UnknownData_60[0x0018]; // 0x60(0x18)
	struct TArray<struct FString> CVars; // 0x78(0x10)
	unsigned char UnknownData_88[0x0010]; // 0x88(0x10)
};

// Class Engine.DeviceProfileManager
// Size : 0xB0 (Inherited : 0x28)
struct UDeviceProfileManager : UObject {
	struct TArray<struct UObject*> Profiles; // 0x28(0x10)
	unsigned char UnknownData_38[0x0078]; // 0x38(0x78)
};

// Class Engine.DialogueSoundWaveProxy
// Size : 0x178 (Inherited : 0x160)
struct UDialogueSoundWaveProxy : USoundBase {
	unsigned char UnknownData_160[0x0018]; // 0x160(0x18)
};

// Class Engine.DialogueVoice
// Size : 0x40 (Inherited : 0x28)
struct UDialogueVoice : UObject {
	enum class EGrammaticalGender Gender; // 0x28(0x1)
	enum class EGrammaticalNumber Plurality; // 0x29(0x1)
	unsigned char UnknownData_2A[0x0002]; // 0x2A(0x2)
	struct FGuid LocalizationGUID; // 0x2C(0x10)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.DialogueWave
// Size : 0x70 (Inherited : 0x28)
struct UDialogueWave : UObject {
	unsigned char bMature : 1; // 0x28(0x1)
	unsigned char bOverride_SubtitleOverride : 1; // 0x28(0x1)
	unsigned char UnknownData_28_2 : 6; // 0x28(0x1)
	unsigned char UnknownData_29[0x0007]; // 0x29(0x7)
	struct FString SpokenText; // 0x30(0x10)
	struct FString SubtitleOverride; // 0x40(0x10)
	struct TArray<struct FDialogueContextMapping> ContextMappings; // 0x50(0x10)
	struct FGuid LocalizationGUID; // 0x60(0x10)
};

// Class Engine.Light
// Size : 0x230 (Inherited : 0x220)
struct ALight : AActor {
	struct ULightComponent* LightComponent; // 0x220(0x8)
	unsigned char bEnabled : 1; // 0x228(0x1)
	unsigned char UnknownData_228_1 : 7; // 0x228(0x1)
	unsigned char UnknownData_229[0x0007]; // 0x229(0x7)

	void ToggleEnabled(); // Function Engine.Light.ToggleEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65577C520
	void SetLightFunctionScale(struct FVector NewLightFunctionScale); // Function Engine.Light.SetLightFunctionScale // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF65577BDB0
	void SetLightFunctionMaterial(struct UMaterialInterface* NewLightFunctionMaterial); // Function Engine.Light.SetLightFunctionMaterial // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65577BCB0
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance); // Function Engine.Light.SetLightFunctionFadeDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577BBB0
	void SetLightColor(struct FLinearColor NewLightColor); // Function Engine.Light.SetLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF65577B9E0
	void SetEnabled(bool bSetEnabled); // Function Engine.Light.SetEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B640
	void SetCastShadows(bool bNewValue); // Function Engine.Light.SetCastShadows // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B240
	void SetBrightness(float NewBrightness); // Function Engine.Light.SetBrightness // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577B0A0
	void SetAffectTranslucentLighting(bool bNewValue); // Function Engine.Light.SetAffectTranslucentLighting // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577AD90
	void OnRep_bEnabled(); // Function Engine.Light.OnRep_bEnabled // (Native|Public) // Param Size : 0x0, 0x7FF6556FB1C0
	bool IsEnabled(); // Function Engine.Light.IsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65577A690
	struct FLinearColor GetLightColor(); // Function Engine.Light.GetLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF65577A5B0
	float GetBrightness(); // Function Engine.Light.GetBrightness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65577A550
};

// Class Engine.DirectionalLight
// Size : 0x230 (Inherited : 0x230)
struct ADirectionalLight : ALight {
};

// Class Engine.LightComponentBase
// Size : 0x220 (Inherited : 0x1F0)
struct ULightComponentBase : USceneComponent {
	struct FGuid LightGuid; // 0x1F0(0x10)
	float Brightness; // 0x200(0x4)
	float Intensity; // 0x204(0x4)
	struct FColor LightColor; // 0x208(0x4)
	unsigned char bAffectsWorld : 1; // 0x20C(0x1)
	unsigned char CastShadows : 1; // 0x20C(0x1)
	unsigned char CastStaticShadows : 1; // 0x20C(0x1)
	unsigned char CastDynamicShadows : 1; // 0x20C(0x1)
	unsigned char bAffectTranslucentLighting : 1; // 0x20C(0x1)
	unsigned char bTransmission : 1; // 0x20C(0x1)
	unsigned char bCastVolumetricShadow : 1; // 0x20C(0x1)
	unsigned char bCastDeepShadow : 1; // 0x20C(0x1)
	unsigned char bCastRaytracedShadow : 1; // 0x20D(0x1)
	unsigned char bAffectReflection : 1; // 0x20D(0x1)
	unsigned char bAffectGlobalIllumination : 1; // 0x20D(0x1)
	unsigned char UnknownData_20D_3 : 5; // 0x20D(0x1)
	unsigned char UnknownData_20E[0x0002]; // 0x20E(0x2)
	float IndirectLightingIntensity; // 0x210(0x4)
	float VolumetricScatteringIntensity; // 0x214(0x4)
	int32_t SamplesPerPixel; // 0x218(0x4)
	unsigned char UnknownData_21C[0x0004]; // 0x21C(0x4)

	void SetSamplesPerPixel(int32_t NewValue); // Function Engine.LightComponentBase.SetSamplesPerPixel // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C070
	void SetCastVolumetricShadow(bool bNewValue); // Function Engine.LightComponentBase.SetCastVolumetricShadow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B360
	void SetCastShadows(bool bNewValue); // Function Engine.LightComponentBase.SetCastShadows // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B2D0
	void SetCastRaytracedShadow(bool bNewValue); // Function Engine.LightComponentBase.SetCastRaytracedShadow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B1B0
	void SetCastDeepShadow(bool bNewValue); // Function Engine.LightComponentBase.SetCastDeepShadow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B120
	void SetAffectReflection(bool bNewValue); // Function Engine.LightComponentBase.SetAffectReflection // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577AD00
	void SetAffectGlobalIllumination(bool bNewValue); // Function Engine.LightComponentBase.SetAffectGlobalIllumination // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577AC70
	struct FLinearColor GetLightColor(); // Function Engine.LightComponentBase.GetLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF65577A5F0
};

// Class Engine.LightComponent
// Size : 0x320 (Inherited : 0x220)
struct ULightComponent : ULightComponentBase {
	float Temperature; // 0x220(0x4)
	float MaxDrawDistance; // 0x224(0x4)
	float MaxDistanceFadeRange; // 0x228(0x4)
	unsigned char bUseTemperature : 1; // 0x22C(0x1)
	unsigned char UnknownData_22C_1 : 7; // 0x22C(0x1)
	unsigned char UnknownData_22D[0x0003]; // 0x22D(0x3)
	int32_t ShadowMapChannel; // 0x230(0x4)
	unsigned char UnknownData_234[0x0004]; // 0x234(0x4)
	float MinRoughness; // 0x238(0x4)
	float SpecularScale; // 0x23C(0x4)
	float ShadowResolutionScale; // 0x240(0x4)
	float ShadowBias; // 0x244(0x4)
	float ShadowSlopeBias; // 0x248(0x4)
	float ShadowSharpen; // 0x24C(0x4)
	float ContactShadowLength; // 0x250(0x4)
	unsigned char ContactShadowLengthInWS : 1; // 0x254(0x1)
	unsigned char InverseSquaredFalloff : 1; // 0x254(0x1)
	unsigned char CastTranslucentShadows : 1; // 0x254(0x1)
	unsigned char bCastShadowsFromCinematicObjectsOnly : 1; // 0x254(0x1)
	unsigned char bAffectDynamicIndirectLighting : 1; // 0x254(0x1)
	unsigned char bForceCachedShadowsForMovablePrimitives : 1; // 0x254(0x1)
	unsigned char UnknownData_254_6 : 2; // 0x254(0x1)
	unsigned char UnknownData_255[0x0003]; // 0x255(0x3)
	struct FLightingChannels LightingChannels; // 0x258(0x1)
	unsigned char UnknownData_259[0x0007]; // 0x259(0x7)
	struct UMaterialInterface* LightFunctionMaterial; // 0x260(0x8)
	struct FVector LightFunctionScale; // 0x268(0xC)
	unsigned char UnknownData_274[0x0004]; // 0x274(0x4)
	struct UTextureLightProfile* IESTexture; // 0x278(0x8)
	unsigned char bUseIESBrightness : 1; // 0x280(0x1)
	unsigned char UnknownData_280_1 : 7; // 0x280(0x1)
	unsigned char UnknownData_281[0x0003]; // 0x281(0x3)
	float IESBrightnessScale; // 0x284(0x4)
	float LightFunctionFadeDistance; // 0x288(0x4)
	float DisabledBrightness; // 0x28C(0x4)
	unsigned char bEnableLightShaftBloom : 1; // 0x290(0x1)
	unsigned char UnknownData_290_1 : 7; // 0x290(0x1)
	unsigned char UnknownData_291[0x0003]; // 0x291(0x3)
	float BloomScale; // 0x294(0x4)
	float BloomThreshold; // 0x298(0x4)
	float BloomMaxBrightness; // 0x29C(0x4)
	struct FColor BloomTint; // 0x2A0(0x4)
	bool bUseRayTracedDistanceFieldShadows; // 0x2A4(0x1)
	unsigned char UnknownData_2A5[0x0003]; // 0x2A5(0x3)
	float RayStartOffsetDepthScale; // 0x2A8(0x4)
	unsigned char UnknownData_2AC[0x0074]; // 0x2AC(0x74)

	void SetVolumetricScatteringIntensity(float NewIntensity); // Function Engine.LightComponent.SetVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C4A0
	void SetUseIESBrightness(bool bNewValue); // Function Engine.LightComponent.SetUseIESBrightness // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577C410
	void SetTransmission(bool bNewValue); // Function Engine.LightComponent.SetTransmission // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577C380
	void SetTemperature(float NewTemperature); // Function Engine.LightComponent.SetTemperature // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C300
	void SetSpecularScale(float NewValue); // Function Engine.LightComponent.SetSpecularScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C280
	void SetShadowSlopeBias(float NewValue); // Function Engine.LightComponent.SetShadowSlopeBias // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C170
	void SetShadowBias(float NewValue); // Function Engine.LightComponent.SetShadowBias // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C0F0
	void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2); // Function Engine.LightComponent.SetLightingChannels // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF65577BED0
	void SetLightFunctionScale(struct FVector NewLightFunctionScale); // Function Engine.LightComponent.SetLightFunctionScale // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF65577BE40
	void SetLightFunctionMaterial(struct UMaterialInterface* NewLightFunctionMaterial); // Function Engine.LightComponent.SetLightFunctionMaterial // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65577BD30
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance); // Function Engine.LightComponent.SetLightFunctionFadeDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577BC30
	void SetLightFunctionDisabledBrightness(float NewValue); // Function Engine.LightComponent.SetLightFunctionDisabledBrightness // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577BB30
	void SetLightColor(struct FLinearColor NewLightColor, bool bSRGB); // Function Engine.LightComponent.SetLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x11, 0x7FF65577BA60
	void SetIntensity(float NewIntensity); // Function Engine.LightComponent.SetIntensity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577B8E0
	void SetIndirectLightingIntensity(float NewIntensity); // Function Engine.LightComponent.SetIndirectLightingIntensity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577B860
	void SetIESTexture(struct UTextureLightProfile* NewValue); // Function Engine.LightComponent.SetIESTexture // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65577B7E0
	void SetIESBrightnessScale(float NewValue); // Function Engine.LightComponent.SetIESBrightnessScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577B760
	void SetForceCachedShadowsForMovablePrimitives(bool bNewValue); // Function Engine.LightComponent.SetForceCachedShadowsForMovablePrimitives // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B6D0
	void SetEnableLightShaftBloom(bool bNewValue); // Function Engine.LightComponent.SetEnableLightShaftBloom // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577B5B0
	void SetBloomTint(struct FColor NewValue); // Function Engine.LightComponent.SetBloomTint // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x4, 0x7FF65577B030
	void SetBloomThreshold(float NewValue); // Function Engine.LightComponent.SetBloomThreshold // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577AFB0
	void SetBloomScale(float NewValue); // Function Engine.LightComponent.SetBloomScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577AF30
	void SetBloomMaxBrightness(float NewValue); // Function Engine.LightComponent.SetBloomMaxBrightness // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577AEB0
	void SetAffectTranslucentLighting(bool bNewValue); // Function Engine.LightComponent.SetAffectTranslucentLighting // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577AE20
	void SetAffectDynamicIndirectLighting(bool bNewValue); // Function Engine.LightComponent.SetAffectDynamicIndirectLighting // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577ABE0
};

// Class Engine.DirectionalLightComponent
// Size : 0x3A0 (Inherited : 0x320)
struct UDirectionalLightComponent : ULightComponent {
	float ShadowCascadeBiasDistribution; // 0x320(0x4)
	unsigned char bEnableLightShaftOcclusion : 1; // 0x324(0x1)
	unsigned char UnknownData_324_1 : 7; // 0x324(0x1)
	unsigned char UnknownData_325[0x0003]; // 0x325(0x3)
	float OcclusionMaskDarkness; // 0x328(0x4)
	float OcclusionDepthRange; // 0x32C(0x4)
	struct FVector LightShaftOverrideDirection; // 0x330(0xC)
	float WholeSceneDynamicShadowRadius; // 0x33C(0x4)
	float DynamicShadowDistanceMovableLight; // 0x340(0x4)
	float DynamicShadowDistanceStationaryLight; // 0x344(0x4)
	int32_t DynamicShadowCascades; // 0x348(0x4)
	float CascadeDistributionExponent; // 0x34C(0x4)
	float CascadeTransitionFraction; // 0x350(0x4)
	float ShadowDistanceFadeoutFraction; // 0x354(0x4)
	unsigned char bUseInsetShadowsForMovableObjects : 1; // 0x358(0x1)
	unsigned char UnknownData_358_1 : 7; // 0x358(0x1)
	unsigned char UnknownData_359[0x0003]; // 0x359(0x3)
	int32_t FarShadowCascadeCount; // 0x35C(0x4)
	float FarShadowDistance; // 0x360(0x4)
	float DistanceFieldShadowDistance; // 0x364(0x4)
	float LightSourceAngle; // 0x368(0x4)
	float LightSourceSoftAngle; // 0x36C(0x4)
	float TraceDistance; // 0x370(0x4)
	struct FLightmassDirectionalLightSettings LightmassSettings; // 0x374(0x10)
	unsigned char bCastModulatedShadows : 1; // 0x384(0x1)
	unsigned char UnknownData_384_1 : 7; // 0x384(0x1)
	unsigned char UnknownData_385[0x0003]; // 0x385(0x3)
	struct FColor ModulatedShadowColor; // 0x388(0x4)
	float ShadowAmount; // 0x38C(0x4)
	unsigned char bUsedAsAtmosphereSunLight : 1; // 0x390(0x1)
	unsigned char UnknownData_390_1 : 7; // 0x390(0x1)
	unsigned char UnknownData_391[0x0003]; // 0x391(0x3)
	int32_t AtmosphereSunLightIndex; // 0x394(0x4)
	unsigned char UnknownData_398[0x0008]; // 0x398(0x8)

	void SetShadowDistanceFadeoutFraction(float NewValue); // Function Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EDB60
	void SetShadowAmount(float NewValue); // Function Engine.DirectionalLightComponent.SetShadowAmount // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EDAE0
	void SetOcclusionMaskDarkness(float NewValue); // Function Engine.DirectionalLightComponent.SetOcclusionMaskDarkness // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556EDA60
	void SetLightShaftOverrideDirection(struct FVector NewValue); // Function Engine.DirectionalLightComponent.SetLightShaftOverrideDirection // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6556ED9D0
	void SetEnableLightShaftOcclusion(bool bNewValue); // Function Engine.DirectionalLightComponent.SetEnableLightShaftOcclusion // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556ED940
	void SetDynamicShadowDistanceStationaryLight(float NewValue); // Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceStationaryLight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556ED8C0
	void SetDynamicShadowDistanceMovableLight(float NewValue); // Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceMovableLight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556ED840
	void SetDynamicShadowCascades(int32_t NewValue); // Function Engine.DirectionalLightComponent.SetDynamicShadowCascades // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556ED7C0
	void SetCascadeTransitionFraction(float NewValue); // Function Engine.DirectionalLightComponent.SetCascadeTransitionFraction // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556ED740
	void SetCascadeDistributionExponent(float NewValue); // Function Engine.DirectionalLightComponent.SetCascadeDistributionExponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556ED6C0
};

// Class Engine.Distribution
// Size : 0x30 (Inherited : 0x28)
struct UDistribution : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
};

// Class Engine.DistributionFloat
// Size : 0x38 (Inherited : 0x30)
struct UDistributionFloat : UDistribution {
	unsigned char bCanBeBaked : 1; // 0x30(0x1)
	unsigned char UnknownData_30_1 : 1; // 0x30(0x1)
	unsigned char bBakedDataSuccesfully : 1; // 0x30(0x1)
	unsigned char UnknownData_30_3 : 5; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.DistributionFloatConstant
// Size : 0x40 (Inherited : 0x38)
struct UDistributionFloatConstant : UDistributionFloat {
	float Constant; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.DistributionFloatConstantCurve
// Size : 0x50 (Inherited : 0x38)
struct UDistributionFloatConstantCurve : UDistributionFloat {
	struct FInterpCurveFloat ConstantCurve; // 0x38(0x18)
};

// Class Engine.DistributionFloatParameterBase
// Size : 0x60 (Inherited : 0x40)
struct UDistributionFloatParameterBase : UDistributionFloatConstant {
	struct FName ParameterName; // 0x40(0x8)
	float MinInput; // 0x48(0x4)
	float MaxInput; // 0x4C(0x4)
	float MinOutput; // 0x50(0x4)
	float MaxOutput; // 0x54(0x4)
	enum class DistributionParamMode ParamMode; // 0x58(0x1)
	unsigned char UnknownData_59[0x0007]; // 0x59(0x7)
};

// Class Engine.DistributionFloatParticleParameter
// Size : 0x60 (Inherited : 0x60)
struct UDistributionFloatParticleParameter : UDistributionFloatParameterBase {
};

// Class Engine.DistributionFloatUniform
// Size : 0x40 (Inherited : 0x38)
struct UDistributionFloatUniform : UDistributionFloat {
	float Min; // 0x38(0x4)
	float Max; // 0x3C(0x4)
};

// Class Engine.DistributionFloatUniformCurve
// Size : 0x50 (Inherited : 0x38)
struct UDistributionFloatUniformCurve : UDistributionFloat {
	struct FInterpCurveVector2D ConstantCurve; // 0x38(0x18)
};

// Class Engine.DistributionVector
// Size : 0x38 (Inherited : 0x30)
struct UDistributionVector : UDistribution {
	unsigned char bCanBeBaked : 1; // 0x30(0x1)
	unsigned char bIsDirty : 1; // 0x30(0x1)
	unsigned char bBakedDataSuccesfully : 1; // 0x30(0x1)
	unsigned char UnknownData_30_3 : 5; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.DistributionVectorConstant
// Size : 0x50 (Inherited : 0x38)
struct UDistributionVectorConstant : UDistributionVector {
	struct FVector Constant; // 0x38(0xC)
	unsigned char bLockAxes : 1; // 0x44(0x1)
	unsigned char UnknownData_44_1 : 7; // 0x44(0x1)
	unsigned char UnknownData_45[0x0003]; // 0x45(0x3)
	enum class EDistributionVectorLockFlags LockedAxes; // 0x48(0x1)
	unsigned char UnknownData_49[0x0007]; // 0x49(0x7)
};

// Class Engine.DistributionVectorConstantCurve
// Size : 0x58 (Inherited : 0x38)
struct UDistributionVectorConstantCurve : UDistributionVector {
	struct FInterpCurveVector ConstantCurve; // 0x38(0x18)
	unsigned char bLockAxes : 1; // 0x50(0x1)
	unsigned char UnknownData_50_1 : 7; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	enum class EDistributionVectorLockFlags LockedAxes; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
};

// Class Engine.DistributionVectorParameterBase
// Size : 0x90 (Inherited : 0x50)
struct UDistributionVectorParameterBase : UDistributionVectorConstant {
	struct FName ParameterName; // 0x50(0x8)
	struct FVector MinInput; // 0x58(0xC)
	struct FVector MaxInput; // 0x64(0xC)
	struct FVector MinOutput; // 0x70(0xC)
	struct FVector MaxOutput; // 0x7C(0xC)
	enum class DistributionParamMode ParamModes[3]; // 0x88(0x3)
	unsigned char UnknownData_8B[0x0005]; // 0x8B(0x5)
};

// Class Engine.DistributionVectorParticleParameter
// Size : 0x90 (Inherited : 0x90)
struct UDistributionVectorParticleParameter : UDistributionVectorParameterBase {
};

// Class Engine.DistributionVectorUniform
// Size : 0x60 (Inherited : 0x38)
struct UDistributionVectorUniform : UDistributionVector {
	struct FVector Max; // 0x38(0xC)
	struct FVector Min; // 0x44(0xC)
	unsigned char bLockAxes : 1; // 0x50(0x1)
	unsigned char UnknownData_50_1 : 7; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	enum class EDistributionVectorLockFlags LockedAxes; // 0x54(0x1)
	enum class EDistributionVectorMirrorFlags MirrorFlags[3]; // 0x55(0x3)
	unsigned char bUseExtremes : 1; // 0x58(0x1)
	unsigned char UnknownData_58_1 : 7; // 0x58(0x1)
	unsigned char UnknownData_59[0x0007]; // 0x59(0x7)
};

// Class Engine.DistributionVectorUniformCurve
// Size : 0x60 (Inherited : 0x38)
struct UDistributionVectorUniformCurve : UDistributionVector {
	struct FInterpCurveTwoVectors ConstantCurve; // 0x38(0x18)
	unsigned char bLockAxes1 : 1; // 0x50(0x1)
	unsigned char bLockAxes2 : 1; // 0x50(0x1)
	unsigned char UnknownData_50_2 : 6; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	enum class EDistributionVectorLockFlags LockedAxes[2]; // 0x54(0x2)
	enum class EDistributionVectorMirrorFlags MirrorFlags[3]; // 0x56(0x3)
	unsigned char UnknownData_59[0x0003]; // 0x59(0x3)
	unsigned char bUseExtremes : 1; // 0x5C(0x1)
	unsigned char UnknownData_5C_1 : 7; // 0x5C(0x1)
	unsigned char UnknownData_5D[0x0003]; // 0x5D(0x3)
};

// Class Engine.DocumentationActor
// Size : 0x228 (Inherited : 0x220)
struct ADocumentationActor : AActor {
	unsigned char UnknownData_220[0x0008]; // 0x220(0x8)
};

// Class Engine.DrawFrustumComponent
// Size : 0x430 (Inherited : 0x410)
struct UDrawFrustumComponent : UPrimitiveComponent {
	struct FColor FrustumColor; // 0x408(0x4)
	float FrustumAngle; // 0x40C(0x4)
	float FrustumAspectRatio; // 0x410(0x4)
	float FrustumStartDist; // 0x414(0x4)
	float FrustumEndDist; // 0x418(0x4)
	struct UTexture* Texture; // 0x420(0x8)
	unsigned char UnknownData_42C[0x0004]; // 0x42C(0x4)
};

// Class Engine.DrawSphereComponent
// Size : 0x430 (Inherited : 0x430)
struct UDrawSphereComponent : USphereComponent {
};

// Class Engine.EdGraph
// Size : 0x60 (Inherited : 0x28)
struct UEdGraph : UObject {
	class UEdGraphSchema* Schema; // 0x28(0x8)
	struct TArray<struct UEdGraphNode*> Nodes; // 0x30(0x10)
	unsigned char bEditable : 1; // 0x40(0x1)
	unsigned char bAllowDeletion : 1; // 0x40(0x1)
	unsigned char bAllowRenaming : 1; // 0x40(0x1)
	unsigned char UnknownData_40_3 : 5; // 0x40(0x1)
	unsigned char UnknownData_41[0x001F]; // 0x41(0x1F)
};

// Class Engine.GraphNodeContextMenuContext
// Size : 0x50 (Inherited : 0x28)
struct UGraphNodeContextMenuContext : UObject {
	struct UBlueprint* Blueprint; // 0x28(0x8)
	struct UEdGraph* Graph; // 0x30(0x8)
	struct UEdGraphNode* Node; // 0x38(0x8)
	unsigned char UnknownData_40[0x0008]; // 0x40(0x8)
	bool bIsDebugging; // 0x48(0x1)
	unsigned char UnknownData_49[0x0007]; // 0x49(0x7)
};

// Class Engine.EdGraphNode
// Size : 0x98 (Inherited : 0x28)
struct UEdGraphNode : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
	struct TArray<struct UEdGraphPin_Deprecated*> DeprecatedPins; // 0x38(0x10)
	int32_t NodePosX; // 0x48(0x4)
	int32_t NodePosY; // 0x4C(0x4)
	int32_t NodeWidth; // 0x50(0x4)
	int32_t NodeHeight; // 0x54(0x4)
	enum class ENodeAdvancedPins AdvancedPinDisplay; // 0x58(0x1)
	enum class ENodeEnabledState EnabledState; // 0x59(0x1)
	unsigned char UnknownData_5A[0x0001]; // 0x5A(0x1)
	unsigned char UnknownData_5B_0 : 1; // 0x5B(0x1)
	unsigned char bDisplayAsDisabled : 1; // 0x5B(0x1)
	unsigned char bUserSetEnabledState : 1; // 0x5B(0x1)
	unsigned char UnknownData_5B_3 : 1; // 0x5B(0x1)
	unsigned char bIsNodeEnabled : 1; // 0x5B(0x1)
	unsigned char UnknownData_5B_5 : 1; // 0x5B(0x1)
	unsigned char bHasCompilerMessage : 1; // 0x5B(0x1)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
	struct FString NodeComment; // 0x60(0x10)
	int32_t ErrorType; // 0x70(0x4)
	unsigned char UnknownData_74[0x0004]; // 0x74(0x4)
	struct FString ErrorMsg; // 0x78(0x10)
	struct FGuid NodeGuid; // 0x88(0x10)
};

// Class Engine.EdGraphNode_Documentation
// Size : 0xB8 (Inherited : 0x98)
struct UEdGraphNode_Documentation : UEdGraphNode {
	struct FString Link; // 0x98(0x10)
	struct FString Excerpt; // 0xA8(0x10)
};

// Class Engine.EdGraphPin_Deprecated
// Size : 0x118 (Inherited : 0x28)
struct UEdGraphPin_Deprecated : UObject {
	struct FString PinName; // 0x28(0x10)
	struct FString PinToolTip; // 0x38(0x10)
	enum class EEdGraphPinDirection Direction; // 0x48(0x1)
	unsigned char UnknownData_49[0x0007]; // 0x49(0x7)
	struct FEdGraphPinType PinType; // 0x50(0x58)
	struct FString DefaultValue; // 0xA8(0x10)
	struct FString AutogeneratedDefaultValue; // 0xB8(0x10)
	struct UObject* DefaultObject; // 0xC8(0x8)
	struct FText DefaultTextValue; // 0xD0(0x18)
	struct TArray<struct UEdGraphPin_Deprecated*> LinkedTo; // 0xE8(0x10)
	struct TArray<struct UEdGraphPin_Deprecated*> SubPins; // 0xF8(0x10)
	struct UEdGraphPin_Deprecated* ParentPin; // 0x108(0x8)
	struct UEdGraphPin_Deprecated* ReferencePassThroughConnection; // 0x110(0x8)
};

// Class Engine.EdGraphSchema
// Size : 0x28 (Inherited : 0x28)
struct UEdGraphSchema : UObject {
};

// Class Engine.Emitter
// Size : 0x270 (Inherited : 0x220)
struct AEmitter : AActor {
	struct UParticleSystemComponent* ParticleSystemComponent; // 0x220(0x8)
	unsigned char bDestroyOnSystemFinish : 1; // 0x228(0x1)
	unsigned char bPostUpdateTickGroup : 1; // 0x228(0x1)
	unsigned char bCurrentlyActive : 1; // 0x228(0x1)
	unsigned char UnknownData_228_3 : 5; // 0x228(0x1)
	unsigned char UnknownData_229[0x0007]; // 0x229(0x7)
	struct FMulticastInlineDelegate OnParticleSpawn; // 0x230(0x10)
	struct FMulticastInlineDelegate OnParticleBurst; // 0x240(0x10)
	struct FMulticastInlineDelegate OnParticleDeath; // 0x250(0x10)
	struct FMulticastInlineDelegate OnParticleCollide; // 0x260(0x10)

	void ToggleActive(); // Function Engine.Emitter.ToggleActive // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556F0BF0
	void SetVectorParameter(struct FName ParameterName, struct FVector Param); // Function Engine.Emitter.SetVectorParameter // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6556F0B20
	void SetTemplate(struct UParticleSystem* NewTemplate); // Function Engine.Emitter.SetTemplate // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556F0A90
	void SetMaterialParameter(struct FName ParameterName, struct UMaterialInterface* Param); // Function Engine.Emitter.SetMaterialParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556F09D0
	void SetFloatParameter(struct FName ParameterName, float Param); // Function Engine.Emitter.SetFloatParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6556F0900
	void SetColorParameter(struct FName ParameterName, struct FLinearColor Param); // Function Engine.Emitter.SetColorParameter // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6556F0830
	void SetActorParameter(struct FName ParameterName, struct AActor* Param); // Function Engine.Emitter.SetActorParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6556F0770
	void OnRep_bCurrentlyActive(); // Function Engine.Emitter.OnRep_bCurrentlyActive // (Native|Public) // Param Size : 0x0, 0x7FF6556F0750
	void OnParticleSystemFinished(struct UParticleSystemComponent* FinishedComponent); // Function Engine.Emitter.OnParticleSystemFinished // (Native|Public) // Param Size : 0x8, 0x7FF6556F06C0
	bool IsActive(); // Function Engine.Emitter.IsActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6556F0690
	void Deactivate(); // Function Engine.Emitter.Deactivate // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556F0670
	void Activate(); // Function Engine.Emitter.Activate // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556F0650
};

// Class Engine.EmitterCameraLensEffectBase
// Size : 0x2E0 (Inherited : 0x270)
struct AEmitterCameraLensEffectBase : AEmitter {
	struct UParticleSystem* PS_CameraEffect; // 0x270(0x8)
	struct UParticleSystem* PS_CameraEffectNonExtremeContent; // 0x278(0x8)
	struct APlayerCameraManager* BaseCamera; // 0x280(0x8)
	unsigned char UnknownData_288[0x0008]; // 0x288(0x8)
	struct FTransform RelativeTransform; // 0x290(0x30)
	float BaseFOV; // 0x2C0(0x4)
	unsigned char bAllowMultipleInstances : 1; // 0x2C4(0x1)
	unsigned char bResetWhenRetriggered : 1; // 0x2C4(0x1)
	unsigned char UnknownData_2C4_2 : 6; // 0x2C4(0x1)
	unsigned char UnknownData_2C5[0x0003]; // 0x2C5(0x3)
	struct TArray<class AEmitterCameraLensEffectBase*> EmittersToTreatAsSame; // 0x2C8(0x10)
	float DistFromCamera; // 0x2D8(0x4)
	unsigned char UnknownData_2DC[0x0004]; // 0x2DC(0x4)
};

// Class Engine.ViewModeUtils
// Size : 0x28 (Inherited : 0x28)
struct UViewModeUtils : UObject {
};

// Class Engine.EngineBaseTypes
// Size : 0x28 (Inherited : 0x28)
struct UEngineBaseTypes : UObject {
};

// Class Engine.EngineHandlerComponentFactory
// Size : 0x28 (Inherited : 0x28)
struct UEngineHandlerComponentFactory : UHandlerComponentFactory {
};

// Class Engine.LocalMessage
// Size : 0x28 (Inherited : 0x28)
struct ULocalMessage : UObject {
};

// Class Engine.EngineMessage
// Size : 0xA8 (Inherited : 0x28)
struct UEngineMessage : ULocalMessage {
	struct FString FailedPlaceMessage; // 0x28(0x10)
	struct FString MaxedOutMessage; // 0x38(0x10)
	struct FString EnteredMessage; // 0x48(0x10)
	struct FString LeftMessage; // 0x58(0x10)
	struct FString GlobalNameChange; // 0x68(0x10)
	struct FString SpecEnteredMessage; // 0x78(0x10)
	struct FString NewPlayerMessage; // 0x88(0x10)
	struct FString NewSpecMessage; // 0x98(0x10)
};

// Class Engine.EngineTypes
// Size : 0x28 (Inherited : 0x28)
struct UEngineTypes : UObject {
};

// Class Engine.ExponentialHeightFog
// Size : 0x230 (Inherited : 0x220)
struct AExponentialHeightFog : AInfo {
	struct UExponentialHeightFogComponent* Component; // 0x220(0x8)
	unsigned char bEnabled : 1; // 0x228(0x1)
	unsigned char UnknownData_228_1 : 7; // 0x228(0x1)
	unsigned char UnknownData_229[0x0007]; // 0x229(0x7)

	void OnRep_bEnabled(); // Function Engine.ExponentialHeightFog.OnRep_bEnabled // (Native|Public) // Param Size : 0x0, 0x7FF6556FB1C0
};

// Class Engine.ExponentialHeightFogComponent
// Size : 0x290 (Inherited : 0x1F0)
struct UExponentialHeightFogComponent : USceneComponent {
	float FogDensity; // 0x1F0(0x4)
	float FogHeightFalloff; // 0x1F4(0x4)
	struct FExponentialHeightFogData SecondFogData; // 0x1F8(0xC)
	struct FLinearColor FogInscatteringColor; // 0x204(0x10)
	unsigned char UnknownData_214[0x0004]; // 0x214(0x4)
	struct UTextureCube* InscatteringColorCubemap; // 0x218(0x8)
	float InscatteringColorCubemapAngle; // 0x220(0x4)
	struct FLinearColor InscatteringTextureTint; // 0x224(0x10)
	float FullyDirectionalInscatteringColorDistance; // 0x234(0x4)
	float NonDirectionalInscatteringColorDistance; // 0x238(0x4)
	float DirectionalInscatteringExponent; // 0x23C(0x4)
	float DirectionalInscatteringStartDistance; // 0x240(0x4)
	struct FLinearColor DirectionalInscatteringColor; // 0x244(0x10)
	float FogMaxOpacity; // 0x254(0x4)
	float StartDistance; // 0x258(0x4)
	float FogCutoffDistance; // 0x25C(0x4)
	bool bEnableVolumetricFog; // 0x260(0x1)
	unsigned char UnknownData_261[0x0003]; // 0x261(0x3)
	float VolumetricFogScatteringDistribution; // 0x264(0x4)
	struct FColor VolumetricFogAlbedo; // 0x268(0x4)
	struct FLinearColor VolumetricFogEmissive; // 0x26C(0x10)
	float VolumetricFogExtinctionScale; // 0x27C(0x4)
	float VolumetricFogDistance; // 0x280(0x4)
	float VolumetricFogStaticLightingScatteringIntensity; // 0x284(0x4)
	bool bOverrideLightColorsWithFogInscatteringColors; // 0x288(0x1)
	unsigned char UnknownData_289[0x0007]; // 0x289(0x7)

	void SetVolumetricFogScatteringDistribution(float NewValue); // Function Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FBC10
	void SetVolumetricFogExtinctionScale(float NewValue); // Function Engine.ExponentialHeightFogComponent.SetVolumetricFogExtinctionScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FBB90
	void SetVolumetricFogEmissive(struct FLinearColor NewValue); // Function Engine.ExponentialHeightFogComponent.SetVolumetricFogEmissive // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6556FBB10
	void SetVolumetricFogDistance(float NewValue); // Function Engine.ExponentialHeightFogComponent.SetVolumetricFogDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FBA90
	void SetVolumetricFogAlbedo(struct FColor NewValue); // Function Engine.ExponentialHeightFogComponent.SetVolumetricFogAlbedo // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FBA20
	void SetVolumetricFog(bool bNewValue); // Function Engine.ExponentialHeightFogComponent.SetVolumetricFog // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6556FB990
	void SetStartDistance(float Value); // Function Engine.ExponentialHeightFogComponent.SetStartDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB910
	void SetNonDirectionalInscatteringColorDistance(float Value); // Function Engine.ExponentialHeightFogComponent.SetNonDirectionalInscatteringColorDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB890
	void SetInscatteringTextureTint(struct FLinearColor Value); // Function Engine.ExponentialHeightFogComponent.SetInscatteringTextureTint // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6556FB790
	void SetInscatteringColorCubemapAngle(float Value); // Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemapAngle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB710
	void SetInscatteringColorCubemap(struct UTextureCube* Value); // Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemap // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556FB690
	void SetFullyDirectionalInscatteringColorDistance(float Value); // Function Engine.ExponentialHeightFogComponent.SetFullyDirectionalInscatteringColorDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB610
	void SetFogMaxOpacity(float Value); // Function Engine.ExponentialHeightFogComponent.SetFogMaxOpacity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB510
	void SetFogInscatteringColor(struct FLinearColor Value); // Function Engine.ExponentialHeightFogComponent.SetFogInscatteringColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6556FB490
	void SetFogHeightFalloff(float Value); // Function Engine.ExponentialHeightFogComponent.SetFogHeightFalloff // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0430
	void SetFogDensity(float Value); // Function Engine.ExponentialHeightFogComponent.SetFogDensity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556C0C10
	void SetFogCutoffDistance(float Value); // Function Engine.ExponentialHeightFogComponent.SetFogCutoffDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB410
	void SetDirectionalInscatteringStartDistance(float Value); // Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringStartDistance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB390
	void SetDirectionalInscatteringExponent(float Value); // Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringExponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB310
	void SetDirectionalInscatteringColor(struct FLinearColor Value); // Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6556FB290
};

// Class Engine.Exporter
// Size : 0x78 (Inherited : 0x28)
struct UExporter : UObject {
	class UObject* SupportedClass; // 0x28(0x8)
	struct UObject* ExportRootScope; // 0x30(0x8)
	struct TArray<struct FString> FormatExtension; // 0x38(0x10)
	struct TArray<struct FString> FormatDescription; // 0x48(0x10)
	int32_t PreferredFormatIndex; // 0x58(0x4)
	int32_t TextIndent; // 0x5C(0x4)
	unsigned char bText : 1; // 0x60(0x1)
	unsigned char bSelectedOnly : 1; // 0x60(0x1)
	unsigned char bForceFileOperations : 1; // 0x60(0x1)
	unsigned char UnknownData_60_3 : 5; // 0x60(0x1)
	unsigned char UnknownData_61[0x0007]; // 0x61(0x7)
	struct UAssetExportTask* ExportTask; // 0x68(0x8)
	unsigned char UnknownData_70[0x0008]; // 0x70(0x8)

	bool ScriptRunAssetExportTask(struct UAssetExportTask* Task); // Function Engine.Exporter.ScriptRunAssetExportTask // (Event|Public|BlueprintEvent) // Param Size : 0x9, 0x7FF653FAFDF0
	bool RunAssetExportTasks(struct TArray<struct UAssetExportTask*> ExportTasks); // Function Engine.Exporter.RunAssetExportTasks // (Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6556FB1E0
	bool RunAssetExportTask(struct UAssetExportTask* Task); // Function Engine.Exporter.RunAssetExportTask // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6535DF050
};

// Class Engine.FloatingPawnMovement
// Size : 0x150 (Inherited : 0x138)
struct UFloatingPawnMovement : UPawnMovementComponent {
	float MaxSpeed; // 0x138(0x4)
	float Acceleration; // 0x13C(0x4)
	float Deceleration; // 0x140(0x4)
	float TurningBoost; // 0x144(0x4)
	unsigned char bPositionCorrected : 1; // 0x148(0x1)
	unsigned char UnknownData_148_1 : 7; // 0x148(0x1)
	unsigned char UnknownData_149[0x0007]; // 0x149(0x7)
};

// Class Engine.Font
// Size : 0x1D0 (Inherited : 0x28)
struct UFont : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	enum class EFontCacheType FontCacheType; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
	struct TArray<struct FFontCharacter> Characters; // 0x38(0x10)
	struct TArray<struct UTexture2D*> Textures; // 0x48(0x10)
	int32_t IsRemapped; // 0x58(0x4)
	float EmScale; // 0x5C(0x4)
	float Ascent; // 0x60(0x4)
	float Descent; // 0x64(0x4)
	float Leading; // 0x68(0x4)
	int32_t Kerning; // 0x6C(0x4)
	struct FFontImportOptionsData ImportOptions; // 0x70(0xB0)
	int32_t NumCharacters; // 0x120(0x4)
	unsigned char UnknownData_124[0x0004]; // 0x124(0x4)
	struct TArray<int32_t> MaxCharHeight; // 0x128(0x10)
	float ScalingFactor; // 0x138(0x4)
	int32_t LegacyFontSize; // 0x13C(0x4)
	struct FName LegacyFontName; // 0x140(0x8)
	struct FCompositeFont CompositeFont; // 0x148(0x38)
	unsigned char UnknownData_180[0x0050]; // 0x180(0x50)
};

// Class Engine.FontFace
// Size : 0x58 (Inherited : 0x28)
struct UFontFace : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct FString SourceFilename; // 0x30(0x10)
	enum class EFontHinting Hinting; // 0x40(0x1)
	enum class EFontLoadingPolicy LoadingPolicy; // 0x41(0x1)
	enum class EFontLayoutMethod LayoutMethod; // 0x42(0x1)
	unsigned char UnknownData_43[0x0015]; // 0x43(0x15)
};

// Class Engine.FontImportOptions
// Size : 0xD8 (Inherited : 0x28)
struct UFontImportOptions : UObject {
	struct FFontImportOptionsData Data; // 0x28(0xB0)
};

// Class Engine.ForceFeedbackAttenuation
// Size : 0xD8 (Inherited : 0x28)
struct UForceFeedbackAttenuation : UObject {
	struct FForceFeedbackAttenuationSettings Attenuation; // 0x28(0xB0)
};

// Class Engine.ForceFeedbackComponent
// Size : 0x2D0 (Inherited : 0x1F0)
struct UForceFeedbackComponent : USceneComponent {
	struct UForceFeedbackEffect* ForceFeedbackEffect; // 0x1F0(0x8)
	unsigned char bAutoDestroy : 1; // 0x1F8(0x1)
	unsigned char bStopWhenOwnerDestroyed : 1; // 0x1F8(0x1)
	unsigned char bLooping : 1; // 0x1F8(0x1)
	unsigned char bIgnoreTimeDilation : 1; // 0x1F8(0x1)
	unsigned char bOverrideAttenuation : 1; // 0x1F8(0x1)
	unsigned char UnknownData_1F8_5 : 3; // 0x1F8(0x1)
	unsigned char UnknownData_1F9[0x0003]; // 0x1F9(0x3)
	float IntensityMultiplier; // 0x1FC(0x4)
	struct UForceFeedbackAttenuation* AttenuationSettings; // 0x200(0x8)
	struct FForceFeedbackAttenuationSettings AttenuationOverrides; // 0x208(0xB0)
	struct FMulticastInlineDelegate OnForceFeedbackFinished; // 0x2B8(0x10)
	unsigned char UnknownData_2C8[0x0008]; // 0x2C8(0x8)

	void Stop(); // Function Engine.ForceFeedbackComponent.Stop // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556FBC90
	void SetIntensityMultiplier(float NewIntensityMultiplier); // Function Engine.ForceFeedbackComponent.SetIntensityMultiplier // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556FB810
	void SetForceFeedbackEffect(struct UForceFeedbackEffect* NewForceFeedbackEffect); // Function Engine.ForceFeedbackComponent.SetForceFeedbackEffect // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6556FB590
	void Play(float StartTime); // Function Engine.ForceFeedbackComponent.Play // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6556D36C0
	bool BP_GetAttenuationSettingsToApply(struct FForceFeedbackAttenuationSettings OutAttenuationSettings); // Function Engine.ForceFeedbackComponent.BP_GetAttenuationSettingsToApply // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xB1, 0x7FF6556FAFA0
	void AdjustAttenuation(struct FForceFeedbackAttenuationSettings InAttenuationSettings); // Function Engine.ForceFeedbackComponent.AdjustAttenuation // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0xB0, 0x7FF6556FAEA0
};

// Class Engine.ForceFeedbackEffect
// Size : 0x40 (Inherited : 0x28)
struct UForceFeedbackEffect : UObject {
	struct TArray<struct FForceFeedbackChannelDetails> ChannelDetails; // 0x28(0x10)
	float Duration; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.GameEngine
// Size : 0xE30 (Inherited : 0xDE0)
struct UGameEngine : UEngine {
	float MaxDeltaTime; // 0xDE0(0x4)
	float ServerFlushLogInterval; // 0xDE4(0x4)
	struct UGameInstance* GameInstance; // 0xDE8(0x8)
	unsigned char UnknownData_DF0[0x0040]; // 0xDF0(0x40)
};

// Class Engine.GameInstanceSubsystem
// Size : 0x30 (Inherited : 0x30)
struct UGameInstanceSubsystem : USubsystem {
};

// Class Engine.GameNetworkManager
// Size : 0x2D0 (Inherited : 0x220)
struct AGameNetworkManager : AInfo {
	float BadPacketLossThreshold; // 0x220(0x4)
	float SeverePacketLossThreshold; // 0x224(0x4)
	int32_t BadPingThreshold; // 0x228(0x4)
	int32_t SeverePingThreshold; // 0x22C(0x4)
	int32_t AdjustedNetSpeed; // 0x230(0x4)
	float LastNetSpeedUpdateTime; // 0x234(0x4)
	int32_t TotalNetBandwidth; // 0x238(0x4)
	int32_t MinDynamicBandwidth; // 0x23C(0x4)
	int32_t MaxDynamicBandwidth; // 0x240(0x4)
	unsigned char bIsStandbyCheckingEnabled : 1; // 0x244(0x1)
	unsigned char bHasStandbyCheatTriggered : 1; // 0x244(0x1)
	unsigned char UnknownData_244_2 : 6; // 0x244(0x1)
	unsigned char UnknownData_245[0x0003]; // 0x245(0x3)
	float StandbyRxCheatTime; // 0x248(0x4)
	float StandbyTxCheatTime; // 0x24C(0x4)
	float PercentMissingForRxStandby; // 0x250(0x4)
	float PercentMissingForTxStandby; // 0x254(0x4)
	float PercentForBadPing; // 0x258(0x4)
	float JoinInProgressStandbyWaitTime; // 0x25C(0x4)
	float MoveRepSize; // 0x260(0x4)
	float MAXPOSITIONERRORSQUARED; // 0x264(0x4)
	float MAXNEARZEROVELOCITYSQUARED; // 0x268(0x4)
	float CLIENTADJUSTUPDATECOST; // 0x26C(0x4)
	float MAXCLIENTUPDATEINTERVAL; // 0x270(0x4)
	float MaxClientForcedUpdateDuration; // 0x274(0x4)
	float ServerForcedUpdateHitchThreshold; // 0x278(0x4)
	float ServerForcedUpdateHitchCooldown; // 0x27C(0x4)
	float MaxMoveDeltaTime; // 0x280(0x4)
	float MaxClientSmoothingDeltaTime; // 0x284(0x4)
	float ClientNetSendMoveDeltaTime; // 0x288(0x4)
	float ClientNetSendMoveDeltaTimeThrottled; // 0x28C(0x4)
	float ClientNetSendMoveDeltaTimeStationary; // 0x290(0x4)
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x294(0x4)
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x298(0x4)
	bool ClientAuthorativePosition; // 0x29C(0x1)
	unsigned char UnknownData_29D[0x0003]; // 0x29D(0x3)
	float ClientErrorUpdateRateLimit; // 0x2A0(0x4)
	float ClientNetCamUpdateDeltaTime; // 0x2A4(0x4)
	float ClientNetCamUpdatePositionLimit; // 0x2A8(0x4)
	bool bMovementTimeDiscrepancyDetection; // 0x2AC(0x1)
	bool bMovementTimeDiscrepancyResolution; // 0x2AD(0x1)
	unsigned char UnknownData_2AE[0x0002]; // 0x2AE(0x2)
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x2B0(0x4)
	float MovementTimeDiscrepancyMinTimeMargin; // 0x2B4(0x4)
	float MovementTimeDiscrepancyResolutionRate; // 0x2B8(0x4)
	float MovementTimeDiscrepancyDriftAllowance; // 0x2BC(0x4)
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x2C0(0x1)
	bool bUseDistanceBasedRelevancy; // 0x2C1(0x1)
	unsigned char UnknownData_2C2[0x000E]; // 0x2C2(0xE)
};

// Class Engine.GameplayStatics
// Size : 0x28 (Inherited : 0x28)
struct UGameplayStatics : UBlueprintFunctionLibrary {

	void UnloadStreamLevel(struct UObject* WorldContextObject, struct FName LevelName, struct FLatentActionInfo LatentInfo, bool bShouldBlockOnUnload); // Function Engine.GameplayStatics.UnloadStreamLevel // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x29, 0x7FF655709D80
	bool SuggestProjectileVelocity_CustomArc(struct UObject* WorldContextObject, struct FVector OutLaunchVelocity, struct FVector StartPos, struct FVector EndPos, float OverrideGravityZ, float ArcParam); // Function Engine.GameplayStatics.SuggestProjectileVelocity_CustomArc // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x35, 0x7FF655709BA0
	struct UAudioComponent* SpawnSoundAttached(struct USoundBase* Sound, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnSoundAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x60, 0x7FF6557097D0
	struct UAudioComponent* SpawnSoundAtLocation(struct UObject* WorldContextObject, struct USoundBase* Sound, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnSoundAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x58, 0x7FF655709500
	struct UAudioComponent* SpawnSound2D(struct UObject* WorldContextObject, struct USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundConcurrency* ConcurrencySettings, bool bPersistAcrossLevelTransition, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnSound2D // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // Param Size : 0x38, 0x7FF6557092D0
	struct UObject* SpawnObject(class UObject* ObjectClass, struct UObject* Outer); // Function Engine.GameplayStatics.SpawnObject // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF655709210
	struct UForceFeedbackComponent* SpawnForceFeedbackAttached(struct UForceFeedbackEffect* ForceFeedbackEffect, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, bool bLooping, float IntensityMultiplier, float StartTime, struct UForceFeedbackAttenuation* AttenuationSettings, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnForceFeedbackAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x58, 0x7FF655708EB0
	struct UForceFeedbackComponent* SpawnForceFeedbackAtLocation(struct UObject* WorldContextObject, struct UForceFeedbackEffect* ForceFeedbackEffect, struct FVector Location, struct FRotator Rotation, bool bLooping, float IntensityMultiplier, float StartTime, struct UForceFeedbackAttenuation* AttenuationSettings, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnForceFeedbackAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF655708C20
	struct UParticleSystemComponent* SpawnEmitterAttached(struct UParticleSystem* EmitterTemplate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, struct FVector Scale, enum class EAttachLocation LocationType, bool bAutoDestroy, enum class EPSCPoolMethod PoolingMethod, bool bAutoActivate); // Function Engine.GameplayStatics.SpawnEmitterAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x48, 0x7FF655708940
	struct UParticleSystemComponent* SpawnEmitterAtLocation(struct UObject* WorldContextObject, struct UParticleSystem* EmitterTemplate, struct FVector Location, struct FRotator Rotation, struct FVector Scale, bool bAutoDestroy, enum class EPSCPoolMethod PoolingMethod, bool bAutoActivateSystem); // Function Engine.GameplayStatics.SpawnEmitterAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF6557086E0
	struct UAudioComponent* SpawnDialogueAttached(struct UDialogueWave* Dialogue, struct FDialogueContext Context, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnDialogueAttached // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x70, 0x7FF655708320
	struct UAudioComponent* SpawnDialogueAtLocation(struct UObject* WorldContextObject, struct UDialogueWave* Dialogue, struct FDialogueContext Context, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnDialogueAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x68, 0x7FF655708030
	struct UAudioComponent* SpawnDialogue2D(struct UObject* WorldContextObject, struct UDialogueWave* Dialogue, struct FDialogueContext Context, float VolumeMultiplier, float PitchMultiplier, float StartTime, bool bAutoDestroy); // Function Engine.GameplayStatics.SpawnDialogue2D // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x40, 0x7FF655707E20
	struct UDecalComponent* SpawnDecalAttached(struct UMaterialInterface* DecalMaterial, struct FVector DecalSize, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, float LifeSpan); // Function Engine.GameplayStatics.SpawnDecalAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF6557079D0
	struct UDecalComponent* SpawnDecalAtLocation(struct UObject* WorldContextObject, struct UMaterialInterface* DecalMaterial, struct FVector DecalSize, struct FVector Location, struct FRotator Rotation, float LifeSpan); // Function Engine.GameplayStatics.SpawnDecalAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF6557077F0
	void SetWorldOriginLocation(struct UObject* WorldContextObject, struct FIntVector NewLocation); // Function Engine.GameplayStatics.SetWorldOriginLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF655707690
	void SetViewportMouseCaptureMode(struct UObject* WorldContextObject, enum class EMouseCaptureMode MouseCaptureMode); // Function Engine.GameplayStatics.SetViewportMouseCaptureMode // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557075E0
	void SetSubtitlesEnabled(bool bEnabled); // Function Engine.GameplayStatics.SetSubtitlesEnabled // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655707560
	void SetSoundMixClassOverride(struct UObject* WorldContextObject, struct USoundMix* InSoundMixModifier, struct USoundClass* InSoundClass, float Volume, float Pitch, float FadeInTime, bool bApplyToChildren); // Function Engine.GameplayStatics.SetSoundMixClassOverride // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x25, 0x7FF655707370
	void SetSoundClassDistanceScale(struct UObject* WorldContextObject, struct USoundClass* SoundClass, float DistanceAttenuationScale, float TimeSec); // Function Engine.GameplayStatics.SetSoundClassDistanceScale // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF655707240
	void SetPlayerControllerID(struct APlayerController* Player, int32_t ControllerId); // Function Engine.GameplayStatics.SetPlayerControllerID // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF655707190
	void SetMaxAudioChannelsScaled(struct UObject* WorldContextObject, float MaxChannelCountScale); // Function Engine.GameplayStatics.SetMaxAudioChannelsScaled // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557070D0
	void SetGlobalTimeDilation(struct UObject* WorldContextObject, float TimeDilation); // Function Engine.GameplayStatics.SetGlobalTimeDilation // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF655707010
	void SetGlobalPitchModulation(struct UObject* WorldContextObject, float PitchModulation, float TimeSec); // Function Engine.GameplayStatics.SetGlobalPitchModulation // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655706F20
	void SetGlobalListenerFocusParameters(struct UObject* WorldContextObject, float FocusAzimuthScale, float NonFocusAzimuthScale, float FocusDistanceScale, float NonFocusDistanceScale, float FocusVolumeScale, float NonFocusVolumeScale, float FocusPriorityScale, float NonFocusPriorityScale); // Function Engine.GameplayStatics.SetGlobalListenerFocusParameters // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF655706CA0
	bool SetGamePaused(struct UObject* WorldContextObject, bool bPaused); // Function Engine.GameplayStatics.SetGamePaused // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0xA, 0x7FF655706BE0
	void SetForceDisableSplitscreen(struct UObject* WorldContextObject, bool bDisable); // Function Engine.GameplayStatics.SetForceDisableSplitscreen // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF655706B20
	void SetEnableWorldRendering(struct UObject* WorldContextObject, bool bEnable); // Function Engine.GameplayStatics.SetEnableWorldRendering // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF655706A60
	void SetBaseSoundMix(struct UObject* WorldContextObject, struct USoundMix* InSoundMix); // Function Engine.GameplayStatics.SetBaseSoundMix // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557069B0
	bool SaveGameToSlot(struct USaveGame* SaveGameObject, struct FString SlotName, int32_t UserIndex); // Function Engine.GameplayStatics.SaveGameToSlot // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1D, 0x7FF655706780
	void RemovePlayer(struct APlayerController* Player, bool bDestroyPawn); // Function Engine.GameplayStatics.RemovePlayer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557063E0
	struct FVector RebaseZeroOriginOntoLocal(struct UObject* WorldContextObject, struct FVector WorldLocation); // Function Engine.GameplayStatics.RebaseZeroOriginOntoLocal // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655706300
	struct FVector RebaseLocalOriginOntoZero(struct UObject* WorldContextObject, struct FVector WorldLocation); // Function Engine.GameplayStatics.RebaseLocalOriginOntoZero // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655706220
	void PushSoundMixModifier(struct UObject* WorldContextObject, struct USoundMix* InSoundMixModifier); // Function Engine.GameplayStatics.PushSoundMixModifier // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655706110
	bool ProjectWorldToScreen(struct APlayerController* Player, struct FVector WorldPosition, struct FVector2D ScreenPosition, bool bPlayerViewportRelative); // Function Engine.GameplayStatics.ProjectWorldToScreen // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1E, 0x7FF655705FC0
	void PrimeSound(struct USoundBase* InSound); // Function Engine.GameplayStatics.PrimeSound // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655705F50
	void PopSoundMixModifier(struct UObject* WorldContextObject, struct USoundMix* InSoundMixModifier); // Function Engine.GameplayStatics.PopSoundMixModifier // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655705EA0
	void PlayWorldCameraShake(struct UObject* WorldContextObject, class UCameraShake* Shake, struct FVector Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter); // Function Engine.GameplayStatics.PlayWorldCameraShake // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x29, 0x7FF655705BF0
	void PlaySoundAtLocation(struct UObject* WorldContextObject, struct USoundBase* Sound, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, struct AActor* OwningActor); // Function Engine.GameplayStatics.PlaySoundAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF655705920
	void PlaySound2D(struct UObject* WorldContextObject, struct USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundConcurrency* ConcurrencySettings, struct AActor* OwningActor); // Function Engine.GameplayStatics.PlaySound2D // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF655705730
	void PlayDialogueAtLocation(struct UObject* WorldContextObject, struct UDialogueWave* Dialogue, struct FDialogueContext Context, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings); // Function Engine.GameplayStatics.PlayDialogueAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x58, 0x7FF655705480
	void PlayDialogue2D(struct UObject* WorldContextObject, struct UDialogueWave* Dialogue, struct FDialogueContext Context, float VolumeMultiplier, float PitchMultiplier, float StartTime); // Function Engine.GameplayStatics.PlayDialogue2D // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x34, 0x7FF6557052B0
	struct FString ParseOption(struct FString Options, struct FString Key); // Function Engine.GameplayStatics.ParseOption // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655705130
	void OpenLevel(struct UObject* WorldContextObject, struct FName LevelName, bool bAbsolute, struct FString Options); // Function Engine.GameplayStatics.OpenLevel // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF655704FA0
	struct FHitResult MakeHitResult(bool bBlockingHit, bool bInitialOverlap, float Time, float Distance, struct FVector Location, struct FVector ImpactPoint, struct FVector Normal, struct FVector ImpactNormal, struct UPhysicalMaterial* PhysMat, struct AActor* HitActor, struct UPrimitiveComponent* HitComponent, struct FName HitBoneName, int32_t HitItem, int32_t FaceIndex, struct FVector TraceStart, struct FVector TraceEnd); // Function Engine.GameplayStatics.MakeHitResult // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x108, 0x7FF6557049F0
	void LoadStreamLevel(struct UObject* WorldContextObject, struct FName LevelName, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad, struct FLatentActionInfo LatentInfo); // Function Engine.GameplayStatics.LoadStreamLevel // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF655704840
	struct USaveGame* LoadGameFromSlot(struct FString SlotName, int32_t UserIndex); // Function Engine.GameplayStatics.LoadGameFromSlot // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF655704760
	bool IsSplitscreenForceDisabled(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.IsSplitscreenForceDisabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF6557045F0
	bool IsGamePaused(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.IsGamePaused // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF655704570
	bool HasOption(struct FString Options, struct FString InKey); // Function Engine.GameplayStatics.HasOption // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655704360
	bool HasLaunchOption(struct FString OptionToCheck); // Function Engine.GameplayStatics.HasLaunchOption // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655704260
	int32_t GrassOverlappingSphereCount(struct UObject* WorldContextObject, struct UStaticMesh* StaticMesh, struct FVector CenterPosition, float Radius); // Function Engine.GameplayStatics.GrassOverlappingSphereCount // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x24, 0x7FF655704080
	struct FIntVector GetWorldOriginLocation(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetWorldOriginLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655703FE0
	float GetWorldDeltaSeconds(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetWorldDeltaSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655703F50
	void GetViewProjectionMatrix(struct FMinimalViewInfo DesiredView, struct FMatrix ViewMatrix, struct FMatrix ProjectionMatrix, struct FMatrix ViewProjectionMatrix); // Function Engine.GameplayStatics.GetViewProjectionMatrix // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x6B0, 0x7FF655703BC0
	enum class EMouseCaptureMode GetViewportMouseCaptureMode(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetViewportMouseCaptureMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF655703ED0
	float GetUnpausedTimeSeconds(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetUnpausedTimeSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655703B30
	float GetTimeSeconds(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetTimeSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655703AA0
	enum class EPhysicalSurface GetSurfaceType(struct FHitResult Hit); // Function Engine.GameplayStatics.GetSurfaceType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x89, 0x7FF6557039E0
	struct ULevelStreaming* GetStreamingLevel(struct UObject* WorldContextObject, struct FName PackageName); // Function Engine.GameplayStatics.GetStreamingLevel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655703920
	float GetRealTimeSeconds(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetRealTimeSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655703890
	struct APawn* GetPlayerPawn(struct UObject* WorldContextObject, int32_t PlayerIndex); // Function Engine.GameplayStatics.GetPlayerPawn // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557037D0
	int32_t GetPlayerControllerID(struct APlayerController* Player); // Function Engine.GameplayStatics.GetPlayerControllerID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655703750
	struct APlayerController* GetPlayerControllerFromID(struct UObject* WorldContextObject, int32_t ControllerId); // Function Engine.GameplayStatics.GetPlayerControllerFromID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655703690
	struct APlayerController* GetPlayerController(struct UObject* WorldContextObject, int32_t PlayerIndex); // Function Engine.GameplayStatics.GetPlayerController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557035D0
	struct ACharacter* GetPlayerCharacter(struct UObject* WorldContextObject, int32_t PlayerIndex); // Function Engine.GameplayStatics.GetPlayerCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655703510
	struct APlayerCameraManager* GetPlayerCameraManager(struct UObject* WorldContextObject, int32_t PlayerIndex); // Function Engine.GameplayStatics.GetPlayerCameraManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655703450
	struct FString GetPlatformName(); // Function Engine.GameplayStatics.GetPlatformName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557033D0
	class UObject* GetObjectClass(struct UObject* Object); // Function Engine.GameplayStatics.GetObjectClass // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655703350
	int32_t GetMaxAudioChannelCount(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetMaxAudioChannelCount // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF655703270
	void GetKeyValue(struct FString Pair, struct FString Key, struct FString Value); // Function Engine.GameplayStatics.GetKeyValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557030F0
	int32_t GetIntOption(struct FString Options, struct FString Key, int32_t DefaultValue); // Function Engine.GameplayStatics.GetIntOption // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655702FC0
	float GetGlobalTimeDilation(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetGlobalTimeDilation // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655702F30
	struct AGameStateBase* GetGameState(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetGameState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF653C62C10
	struct AGameModeBase* GetGameMode(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetGameMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF653C62B90
	struct UGameInstance* GetGameInstance(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetGameInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655702EB0
	bool GetEnableWorldRendering(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetEnableWorldRendering // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF655702E30
	struct UReverbEffect* GetCurrentReverbEffect(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetCurrentReverbEffect // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655702D10
	struct FString GetCurrentLevelName(struct UObject* WorldContextObject, bool bRemovePrefixString); // Function Engine.GameplayStatics.GetCurrentLevelName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF655702C00
	bool GetClosestListenerLocation(struct UObject* WorldContextObject, struct FVector Location, float MaximumRange, bool bAllowAttenuationOverride, struct FVector ListenerPosition); // Function Engine.GameplayStatics.GetClosestListenerLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x29, 0x7FF655702A40
	float GetAudioTimeSeconds(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.GetAudioTimeSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6557029B0
	void GetAllActorsWithTag(struct UObject* WorldContextObject, struct FName Tag, struct TArray<struct AActor*> OutActors); // Function Engine.GameplayStatics.GetAllActorsWithTag // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF655702890
	void GetAllActorsWithInterface(struct UObject* WorldContextObject, class UInterface* Interface, struct TArray<struct AActor*> OutActors); // Function Engine.GameplayStatics.GetAllActorsWithInterface // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF655702770
	void GetAllActorsOfClassWithTag(struct UObject* WorldContextObject, class AActor* ActorClass, struct FName Tag, struct TArray<struct AActor*> OutActors); // Function Engine.GameplayStatics.GetAllActorsOfClassWithTag // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x28, 0x7FF655702620
	void GetAllActorsOfClass(struct UObject* WorldContextObject, class AActor* ActorClass, struct TArray<struct AActor*> OutActors); // Function Engine.GameplayStatics.GetAllActorsOfClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF655702500
	struct AActor* GetActorOfClass(struct UObject* WorldContextObject, class AActor* ActorClass); // Function Engine.GameplayStatics.GetActorOfClass // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF655702440
	void GetActorArrayBounds(struct TArray<struct AActor*> Actors, bool bOnlyCollidingComponents, struct FVector Center, struct FVector BoxExtent); // Function Engine.GameplayStatics.GetActorArrayBounds // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x2C, 0x7FF6557022B0
	struct FVector GetActorArrayAverageLocation(struct TArray<struct AActor*> Actors); // Function Engine.GameplayStatics.GetActorArrayAverageLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF6557021F0
	void GetAccurateRealTime(struct UObject* WorldContextObject, int32_t Seconds, float PartialSeconds); // Function Engine.GameplayStatics.GetAccurateRealTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557020D0
	void FlushLevelStreaming(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.FlushLevelStreaming // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655702060
	struct AActor* FinishSpawningActor(struct AActor* Actor, struct FTransform SpawnTransform); // Function Engine.GameplayStatics.FinishSpawningActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x48, 0x7FF655701F40
	bool FindCollisionUV(struct FHitResult Hit, int32_t UVChannel, struct FVector2D UV); // Function Engine.GameplayStatics.FindCollisionUV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x95, 0x7FF655701D00
	void EnableLiveStreaming(bool Enable); // Function Engine.GameplayStatics.EnableLiveStreaming // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655701C60
	bool DoesSaveGameExist(struct FString SlotName, int32_t UserIndex); // Function Engine.GameplayStatics.DoesSaveGameExist // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x15, 0x7FF655701B90
	bool DeprojectScreenToWorld(struct APlayerController* Player, struct FVector2D ScreenPosition, struct FVector WorldPosition, struct FVector WorldDirection); // Function Engine.GameplayStatics.DeprojectScreenToWorld // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x29, 0x7FF655701A20
	bool DeleteGameInSlot(struct FString SlotName, int32_t UserIndex); // Function Engine.GameplayStatics.DeleteGameInSlot // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x15, 0x7FF655701950
	void DeactivateReverbEffect(struct UObject* WorldContextObject, struct FName TagName); // Function Engine.GameplayStatics.DeactivateReverbEffect // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557018A0
	struct UAudioComponent* CreateSound2D(struct UObject* WorldContextObject, struct USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundConcurrency* ConcurrencySettings, bool bPersistAcrossLevelTransition, bool bAutoDestroy); // Function Engine.GameplayStatics.CreateSound2D // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // Param Size : 0x38, 0x7FF655701670
	struct USaveGame* CreateSaveGameObject(class USaveGame* SaveGameClass); // Function Engine.GameplayStatics.CreateSaveGameObject // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557015F0
	struct APlayerController* CreatePlayer(struct UObject* WorldContextObject, int32_t ControllerId, bool bSpawnPlayerController); // Function Engine.GameplayStatics.CreatePlayer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF655701500
	void ClearSoundMixModifiers(struct UObject* WorldContextObject); // Function Engine.GameplayStatics.ClearSoundMixModifiers // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655701490
	void ClearSoundMixClassOverride(struct UObject* WorldContextObject, struct USoundMix* InSoundMixModifier, struct USoundClass* InSoundClass, float FadeOutTime); // Function Engine.GameplayStatics.ClearSoundMixClassOverride // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1C, 0x7FF655701350
	void CancelAsyncLoading(); // Function Engine.GameplayStatics.CancelAsyncLoading // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655701170
	void BreakHitResult(struct FHitResult Hit, bool bBlockingHit, bool bInitialOverlap, float Time, float Distance, struct FVector Location, struct FVector ImpactPoint, struct FVector Normal, struct FVector ImpactNormal, struct UPhysicalMaterial* PhysMat, struct AActor* HitActor, struct UPrimitiveComponent* HitComponent, struct FName HitBoneName, int32_t HitItem, int32_t FaceIndex, struct FVector TraceStart, struct FVector TraceEnd); // Function Engine.GameplayStatics.BreakHitResult // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x108, 0x7FF655700AA0
	bool BlueprintSuggestProjectileVelocity(struct UObject* WorldContextObject, struct FVector TossVelocity, struct FVector StartLocation, struct FVector EndLocation, float LaunchSpeed, float OverrideGravityZ, enum class ESuggestProjVelocityTraceOption TraceOption, float CollisionRadius, bool bFavorHighArc, bool bDrawDebug); // Function Engine.GameplayStatics.BlueprintSuggestProjectileVelocity // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x3F, 0x7FF6556FFB50
	bool Blueprint_PredictProjectilePath_ByTraceChannel(struct UObject* WorldContextObject, struct FHitResult OutHit, struct TArray<struct FVector> OutPathPositions, struct FVector OutLastTraceDestination, struct FVector StartPos, struct FVector LaunchVelocity, bool bTracePath, float ProjectileRadius, enum class ECollisionChannel TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ); // Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByTraceChannel // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xF5, 0x7FF655700590
	bool Blueprint_PredictProjectilePath_ByObjectType(struct UObject* WorldContextObject, struct FHitResult OutHit, struct TArray<struct FVector> OutPathPositions, struct FVector OutLastTraceDestination, struct FVector StartPos, struct FVector LaunchVelocity, bool bTracePath, float ProjectileRadius, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ); // Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByObjectType // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10D, 0x7FF655700060
	bool Blueprint_PredictProjectilePath_Advanced(struct UObject* WorldContextObject, struct FPredictProjectilePathParams PredictParams, struct FPredictProjectilePathResult PredictResult); // Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_Advanced // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x121, 0x7FF6556FFE40
	struct AActor* BeginSpawningActorFromClass(struct UObject* WorldContextObject, class AActor* ActorClass, struct FTransform SpawnTransform, bool bNoCollisionFail, struct AActor* Owner); // Function Engine.GameplayStatics.BeginSpawningActorFromClass // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x58, 0x7FF6556FF950
	struct AActor* BeginSpawningActorFromBlueprint(struct UObject* WorldContextObject, struct UBlueprint* Blueprint, struct FTransform SpawnTransform, bool bNoCollisionFail); // Function Engine.GameplayStatics.BeginSpawningActorFromBlueprint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF6556FF7B0
	struct AActor* BeginDeferredActorSpawnFromClass(struct UObject* WorldContextObject, class AActor* ActorClass, struct FTransform SpawnTransform, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, struct AActor* Owner); // Function Engine.GameplayStatics.BeginDeferredActorSpawnFromClass // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x58, 0x7FF6556FF5C0
	bool AreSubtitlesEnabled(); // Function Engine.GameplayStatics.AreSubtitlesEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6556FF590
	bool AreAnyListenersWithinRange(struct UObject* WorldContextObject, struct FVector Location, float MaximumRange); // Function Engine.GameplayStatics.AreAnyListenersWithinRange // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x19, 0x7FF6556FF480
	bool ApplyRadialDamageWithFalloff(struct UObject* WorldContextObject, float BaseDamage, float MinimumDamage, struct FVector Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UDamageType* DamageTypeClass, struct TArray<struct AActor*> IgnoreActors, struct AActor* DamageCauser, struct AController* InstigatedByController, enum class ECollisionChannel DamagePreventionChannel); // Function Engine.GameplayStatics.ApplyRadialDamageWithFalloff // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x52, 0x7FF6556FF110
	bool ApplyRadialDamage(struct UObject* WorldContextObject, float BaseDamage, struct FVector Origin, float DamageRadius, class UDamageType* DamageTypeClass, struct TArray<struct AActor*> IgnoreActors, struct AActor* DamageCauser, struct AController* InstigatedByController, bool bDoFullDamage, enum class ECollisionChannel DamagePreventionChannel); // Function Engine.GameplayStatics.ApplyRadialDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x4B, 0x7FF6556FEE20
	float ApplyPointDamage(struct AActor* DamagedActor, float BaseDamage, struct FVector HitFromDirection, struct FHitResult HitInfo, struct AController* EventInstigator, struct AActor* DamageCauser, class UDamageType* DamageTypeClass); // Function Engine.GameplayStatics.ApplyPointDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xBC, 0x7FF6556FEBE0
	float ApplyDamage(struct AActor* DamagedActor, float BaseDamage, struct AController* EventInstigator, struct AActor* DamageCauser, class UDamageType* DamageTypeClass); // Function Engine.GameplayStatics.ApplyDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // Param Size : 0x2C, 0x7FF6556FEA60
	void ActivateReverbEffect(struct UObject* WorldContextObject, struct UReverbEffect* ReverbEffect, struct FName TagName, float Priority, float Volume, float FadeTime); // Function Engine.GameplayStatics.ActivateReverbEffect // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x24, 0x7FF6556FE8B0
};

// Class Engine.GameSession
// Size : 0x238 (Inherited : 0x220)
struct AGameSession : AInfo {
	int32_t MaxSpectators; // 0x220(0x4)
	int32_t MaxPlayers; // 0x224(0x4)
	int32_t MaxPartySize; // 0x228(0x4)
	enum class None MaxSplitscreensPerConnection; // 0x22C(0x1)
	bool bRequiresPushToTalk; // 0x22D(0x1)
	unsigned char UnknownData_22E[0x0002]; // 0x22E(0x2)
	struct FName SessionName; // 0x230(0x8)
};

// Class Engine.GameUserSettings
// Size : 0x120 (Inherited : 0x28)
struct UGameUserSettings : UObject {
	bool bUseVSync; // 0x28(0x1)
	bool bUseDynamicResolution; // 0x29(0x1)
	unsigned char UnknownData_2A[0x0056]; // 0x2A(0x56)
	uint32_t ResolutionSizeX; // 0x80(0x4)
	uint32_t ResolutionSizeY; // 0x84(0x4)
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88(0x4)
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8C(0x4)
	int32_t WindowPosX; // 0x90(0x4)
	int32_t WindowPosY; // 0x94(0x4)
	int32_t FullscreenMode; // 0x98(0x4)
	int32_t LastConfirmedFullscreenMode; // 0x9C(0x4)
	int32_t PreferredFullscreenMode; // 0xA0(0x4)
	uint32_t Version; // 0xA4(0x4)
	int32_t AudioQualityLevel; // 0xA8(0x4)
	int32_t LastConfirmedAudioQualityLevel; // 0xAC(0x4)
	float FrameRateLimit; // 0xB0(0x4)
	unsigned char UnknownData_B4[0x0004]; // 0xB4(0x4)
	int32_t DesiredScreenWidth; // 0xB8(0x4)
	bool bUseDesiredScreenHeight; // 0xBC(0x1)
	unsigned char UnknownData_BD[0x0003]; // 0xBD(0x3)
	int32_t DesiredScreenHeight; // 0xC0(0x4)
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xC4(0x4)
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xC8(0x4)
	float LastRecommendedScreenWidth; // 0xCC(0x4)
	float LastRecommendedScreenHeight; // 0xD0(0x4)
	float LastCPUBenchmarkResult; // 0xD4(0x4)
	float LastGPUBenchmarkResult; // 0xD8(0x4)
	unsigned char UnknownData_DC[0x0004]; // 0xDC(0x4)
	struct TArray<float> LastCPUBenchmarkSteps; // 0xE0(0x10)
	struct TArray<float> LastGPUBenchmarkSteps; // 0xF0(0x10)
	float LastGPUBenchmarkMultiplier; // 0x100(0x4)
	bool bUseHDRDisplayOutput; // 0x104(0x1)
	unsigned char UnknownData_105[0x0003]; // 0x105(0x3)
	int32_t HDRDisplayOutputNits; // 0x108(0x4)
	unsigned char UnknownData_10C[0x0004]; // 0x10C(0x4)
	struct FMulticastInlineDelegate OnGameUserSettingsUINeedsUpdate; // 0x110(0x10)

	void ValidateSettings(); // Function Engine.GameUserSettings.ValidateSettings // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A14350
	bool SupportsHDRDisplayOutput(); // Function Engine.GameUserSettings.SupportsHDRDisplayOutput // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570D820
	void SetVSyncEnabled(bool bEnable); // Function Engine.GameUserSettings.SetVSyncEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570D690
	void SetVisualEffectQuality(int32_t Value); // Function Engine.GameUserSettings.SetVisualEffectQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D7A0
	void SetViewDistanceQuality(int32_t Value); // Function Engine.GameUserSettings.SetViewDistanceQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D720
	void SetToDefaults(); // Function Engine.GameUserSettings.SetToDefaults // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654E3DA30
	void SetTextureQuality(int32_t Value); // Function Engine.GameUserSettings.SetTextureQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D610
	void SetShadowQuality(int32_t Value); // Function Engine.GameUserSettings.SetShadowQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D590
	void SetShadingQuality(int32_t Value); // Function Engine.GameUserSettings.SetShadingQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D510
	void SetScreenResolution(struct FIntPoint Resolution); // Function Engine.GameUserSettings.SetScreenResolution // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x8, 0x7FF65570D490
	void SetResolutionScaleValueEx(float NewScaleValue); // Function Engine.GameUserSettings.SetResolutionScaleValueEx // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D410
	void SetResolutionScaleValue(int32_t NewScaleValue); // Function Engine.GameUserSettings.SetResolutionScaleValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D390
	void SetResolutionScaleNormalized(float NewScaleNormalized); // Function Engine.GameUserSettings.SetResolutionScaleNormalized // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D310
	void SetPostProcessingQuality(int32_t Value); // Function Engine.GameUserSettings.SetPostProcessingQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D290
	void SetOverallScalabilityLevel(int32_t Value); // Function Engine.GameUserSettings.SetOverallScalabilityLevel // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D200
	void SetFullscreenMode(enum class EWindowMode InFullscreenMode); // Function Engine.GameUserSettings.SetFullscreenMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570D180
	void SetFrameRateLimit(float NewLimit); // Function Engine.GameUserSettings.SetFrameRateLimit // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D100
	void SetFoliageQuality(int32_t Value); // Function Engine.GameUserSettings.SetFoliageQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570D080
	void SetDynamicResolutionEnabled(bool bEnable); // Function Engine.GameUserSettings.SetDynamicResolutionEnabled // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570CFF0
	void SetBenchmarkFallbackValues(); // Function Engine.GameUserSettings.SetBenchmarkFallbackValues // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65570CF40
	void SetAudioQualityLevel(int32_t QualityLevel); // Function Engine.GameUserSettings.SetAudioQualityLevel // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570CEC0
	void SetAntiAliasingQuality(int32_t Value); // Function Engine.GameUserSettings.SetAntiAliasingQuality // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570CE40
	void SaveSettings(); // Function Engine.GameUserSettings.SaveSettings // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E1FA0
	void RunHardwareBenchmark(int32_t WorkScale, float CPUMultiplier, float GPUMultiplier); // Function Engine.GameUserSettings.RunHardwareBenchmark // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF65570CD40
	void RevertVideoMode(); // Function Engine.GameUserSettings.RevertVideoMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65570CD20
	void ResetToCurrentSettings(); // Function Engine.GameUserSettings.ResetToCurrentSettings // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65570CD00
	void LoadSettings(bool bForceReload); // Function Engine.GameUserSettings.LoadSettings // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570CC10
	bool IsVSyncEnabled(); // Function Engine.GameUserSettings.IsVSyncEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CBE0
	bool IsVSyncDirty(); // Function Engine.GameUserSettings.IsVSyncDirty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CBB0
	bool IsScreenResolutionDirty(); // Function Engine.GameUserSettings.IsScreenResolutionDirty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CB80
	bool IsHDREnabled(); // Function Engine.GameUserSettings.IsHDREnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CB50
	bool IsFullscreenModeDirty(); // Function Engine.GameUserSettings.IsFullscreenModeDirty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CB20
	bool IsDynamicResolutionEnabled(); // Function Engine.GameUserSettings.IsDynamicResolutionEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CAF0
	bool IsDynamicResolutionDirty(); // Function Engine.GameUserSettings.IsDynamicResolutionDirty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CAC0
	bool IsDirty(); // Function Engine.GameUserSettings.IsDirty // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570CA90
	int32_t GetVisualEffectQuality(); // Function Engine.GameUserSettings.GetVisualEffectQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570CA00
	int32_t GetViewDistanceQuality(); // Function Engine.GameUserSettings.GetViewDistanceQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C9D0
	int32_t GetTextureQuality(); // Function Engine.GameUserSettings.GetTextureQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C9A0
	int32_t GetSyncInterval(); // Function Engine.GameUserSettings.GetSyncInterval // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF65570C970
	int32_t GetShadowQuality(); // Function Engine.GameUserSettings.GetShadowQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C940
	int32_t GetShadingQuality(); // Function Engine.GameUserSettings.GetShadingQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C910
	struct FIntPoint GetScreenResolution(); // Function Engine.GameUserSettings.GetScreenResolution // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF65570C890
	float GetResolutionScaleNormalized(); // Function Engine.GameUserSettings.GetResolutionScaleNormalized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C860
	void GetResolutionScaleInformationEx(float CurrentScaleNormalized, float CurrentScaleValue, float MinScaleValue, float MaxScaleValue); // Function Engine.GameUserSettings.GetResolutionScaleInformationEx // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF65570C6C0
	void GetResolutionScaleInformation(float CurrentScaleNormalized, int32_t CurrentScaleValue, int32_t MinScaleValue, int32_t MaxScaleValue); // Function Engine.GameUserSettings.GetResolutionScaleInformation // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF65570C520
	float GetRecommendedResolutionScale(); // Function Engine.GameUserSettings.GetRecommendedResolutionScale // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570C4E0
	enum class EWindowMode GetPreferredFullscreenMode(); // Function Engine.GameUserSettings.GetPreferredFullscreenMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570C4B0
	int32_t GetPostProcessingQuality(); // Function Engine.GameUserSettings.GetPostProcessingQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C480
	int32_t GetOverallScalabilityLevel(); // Function Engine.GameUserSettings.GetOverallScalabilityLevel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C310
	struct FIntPoint GetLastConfirmedScreenResolution(); // Function Engine.GameUserSettings.GetLastConfirmedScreenResolution // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF65570C2D0
	enum class EWindowMode GetLastConfirmedFullscreenMode(); // Function Engine.GameUserSettings.GetLastConfirmedFullscreenMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570C2A0
	struct UGameUserSettings* GetGameUserSettings(); // Function Engine.GameUserSettings.GetGameUserSettings // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65570C270
	enum class EWindowMode GetFullscreenMode(); // Function Engine.GameUserSettings.GetFullscreenMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65570C240
	float GetFrameRateLimit(); // Function Engine.GameUserSettings.GetFrameRateLimit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C210
	int32_t GetFramePace(); // Function Engine.GameUserSettings.GetFramePace // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF65570C1E0
	int32_t GetFoliageQuality(); // Function Engine.GameUserSettings.GetFoliageQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C1B0
	struct FIntPoint GetDesktopResolution(); // Function Engine.GameUserSettings.GetDesktopResolution // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF65570C170
	struct FIntPoint GetDefaultWindowPosition(); // Function Engine.GameUserSettings.GetDefaultWindowPosition // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x8, 0x7FF65570C130
	enum class EWindowMode GetDefaultWindowMode(); // Function Engine.GameUserSettings.GetDefaultWindowMode // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570C100
	float GetDefaultResolutionScale(); // Function Engine.GameUserSettings.GetDefaultResolutionScale // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65570C0C0
	struct FIntPoint GetDefaultResolution(); // Function Engine.GameUserSettings.GetDefaultResolution // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x8, 0x7FF65570C080
	int32_t GetCurrentHDRDisplayNits(); // Function Engine.GameUserSettings.GetCurrentHDRDisplayNits // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65570C050
	int32_t GetAudioQualityLevel(); // Function Engine.GameUserSettings.GetAudioQualityLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF654CB4EF0
	int32_t GetAntiAliasingQuality(); // Function Engine.GameUserSettings.GetAntiAliasingQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF65334AC60
	void EnableHDRDisplayOutput(bool bEnable, int32_t DisplayNits); // Function Engine.GameUserSettings.EnableHDRDisplayOutput // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65570BF90
	void ConfirmVideoMode(); // Function Engine.GameUserSettings.ConfirmVideoMode // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A144B0
	void ApplySettings(bool bCheckForCommandLineOverrides); // Function Engine.GameUserSettings.ApplySettings // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570BF00
	void ApplyResolutionSettings(bool bCheckForCommandLineOverrides); // Function Engine.GameUserSettings.ApplyResolutionSettings // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570BE70
	void ApplyNonResolutionSettings(); // Function Engine.GameUserSettings.ApplyNonResolutionSettings // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A144F0
	void ApplyHardwareBenchmarkResults(); // Function Engine.GameUserSettings.ApplyHardwareBenchmarkResults // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556E2000
};

// Class Engine.SpotLight
// Size : 0x238 (Inherited : 0x230)
struct ASpotLight : ALight {
	struct USpotLightComponent* SpotLightComponent; // 0x230(0x8)

	void SetOuterConeAngle(float NewOuterConeAngle); // Function Engine.SpotLight.SetOuterConeAngle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557F9180
	void SetInnerConeAngle(float NewInnerConeAngle); // Function Engine.SpotLight.SetInnerConeAngle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557F9080
};

// Class Engine.GeneratedMeshAreaLight
// Size : 0x238 (Inherited : 0x238)
struct AGeneratedMeshAreaLight : ASpotLight {
};

// Class Engine.HapticFeedbackEffect_Base
// Size : 0x28 (Inherited : 0x28)
struct UHapticFeedbackEffect_Base : UObject {
};

// Class Engine.HapticFeedbackEffect_Buffer
// Size : 0x68 (Inherited : 0x28)
struct UHapticFeedbackEffect_Buffer : UHapticFeedbackEffect_Base {
	struct TArray<enum class None> Amplitudes; // 0x28(0x10)
	int32_t SampleRate; // 0x38(0x4)
	unsigned char UnknownData_3C[0x002C]; // 0x3C(0x2C)
};

// Class Engine.HapticFeedbackEffect_Curve
// Size : 0x138 (Inherited : 0x28)
struct UHapticFeedbackEffect_Curve : UHapticFeedbackEffect_Base {
	struct FHapticFeedbackDetails_Curve HapticDetails; // 0x28(0x110)
};

// Class Engine.HapticFeedbackEffect_SoundWave
// Size : 0x60 (Inherited : 0x28)
struct UHapticFeedbackEffect_SoundWave : UHapticFeedbackEffect_Base {
	struct USoundWave* SoundWave; // 0x28(0x8)
	unsigned char UnknownData_30[0x0030]; // 0x30(0x30)
};

// Class Engine.HealthSnapshotBlueprintLibrary
// Size : 0x28 (Inherited : 0x28)
struct UHealthSnapshotBlueprintLibrary : UBlueprintFunctionLibrary {

	void StopPerformanceSnapshots(); // Function Engine.HealthSnapshotBlueprintLibrary.StopPerformanceSnapshots // (Final|Exec|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655712940
	void StartPerformanceSnapshots(); // Function Engine.HealthSnapshotBlueprintLibrary.StartPerformanceSnapshots // (Final|Exec|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655712920
	void LogPerformanceSnapshot(struct FString SnapshotTitle, bool bResetStats); // Function Engine.HealthSnapshotBlueprintLibrary.LogPerformanceSnapshot // (Final|Exec|Native|Static|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF655711B50
};

// Class Engine.HLODProxy
// Size : 0x38 (Inherited : 0x28)
struct UHLODProxy : UObject {
	struct TArray<struct FHLODProxyMesh> ProxyMeshes; // 0x28(0x10)
};

// Class Engine.ImportanceSamplingLibrary
// Size : 0x28 (Inherited : 0x28)
struct UImportanceSamplingLibrary : UBlueprintFunctionLibrary {

	float RandomSobolFloat(int32_t Index, int32_t Dimension, float Seed); // Function Engine.ImportanceSamplingLibrary.RandomSobolFloat // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557124E0
	struct FVector RandomSobolCell3D(int32_t Index, int32_t NumCells, struct FVector Cell, struct FVector Seed); // Function Engine.ImportanceSamplingLibrary.RandomSobolCell3D // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF655712350
	struct FVector2D RandomSobolCell2D(int32_t Index, int32_t NumCells, struct FVector2D Cell, struct FVector2D Seed); // Function Engine.ImportanceSamplingLibrary.RandomSobolCell2D // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655712210
	float NextSobolFloat(int32_t Index, int32_t Dimension, float PreviousValue); // Function Engine.ImportanceSamplingLibrary.NextSobolFloat // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655712060
	struct FVector NextSobolCell3D(int32_t Index, int32_t NumCells, struct FVector PreviousValue); // Function Engine.ImportanceSamplingLibrary.NextSobolCell3D // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655711F40
	struct FVector2D NextSobolCell2D(int32_t Index, int32_t NumCells, struct FVector2D PreviousValue); // Function Engine.ImportanceSamplingLibrary.NextSobolCell2D // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655711E40
	struct FImportanceTexture MakeImportanceTexture(struct UTexture2D* Texture, enum class EImportanceWeight WeightingFunc); // Function Engine.ImportanceSamplingLibrary.MakeImportanceTexture // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x60, 0x7FF655711C70
	void ImportanceSample(struct FImportanceTexture Texture, struct FVector2D Rand, int32_t Samples, float Intensity, struct FVector2D SamplePosition, struct FLinearColor SampleColor, float SampleIntensity, float SampleSize); // Function Engine.ImportanceSamplingLibrary.ImportanceSample // (Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x80, 0x7FF655711860
	void BreakImportanceTexture(struct FImportanceTexture ImportanceTexture, struct UTexture2D* Texture, enum class EImportanceWeight WeightingFunc); // Function Engine.ImportanceSamplingLibrary.BreakImportanceTexture // (Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x59, 0x7FF65570FDA0
};

// Class Engine.ImportantToggleSettingInterface
// Size : 0x28 (Inherited : 0x28)
struct UImportantToggleSettingInterface : UInterface {
};

// Class Engine.InGameAdManager
// Size : 0x60 (Inherited : 0x38)
struct UInGameAdManager : UPlatformInterfaceBase {
	unsigned char bShouldPauseWhileAdOpen : 1; // 0x38(0x1)
	unsigned char UnknownData_38_1 : 7; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
	struct TArray<struct FDelegate> ClickedBannerDelegates; // 0x40(0x10)
	struct TArray<struct FDelegate> ClosedAdDelegates; // 0x50(0x10)
};

// Class Engine.InheritableComponentHandler
// Size : 0x48 (Inherited : 0x28)
struct UInheritableComponentHandler : UObject {
	struct TArray<struct FComponentOverrideRecord> Records; // 0x28(0x10)
	struct TArray<struct UActorComponent*> UnnecessaryComponents; // 0x38(0x10)
};

// Class Engine.InputDelegateBinding
// Size : 0x28 (Inherited : 0x28)
struct UInputDelegateBinding : UDynamicBlueprintBinding {
};

// Class Engine.InputActionDelegateBinding
// Size : 0x38 (Inherited : 0x28)
struct UInputActionDelegateBinding : UInputDelegateBinding {
	struct TArray<struct FBlueprintInputActionDelegateBinding> InputActionDelegateBindings; // 0x28(0x10)
};

// Class Engine.InputAxisDelegateBinding
// Size : 0x38 (Inherited : 0x28)
struct UInputAxisDelegateBinding : UInputDelegateBinding {
	struct TArray<struct FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings; // 0x28(0x10)
};

// Class Engine.InputAxisKeyDelegateBinding
// Size : 0x38 (Inherited : 0x28)
struct UInputAxisKeyDelegateBinding : UInputDelegateBinding {
	struct TArray<struct FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings; // 0x28(0x10)
};

// Class Engine.InputComponent
// Size : 0x138 (Inherited : 0xB0)
struct UInputComponent : UActorComponent {
	unsigned char UnknownData_B0[0x0070]; // 0xB0(0x70)
	struct TArray<struct FCachedKeyToActionInfo> CachedKeyToActionInfo; // 0x120(0x10)
	unsigned char UnknownData_130[0x0008]; // 0x130(0x8)

	bool WasControllerKeyJustReleased(struct FKey Key); // Function Engine.InputComponent.WasControllerKeyJustReleased // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x19, 0x7FF655717900
	bool WasControllerKeyJustPressed(struct FKey Key); // Function Engine.InputComponent.WasControllerKeyJustPressed // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x19, 0x7FF655717900
	bool IsControllerKeyDown(struct FKey Key); // Function Engine.InputComponent.IsControllerKeyDown // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x19, 0x7FF655717900
	void GetTouchState(int32_t FingerIndex, float LocationX, float LocationY, bool bIsCurrentlyPressed); // Function Engine.InputComponent.GetTouchState // (Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xD, 0x7FF655717780
	struct FVector GetControllerVectorKeyState(struct FKey Key); // Function Engine.InputComponent.GetControllerVectorKeyState // (Final|Native|Private|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x24, 0x7FF655717220
	void GetControllerMouseDelta(float DeltaX, float DeltaY); // Function Engine.InputComponent.GetControllerMouseDelta // (Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF655717140
	float GetControllerKeyTimeDown(struct FKey Key); // Function Engine.InputComponent.GetControllerKeyTimeDown // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF655716F30
	void GetControllerAnalogStickState(enum class EControllerAnalogStick WhichStick, float StickX, float StickY); // Function Engine.InputComponent.GetControllerAnalogStickState // (Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF655717020
	float GetControllerAnalogKeyState(struct FKey Key); // Function Engine.InputComponent.GetControllerAnalogKeyState // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF655716F30
};

// Class Engine.InputKeyDelegateBinding
// Size : 0x38 (Inherited : 0x28)
struct UInputKeyDelegateBinding : UInputDelegateBinding {
	struct TArray<struct FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings; // 0x28(0x10)
};

// Class Engine.InputSettings
// Size : 0xF0 (Inherited : 0x28)
struct UInputSettings : UObject {
	struct TArray<struct FInputAxisConfigEntry> AxisConfig; // 0x28(0x10)
	unsigned char bAltEnterTogglesFullscreen : 1; // 0x38(0x1)
	unsigned char bF11TogglesFullscreen : 1; // 0x38(0x1)
	unsigned char bUseMouseForTouch : 1; // 0x38(0x1)
	unsigned char bEnableMouseSmoothing : 1; // 0x38(0x1)
	unsigned char bEnableFOVScaling : 1; // 0x38(0x1)
	unsigned char bCaptureMouseOnLaunch : 1; // 0x38(0x1)
	unsigned char bDefaultViewportMouseLock : 1; // 0x38(0x1)
	unsigned char bAlwaysShowTouchInterface : 1; // 0x38(0x1)
	unsigned char bShowConsoleOnFourFingerTap : 1; // 0x39(0x1)
	unsigned char bEnableGestureRecognizer : 1; // 0x39(0x1)
	unsigned char UnknownData_39_2 : 6; // 0x39(0x1)
	bool bUseAutocorrect; // 0x3A(0x1)
	unsigned char UnknownData_3B[0x0005]; // 0x3B(0x5)
	struct TArray<struct FString> ExcludedAutocorrectOS; // 0x40(0x10)
	struct TArray<struct FString> ExcludedAutocorrectCultures; // 0x50(0x10)
	struct TArray<struct FString> ExcludedAutocorrectDeviceModels; // 0x60(0x10)
	enum class EMouseCaptureMode DefaultViewportMouseCaptureMode; // 0x70(0x1)
	enum class EMouseLockMode DefaultViewportMouseLockMode; // 0x71(0x1)
	unsigned char UnknownData_72[0x0002]; // 0x72(0x2)
	float FOVScale; // 0x74(0x4)
	float DoubleClickTime; // 0x78(0x4)
	unsigned char UnknownData_7C[0x0004]; // 0x7C(0x4)
	struct TArray<struct FInputActionKeyMapping> ActionMappings; // 0x80(0x10)
	struct TArray<struct FInputAxisKeyMapping> AxisMappings; // 0x90(0x10)
	struct TArray<struct FInputActionSpeechMapping> SpeechMappings; // 0xA0(0x10)
	struct FSoftObjectPath DefaultTouchInterface; // 0xB0(0x18)
	struct FKey ConsoleKey; // 0xC8(0x18)
	struct TArray<struct FKey> ConsoleKeys; // 0xE0(0x10)

	void SaveKeyMappings(); // Function Engine.InputSettings.SaveKeyMappings // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655717D70
	void RemoveAxisMapping(struct FInputAxisKeyMapping KeyMapping, bool bForceRebuildKeymaps); // Function Engine.InputSettings.RemoveAxisMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x29, 0x7FF655717B60
	void RemoveActionMapping(struct FInputActionKeyMapping KeyMapping, bool bForceRebuildKeymaps); // Function Engine.InputSettings.RemoveActionMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x29, 0x7FF6557179F0
	struct UInputSettings* GetInputSettings(); // Function Engine.InputSettings.GetInputSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655717320
	void GetAxisNames(struct TArray<struct FName> AxisNames); // Function Engine.InputSettings.GetAxisNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF655716E80
	void GetAxisMappingByName(struct FName InAxisName, struct TArray<struct FInputAxisKeyMapping> OutMappings); // Function Engine.InputSettings.GetAxisMappingByName // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF655716D50
	void GetActionNames(struct TArray<struct FName> ActionNames); // Function Engine.InputSettings.GetActionNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF655716CA0
	void GetActionMappingByName(struct FName InActionName, struct TArray<struct FInputActionKeyMapping> OutMappings); // Function Engine.InputSettings.GetActionMappingByName // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF655716B70
	void ForceRebuildKeymaps(); // Function Engine.InputSettings.ForceRebuildKeymaps // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655716B50
	void AddAxisMapping(struct FInputAxisKeyMapping KeyMapping, bool bForceRebuildKeymaps); // Function Engine.InputSettings.AddAxisMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x29, 0x7FF6557163E0
	void AddActionMapping(struct FInputActionKeyMapping KeyMapping, bool bForceRebuildKeymaps); // Function Engine.InputSettings.AddActionMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x29, 0x7FF655716270
};

// Class Engine.InputTouchDelegateBinding
// Size : 0x38 (Inherited : 0x28)
struct UInputTouchDelegateBinding : UInputDelegateBinding {
	struct TArray<struct FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings; // 0x28(0x10)
};

// Class Engine.InputVectorAxisDelegateBinding
// Size : 0x38 (Inherited : 0x38)
struct UInputVectorAxisDelegateBinding : UInputAxisKeyDelegateBinding {
};

// Class Engine.Interface_AssetUserData
// Size : 0x28 (Inherited : 0x28)
struct UInterface_AssetUserData : UInterface {
};

// Class Engine.Interface_CollisionDataProvider
// Size : 0x28 (Inherited : 0x28)
struct UInterface_CollisionDataProvider : UInterface {
};

// Class Engine.Interface_PostProcessVolume
// Size : 0x28 (Inherited : 0x28)
struct UInterface_PostProcessVolume : UInterface {
};

// Class Engine.Interface_PreviewMeshProvider
// Size : 0x28 (Inherited : 0x28)
struct UInterface_PreviewMeshProvider : UInterface {
};

// Class Engine.InterpCurveEdSetup
// Size : 0x40 (Inherited : 0x28)
struct UInterpCurveEdSetup : UObject {
	struct TArray<struct FCurveEdTab> Tabs; // 0x28(0x10)
	int32_t ActiveTab; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.InterpData
// Size : 0x70 (Inherited : 0x28)
struct UInterpData : UObject {
	float InterpLength; // 0x28(0x4)
	float PathBuildTime; // 0x2C(0x4)
	struct TArray<struct UInterpGroup*> InterpGroups; // 0x30(0x10)
	struct UInterpCurveEdSetup* CurveEdSetup; // 0x40(0x8)
	float EdSectionStart; // 0x48(0x4)
	float EdSectionEnd; // 0x4C(0x4)
	unsigned char bShouldBakeAndPrune : 1; // 0x50(0x1)
	unsigned char UnknownData_50_1 : 7; // 0x50(0x1)
	unsigned char UnknownData_51[0x0007]; // 0x51(0x7)
	struct UInterpGroupDirector* CachedDirectorGroup; // 0x58(0x8)
	struct TArray<struct FName> AllEventNames; // 0x60(0x10)
};

// Class Engine.InterpFilter
// Size : 0x38 (Inherited : 0x28)
struct UInterpFilter : UObject {
	struct FString Caption; // 0x28(0x10)
};

// Class Engine.InterpFilter_Classes
// Size : 0x38 (Inherited : 0x38)
struct UInterpFilter_Classes : UInterpFilter {
};

// Class Engine.InterpFilter_Custom
// Size : 0x38 (Inherited : 0x38)
struct UInterpFilter_Custom : UInterpFilter {
};

// Class Engine.InterpGroup
// Size : 0x50 (Inherited : 0x28)
struct UInterpGroup : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct TArray<struct UInterpTrack*> InterpTracks; // 0x30(0x10)
	struct FName GroupName; // 0x40(0x8)
	struct FColor GroupColor; // 0x48(0x4)
	unsigned char bCollapsed : 1; // 0x4C(0x1)
	unsigned char bVisible : 1; // 0x4C(0x1)
	unsigned char bIsFolder : 1; // 0x4C(0x1)
	unsigned char bIsParented : 1; // 0x4C(0x1)
	unsigned char bIsSelected : 1; // 0x4C(0x1)
	unsigned char UnknownData_4C_5 : 3; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
};

// Class Engine.InterpGroupCamera
// Size : 0x60 (Inherited : 0x50)
struct UInterpGroupCamera : UInterpGroup {
	struct UCameraAnim* CameraAnimInst; // 0x50(0x8)
	float CompressTolerance; // 0x58(0x4)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
};

// Class Engine.InterpGroupDirector
// Size : 0x50 (Inherited : 0x50)
struct UInterpGroupDirector : UInterpGroup {
};

// Class Engine.InterpGroupInst
// Size : 0x48 (Inherited : 0x28)
struct UInterpGroupInst : UObject {
	struct UInterpGroup* Group; // 0x28(0x8)
	struct AActor* GroupActor; // 0x30(0x8)
	struct TArray<struct UInterpTrackInst*> TrackInst; // 0x38(0x10)
};

// Class Engine.InterpGroupInstCamera
// Size : 0x48 (Inherited : 0x48)
struct UInterpGroupInstCamera : UInterpGroupInst {
};

// Class Engine.InterpGroupInstDirector
// Size : 0x48 (Inherited : 0x48)
struct UInterpGroupInstDirector : UInterpGroupInst {
};

// Class Engine.InterpToMovementComponent
// Size : 0x190 (Inherited : 0xF0)
struct UInterpToMovementComponent : UMovementComponent {
	float Duration; // 0xF0(0x4)
	unsigned char bPauseOnImpact : 1; // 0xF4(0x1)
	unsigned char UnknownData_F4_1 : 7; // 0xF4(0x1)
	unsigned char UnknownData_F5[0x0003]; // 0xF5(0x3)
	bool bSweep; // 0xF8(0x1)
	enum class ETeleportType TeleportType; // 0xF9(0x1)
	enum class EInterpToBehaviourType BehaviourType; // 0xFA(0x1)
	bool bCheckIfStillInWorld; // 0xFB(0x1)
	unsigned char bForceSubStepping : 1; // 0xFC(0x1)
	unsigned char UnknownData_FC_1 : 7; // 0xFC(0x1)
	unsigned char UnknownData_FD[0x0003]; // 0xFD(0x3)
	struct FMulticastInlineDelegate OnInterpToReverse; // 0x100(0x10)
	struct FMulticastInlineDelegate OnInterpToStop; // 0x110(0x10)
	struct FMulticastInlineDelegate OnWaitBeginDelegate; // 0x120(0x10)
	struct FMulticastInlineDelegate OnWaitEndDelegate; // 0x130(0x10)
	struct FMulticastInlineDelegate OnResetDelegate; // 0x140(0x10)
	float MaxSimulationTimeStep; // 0x150(0x4)
	int32_t MaxSimulationIterations; // 0x154(0x4)
	struct TArray<struct FInterpControlPoint> ControlPoints; // 0x158(0x10)
	unsigned char UnknownData_168[0x0028]; // 0x168(0x28)

	void StopSimulating(struct FHitResult HitResult); // Function Engine.InterpToMovementComponent.StopSimulating // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x88, 0x7FF65571B500
	void RestartMovement(float InitialDirection); // Function Engine.InterpToMovementComponent.RestartMovement // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65571B480
	void OnInterpToWaitEndDelegate__DelegateSignature(struct FHitResult ImpactResult, float Time); // DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitEndDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // Param Size : 0x8C, 0x7FF653FAFDF0
	void OnInterpToWaitBeginDelegate__DelegateSignature(struct FHitResult ImpactResult, float Time); // DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitBeginDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // Param Size : 0x8C, 0x7FF653FAFDF0
	void OnInterpToStopDelegate__DelegateSignature(struct FHitResult ImpactResult, float Time); // DelegateFunction Engine.InterpToMovementComponent.OnInterpToStopDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // Param Size : 0x8C, 0x7FF653FAFDF0
	void OnInterpToReverseDelegate__DelegateSignature(struct FHitResult ImpactResult, float Time); // DelegateFunction Engine.InterpToMovementComponent.OnInterpToReverseDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // Param Size : 0x8C, 0x7FF653FAFDF0
	void OnInterpToResetDelegate__DelegateSignature(struct FHitResult ImpactResult, float Time); // DelegateFunction Engine.InterpToMovementComponent.OnInterpToResetDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // Param Size : 0x8C, 0x7FF653FAFDF0
	void FinaliseControlPoints(); // Function Engine.InterpToMovementComponent.FinaliseControlPoints // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65571B460
};

// Class Engine.InterpTrackAnimControl
// Size : 0xB0 (Inherited : 0x90)
struct UInterpTrackAnimControl : UInterpTrackFloatBase {
	struct FName SlotName; // 0x90(0x8)
	struct TArray<struct FAnimControlTrackKey> AnimSeqs; // 0x98(0x10)
	unsigned char bSkipAnimNotifiers : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_1 : 7; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0007]; // 0xA9(0x7)
};

// Class Engine.InterpTrackAudioMaster
// Size : 0x90 (Inherited : 0x90)
struct UInterpTrackAudioMaster : UInterpTrackVectorBase {
};

// Class Engine.InterpTrackBoolProp
// Size : 0x88 (Inherited : 0x70)
struct UInterpTrackBoolProp : UInterpTrack {
	struct TArray<struct FBoolTrackKey> BoolTrack; // 0x70(0x10)
	struct FName PropertyName; // 0x80(0x8)
};

// Class Engine.InterpTrackColorProp
// Size : 0x98 (Inherited : 0x90)
struct UInterpTrackColorProp : UInterpTrackVectorBase {
	struct FName PropertyName; // 0x90(0x8)
};

// Class Engine.InterpTrackColorScale
// Size : 0x90 (Inherited : 0x90)
struct UInterpTrackColorScale : UInterpTrackVectorBase {
};

// Class Engine.InterpTrackDirector
// Size : 0x88 (Inherited : 0x70)
struct UInterpTrackDirector : UInterpTrack {
	struct TArray<struct FDirectorTrackCut> CutTrack; // 0x70(0x10)
	unsigned char bSimulateCameraCutsOnClients : 1; // 0x80(0x1)
	unsigned char UnknownData_80_1 : 7; // 0x80(0x1)
	unsigned char UnknownData_81[0x0007]; // 0x81(0x7)
};

// Class Engine.InterpTrackEvent
// Size : 0x88 (Inherited : 0x70)
struct UInterpTrackEvent : UInterpTrack {
	struct TArray<struct FEventTrackKey> EventTrack; // 0x70(0x10)
	unsigned char bFireEventsWhenForwards : 1; // 0x80(0x1)
	unsigned char bFireEventsWhenBackwards : 1; // 0x80(0x1)
	unsigned char bFireEventsWhenJumpingForwards : 1; // 0x80(0x1)
	unsigned char bUseCustomEventName : 1; // 0x80(0x1)
	unsigned char UnknownData_80_4 : 4; // 0x80(0x1)
	unsigned char UnknownData_81[0x0007]; // 0x81(0x7)
};

// Class Engine.InterpTrackFade
// Size : 0xA8 (Inherited : 0x90)
struct UInterpTrackFade : UInterpTrackFloatBase {
	unsigned char bPersistFade : 1; // 0x90(0x1)
	unsigned char bFadeAudio : 1; // 0x90(0x1)
	unsigned char UnknownData_90_2 : 6; // 0x90(0x1)
	unsigned char UnknownData_91[0x0003]; // 0x91(0x3)
	struct FLinearColor FadeColor; // 0x94(0x10)
	unsigned char UnknownData_A4[0x0004]; // 0xA4(0x4)
};

// Class Engine.InterpTrackFloatAnimBPParam
// Size : 0xB0 (Inherited : 0x90)
struct UInterpTrackFloatAnimBPParam : UInterpTrackFloatBase {
	class UObject* AnimBlueprintClass; // 0x90(0x8)
	class UAnimInstance* AnimClass; // 0x98(0x8)
	struct FName ParamName; // 0xA0(0x8)
	unsigned char UnknownData_A8[0x0008]; // 0xA8(0x8)
};

// Class Engine.InterpTrackFloatMaterialParam
// Size : 0xA8 (Inherited : 0x90)
struct UInterpTrackFloatMaterialParam : UInterpTrackFloatBase {
	struct TArray<struct UMaterialInterface*> TargetMaterials; // 0x90(0x10)
	struct FName ParamName; // 0xA0(0x8)
};

// Class Engine.InterpTrackFloatParticleParam
// Size : 0x98 (Inherited : 0x90)
struct UInterpTrackFloatParticleParam : UInterpTrackFloatBase {
	struct FName ParamName; // 0x90(0x8)
};

// Class Engine.InterpTrackFloatProp
// Size : 0x98 (Inherited : 0x90)
struct UInterpTrackFloatProp : UInterpTrackFloatBase {
	struct FName PropertyName; // 0x90(0x8)
};

// Class Engine.InterpTrackInstAnimControl
// Size : 0x30 (Inherited : 0x28)
struct UInterpTrackInstAnimControl : UInterpTrackInst {
	float LastUpdatePosition; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
};

// Class Engine.InterpTrackInstAudioMaster
// Size : 0x28 (Inherited : 0x28)
struct UInterpTrackInstAudioMaster : UInterpTrackInst {
};

// Class Engine.InterpTrackInstProperty
// Size : 0x50 (Inherited : 0x28)
struct UInterpTrackInstProperty : UInterpTrackInst {
	FieldPathProperty InterpProperty; // 0x28(0x20)
	struct UObject* PropertyOuterObjectInst; // 0x48(0x8)
};

// Class Engine.InterpTrackInstBoolProp
// Size : 0x68 (Inherited : 0x50)
struct UInterpTrackInstBoolProp : UInterpTrackInstProperty {
	unsigned char UnknownData_50[0x0010]; // 0x50(0x10)
	bool ResetBool; // 0x60(0x1)
	unsigned char UnknownData_61[0x0007]; // 0x61(0x7)
};

// Class Engine.InterpTrackInstColorProp
// Size : 0x60 (Inherited : 0x50)
struct UInterpTrackInstColorProp : UInterpTrackInstProperty {
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct FColor ResetColor; // 0x58(0x4)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
};

// Class Engine.InterpTrackInstColorScale
// Size : 0x28 (Inherited : 0x28)
struct UInterpTrackInstColorScale : UInterpTrackInst {
};

// Class Engine.InterpTrackInstDirector
// Size : 0x30 (Inherited : 0x28)
struct UInterpTrackInstDirector : UInterpTrackInst {
	struct AActor* OldViewTarget; // 0x28(0x8)
};

// Class Engine.InterpTrackInstEvent
// Size : 0x30 (Inherited : 0x28)
struct UInterpTrackInstEvent : UInterpTrackInst {
	float LastUpdatePosition; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
};

// Class Engine.InterpTrackInstFade
// Size : 0x28 (Inherited : 0x28)
struct UInterpTrackInstFade : UInterpTrackInst {
};

// Class Engine.InterpTrackInstFloatAnimBPParam
// Size : 0x40 (Inherited : 0x28)
struct UInterpTrackInstFloatAnimBPParam : UInterpTrackInst {
	struct UAnimInstance* AnimScriptInstance; // 0x28(0x8)
	float ResetFloat; // 0x30(0x4)
	unsigned char UnknownData_34[0x000C]; // 0x34(0xC)
};

// Class Engine.InterpTrackInstFloatMaterialParam
// Size : 0x60 (Inherited : 0x28)
struct UInterpTrackInstFloatMaterialParam : UInterpTrackInst {
	struct TArray<struct UMaterialInstanceDynamic*> MaterialInstances; // 0x28(0x10)
	struct TArray<float> ResetFloats; // 0x38(0x10)
	struct TArray<struct FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48(0x10)
	struct UInterpTrackFloatMaterialParam* InstancedTrack; // 0x58(0x8)
};

// Class Engine.InterpTrackInstFloatParticleParam
// Size : 0x30 (Inherited : 0x28)
struct UInterpTrackInstFloatParticleParam : UInterpTrackInst {
	float ResetFloat; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
};

// Class Engine.InterpTrackInstFloatProp
// Size : 0x60 (Inherited : 0x50)
struct UInterpTrackInstFloatProp : UInterpTrackInstProperty {
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	float ResetFloat; // 0x58(0x4)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
};

// Class Engine.InterpTrackInstLinearColorProp
// Size : 0x68 (Inherited : 0x50)
struct UInterpTrackInstLinearColorProp : UInterpTrackInstProperty {
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct FLinearColor ResetColor; // 0x58(0x10)
};

// Class Engine.InterpTrackInstMove
// Size : 0x40 (Inherited : 0x28)
struct UInterpTrackInstMove : UInterpTrackInst {
	struct FVector ResetLocation; // 0x28(0xC)
	struct FRotator ResetRotation; // 0x34(0xC)
};

// Class Engine.InterpTrackInstParticleReplay
// Size : 0x30 (Inherited : 0x28)
struct UInterpTrackInstParticleReplay : UInterpTrackInst {
	float LastUpdatePosition; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
};

// Class Engine.InterpTrackInstSlomo
// Size : 0x30 (Inherited : 0x28)
struct UInterpTrackInstSlomo : UInterpTrackInst {
	float OldTimeDilation; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
};

// Class Engine.InterpTrackInstSound
// Size : 0x38 (Inherited : 0x28)
struct UInterpTrackInstSound : UInterpTrackInst {
	float LastUpdatePosition; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
	struct UAudioComponent* PlayAudioComp; // 0x30(0x8)
};

// Class Engine.InterpTrackInstToggle
// Size : 0x38 (Inherited : 0x28)
struct UInterpTrackInstToggle : UInterpTrackInst {
	enum class ETrackToggleAction Action; // 0x28(0x1)
	unsigned char UnknownData_29[0x0003]; // 0x29(0x3)
	float LastUpdatePosition; // 0x2C(0x4)
	unsigned char bSavedActiveState : 1; // 0x30(0x1)
	unsigned char UnknownData_30_1 : 7; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.InterpTrackInstVectorMaterialParam
// Size : 0x60 (Inherited : 0x28)
struct UInterpTrackInstVectorMaterialParam : UInterpTrackInst {
	struct TArray<struct UMaterialInstanceDynamic*> MaterialInstances; // 0x28(0x10)
	struct TArray<struct FVector> ResetVectors; // 0x38(0x10)
	struct TArray<struct FPrimitiveMaterialRef> PrimitiveMaterialRefs; // 0x48(0x10)
	struct UInterpTrackVectorMaterialParam* InstancedTrack; // 0x58(0x8)
};

// Class Engine.InterpTrackInstVectorProp
// Size : 0x68 (Inherited : 0x50)
struct UInterpTrackInstVectorProp : UInterpTrackInstProperty {
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct FVector ResetVector; // 0x58(0xC)
	unsigned char UnknownData_64[0x0004]; // 0x64(0x4)
};

// Class Engine.InterpTrackInstVisibility
// Size : 0x30 (Inherited : 0x28)
struct UInterpTrackInstVisibility : UInterpTrackInst {
	enum class EVisibilityTrackAction Action; // 0x28(0x1)
	unsigned char UnknownData_29[0x0003]; // 0x29(0x3)
	float LastUpdatePosition; // 0x2C(0x4)
};

// Class Engine.InterpTrackLinearColorBase
// Size : 0x90 (Inherited : 0x70)
struct UInterpTrackLinearColorBase : UInterpTrack {
	struct FInterpCurveLinearColor LinearColorTrack; // 0x70(0x18)
	float CurveTension; // 0x88(0x4)
	unsigned char UnknownData_8C[0x0004]; // 0x8C(0x4)
};

// Class Engine.InterpTrackLinearColorProp
// Size : 0x98 (Inherited : 0x90)
struct UInterpTrackLinearColorProp : UInterpTrackLinearColorBase {
	struct FName PropertyName; // 0x90(0x8)
};

// Class Engine.InterpTrackMove
// Size : 0xC8 (Inherited : 0x70)
struct UInterpTrackMove : UInterpTrack {
	struct FInterpCurveVector PosTrack; // 0x70(0x18)
	struct FInterpCurveVector EulerTrack; // 0x88(0x18)
	struct FInterpLookupTrack LookupTrack; // 0xA0(0x10)
	struct FName LookAtGroupName; // 0xB0(0x8)
	float LinCurveTension; // 0xB8(0x4)
	float AngCurveTension; // 0xBC(0x4)
	unsigned char bUseQuatInterpolation : 1; // 0xC0(0x1)
	unsigned char bShowArrowAtKeys : 1; // 0xC0(0x1)
	unsigned char bDisableMovement : 1; // 0xC0(0x1)
	unsigned char bShowTranslationOnCurveEd : 1; // 0xC0(0x1)
	unsigned char bShowRotationOnCurveEd : 1; // 0xC0(0x1)
	unsigned char bHide3DTrack : 1; // 0xC0(0x1)
	unsigned char UnknownData_C0_6 : 2; // 0xC0(0x1)
	unsigned char UnknownData_C1[0x0003]; // 0xC1(0x3)
	enum class EInterpTrackMoveRotMode RotMode; // 0xC4(0x1)
	unsigned char UnknownData_C5[0x0003]; // 0xC5(0x3)
};

// Class Engine.InterpTrackMoveAxis
// Size : 0xA8 (Inherited : 0x90)
struct UInterpTrackMoveAxis : UInterpTrackFloatBase {
	enum class EInterpMoveAxis MoveAxis; // 0x90(0x1)
	unsigned char UnknownData_91[0x0007]; // 0x91(0x7)
	struct FInterpLookupTrack LookupTrack; // 0x98(0x10)
};

// Class Engine.InterpTrackParticleReplay
// Size : 0x80 (Inherited : 0x70)
struct UInterpTrackParticleReplay : UInterpTrack {
	struct TArray<struct FParticleReplayTrackKey> TrackKeys; // 0x70(0x10)
};

// Class Engine.InterpTrackSlomo
// Size : 0x90 (Inherited : 0x90)
struct UInterpTrackSlomo : UInterpTrackFloatBase {
};

// Class Engine.InterpTrackSound
// Size : 0xA8 (Inherited : 0x90)
struct UInterpTrackSound : UInterpTrackVectorBase {
	struct TArray<struct FSoundTrackKey> Sounds; // 0x90(0x10)
	unsigned char bPlayOnReverse : 1; // 0xA0(0x1)
	unsigned char bContinueSoundOnMatineeEnd : 1; // 0xA0(0x1)
	unsigned char bSuppressSubtitles : 1; // 0xA0(0x1)
	unsigned char bTreatAsDialogue : 1; // 0xA0(0x1)
	unsigned char bAttach : 1; // 0xA0(0x1)
	unsigned char UnknownData_A0_5 : 3; // 0xA0(0x1)
	unsigned char UnknownData_A1[0x0007]; // 0xA1(0x7)
};

// Class Engine.InterpTrackToggle
// Size : 0x88 (Inherited : 0x70)
struct UInterpTrackToggle : UInterpTrack {
	struct TArray<struct FToggleTrackKey> ToggleTrack; // 0x70(0x10)
	unsigned char bActivateSystemEachUpdate : 1; // 0x80(0x1)
	unsigned char bActivateWithJustAttachedFlag : 1; // 0x80(0x1)
	unsigned char bFireEventsWhenForwards : 1; // 0x80(0x1)
	unsigned char bFireEventsWhenBackwards : 1; // 0x80(0x1)
	unsigned char bFireEventsWhenJumpingForwards : 1; // 0x80(0x1)
	unsigned char UnknownData_80_5 : 3; // 0x80(0x1)
	unsigned char UnknownData_81[0x0007]; // 0x81(0x7)
};

// Class Engine.InterpTrackVectorMaterialParam
// Size : 0xA8 (Inherited : 0x90)
struct UInterpTrackVectorMaterialParam : UInterpTrackVectorBase {
	struct TArray<struct UMaterialInterface*> TargetMaterials; // 0x90(0x10)
	struct FName ParamName; // 0xA0(0x8)
};

// Class Engine.InterpTrackVectorProp
// Size : 0x98 (Inherited : 0x90)
struct UInterpTrackVectorProp : UInterpTrackVectorBase {
	struct FName PropertyName; // 0x90(0x8)
};

// Class Engine.InterpTrackVisibility
// Size : 0x88 (Inherited : 0x70)
struct UInterpTrackVisibility : UInterpTrack {
	struct TArray<struct FVisibilityTrackKey> VisibilityTrack; // 0x70(0x10)
	unsigned char bFireEventsWhenForwards : 1; // 0x80(0x1)
	unsigned char bFireEventsWhenBackwards : 1; // 0x80(0x1)
	unsigned char bFireEventsWhenJumpingForwards : 1; // 0x80(0x1)
	unsigned char UnknownData_80_3 : 5; // 0x80(0x1)
	unsigned char UnknownData_81[0x0007]; // 0x81(0x7)
};

// Class Engine.IntSerialization
// Size : 0x50 (Inherited : 0x28)
struct UIntSerialization : UObject {
	uint16 UnsignedInt16Variable; // 0x28(0x2)
	unsigned char UnknownData_2A[0x0002]; // 0x2A(0x2)
	uint32_t UnsignedInt32Variable; // 0x2C(0x4)
	uint64_t UnsignedInt64Variable; // 0x30(0x8)
	int8_t SignedInt8Variable; // 0x38(0x1)
	unsigned char UnknownData_39[0x0001]; // 0x39(0x1)
	int16_t SignedInt16Variable; // 0x3A(0x2)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
	int64_t SignedInt64Variable; // 0x40(0x8)
	enum class None UnsignedInt8Variable; // 0x48(0x1)
	unsigned char UnknownData_49[0x0003]; // 0x49(0x3)
	int32_t SignedInt32Variable; // 0x4C(0x4)
};

// Class Engine.KillZVolume
// Size : 0x268 (Inherited : 0x268)
struct AKillZVolume : APhysicsVolume {
};

// Class Engine.KismetArrayLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetArrayLibrary : UBlueprintFunctionLibrary {

	void SetArrayPropertyByName(struct UObject* Object, struct FName PropertyName, struct TArray<int32_t> Value); // Function Engine.KismetArrayLibrary.SetArrayPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF655720AF0
	void FilterArray(struct TArray<struct AActor*> TargetArray, class AActor* FilterClass, struct TArray<struct AActor*> FilteredArray); // Function Engine.KismetArrayLibrary.FilterArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x28, 0x7FF6557209A0
	void Array_Swap(struct TArray<int32_t> TargetArray, int32_t FirstIndex, int32_t SecondIndex); // Function Engine.KismetArrayLibrary.Array_Swap // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF655720870
	void Array_Shuffle(struct TArray<int32_t> TargetArray); // Function Engine.KismetArrayLibrary.Array_Shuffle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF6557207D0
	void Array_Set(struct TArray<int32_t> TargetArray, int32_t Index, int32_t Item, bool bSizeToFit); // Function Engine.KismetArrayLibrary.Array_Set // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x19, 0x7FF6557205B0
	void Array_Resize(struct TArray<int32_t> TargetArray, int32_t Size); // Function Engine.KismetArrayLibrary.Array_Resize // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x14, 0x7FF6557204C0
	bool Array_RemoveItem(struct TArray<int32_t> TargetArray, int32_t Item); // Function Engine.KismetArrayLibrary.Array_RemoveItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x15, 0x7FF655720310
	void Array_Remove(struct TArray<int32_t> TargetArray, int32_t IndexToRemove); // Function Engine.KismetArrayLibrary.Array_Remove // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x14, 0x7FF655720220
	int32_t Array_Length(struct TArray<int32_t> TargetArray); // Function Engine.KismetArrayLibrary.Array_Length // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655720170
	int32_t Array_LastIndex(struct TArray<int32_t> TargetArray); // Function Engine.KismetArrayLibrary.Array_LastIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF6557200C0
	bool Array_IsValidIndex(struct TArray<int32_t> TargetArray, int32_t IndexToTest); // Function Engine.KismetArrayLibrary.Array_IsValidIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF65571FFD0
	void Array_Insert(struct TArray<int32_t> TargetArray, int32_t NewItem, int32_t Index); // Function Engine.KismetArrayLibrary.Array_Insert // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF65571FDF0
	bool Array_Identical(struct TArray<int32_t> ArrayA, struct TArray<int32_t> ArrayB); // Function Engine.KismetArrayLibrary.Array_Identical // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF65571FCE0
	void Array_Get(struct TArray<int32_t> TargetArray, int32_t Index, int32_t Item); // Function Engine.KismetArrayLibrary.Array_Get // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65571FAF0
	int32_t Array_Find(struct TArray<int32_t> TargetArray, int32_t ItemToFind); // Function Engine.KismetArrayLibrary.Array_Find // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65571F940
	bool Array_Contains(struct TArray<int32_t> TargetArray, int32_t ItemToFind); // Function Engine.KismetArrayLibrary.Array_Contains // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF65571F780
	void Array_Clear(struct TArray<int32_t> TargetArray); // Function Engine.KismetArrayLibrary.Array_Clear // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF65571F6E0
	void Array_Append(struct TArray<int32_t> TargetArray, struct TArray<int32_t> SourceArray); // Function Engine.KismetArrayLibrary.Array_Append // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF65571F5E0
	int32_t Array_AddUnique(struct TArray<int32_t> TargetArray, int32_t NewItem); // Function Engine.KismetArrayLibrary.Array_AddUnique // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF65571F430
	int32_t Array_Add(struct TArray<int32_t> TargetArray, int32_t NewItem); // Function Engine.KismetArrayLibrary.Array_Add // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF65571F280
};

// Class Engine.KismetGuidLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetGuidLibrary : UBlueprintFunctionLibrary {

	void Parse_StringToGuid(struct FString GuidString, struct FGuid OutGuid, bool Success); // Function Engine.KismetGuidLibrary.Parse_StringToGuid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655724930
	bool NotEqual_GuidGuid(struct FGuid A, struct FGuid B); // Function Engine.KismetGuidLibrary.NotEqual_GuidGuid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655724830
	struct FGuid NewGuid(); // Function Engine.KismetGuidLibrary.NewGuid // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557247F0
	bool IsValid_Guid(struct FGuid InGuid); // Function Engine.KismetGuidLibrary.IsValid_Guid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655723CA0
	void Invalidate_Guid(struct FGuid InGuid); // Function Engine.KismetGuidLibrary.Invalidate_Guid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF655723C10
	bool EqualEqual_GuidGuid(struct FGuid A, struct FGuid B); // Function Engine.KismetGuidLibrary.EqualEqual_GuidGuid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF6557220E0
	struct FString Conv_GuidToString(struct FGuid InGuid); // Function Engine.KismetGuidLibrary.Conv_GuidToString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655721F10
};

// Class Engine.KismetInputLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetInputLibrary : UBlueprintFunctionLibrary {

	bool PointerEvent_IsTouchEvent(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_IsTouchEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x71, 0x7FF6557258A0
	bool PointerEvent_IsMouseButtonDown(struct FPointerEvent Input, struct FKey MouseButton); // Function Engine.KismetInputLibrary.PointerEvent_IsMouseButtonDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x89, 0x7FF6557256D0
	float PointerEvent_GetWheelDelta(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetWheelDelta // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x74, 0x7FF6557255A0
	int32_t PointerEvent_GetUserIndex(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetUserIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x74, 0x7FF655725470
	int32_t PointerEvent_GetTouchpadIndex(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetTouchpadIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x74, 0x7FF655725340
	struct FVector2D PointerEvent_GetScreenSpacePosition(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetScreenSpacePosition // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x78, 0x7FF655725200
	int32_t PointerEvent_GetPointerIndex(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetPointerIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x74, 0x7FF6557250D0
	struct FVector2D PointerEvent_GetLastScreenSpacePosition(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x78, 0x7FF655724F90
	enum class ESlateGesture PointerEvent_GetGestureType(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetGestureType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x71, 0x7FF655724E60
	struct FVector2D PointerEvent_GetGestureDelta(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetGestureDelta // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x78, 0x7FF655724D20
	struct FKey PointerEvent_GetEffectingButton(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetEffectingButton // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x88, 0x7FF655724BB0
	struct FVector2D PointerEvent_GetCursorDelta(struct FPointerEvent Input); // Function Engine.KismetInputLibrary.PointerEvent_GetCursorDelta // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x78, 0x7FF655724A70
	bool Key_IsVectorAxis(struct FKey Key); // Function Engine.KismetInputLibrary.Key_IsVectorAxis // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655724720
	bool Key_IsValid(struct FKey Key); // Function Engine.KismetInputLibrary.Key_IsValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655724650
	bool Key_IsMouseButton(struct FKey Key); // Function Engine.KismetInputLibrary.Key_IsMouseButton // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655724580
	bool Key_IsModifierKey(struct FKey Key); // Function Engine.KismetInputLibrary.Key_IsModifierKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF6557244B0
	bool Key_IsKeyboardKey(struct FKey Key); // Function Engine.KismetInputLibrary.Key_IsKeyboardKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF6557243E0
	bool Key_IsGamepadKey(struct FKey Key); // Function Engine.KismetInputLibrary.Key_IsGamepadKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655724310
	bool Key_IsFloatAxis(struct FKey Key); // Function Engine.KismetInputLibrary.Key_IsFloatAxis // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655724240
	enum class EUINavigation Key_GetNavigationDirectionFromKey(struct FKeyEvent InKeyEvent); // Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x39, 0x7FF655724140
	enum class EUINavigation Key_GetNavigationDirectionFromAnalog(struct FAnalogInputEvent InAnalogEvent); // Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromAnalog // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x41, 0x7FF655724030
	enum class EUINavigationAction Key_GetNavigationActionFromKey(struct FKeyEvent InKeyEvent); // Function Engine.KismetInputLibrary.Key_GetNavigationActionFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x39, 0x7FF655723F30
	enum class EUINavigationAction Key_GetNavigationAction(struct FKey InKey); // Function Engine.KismetInputLibrary.Key_GetNavigationAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723E60
	struct FText Key_GetDisplayName(struct FKey Key); // Function Engine.KismetInputLibrary.Key_GetDisplayName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655723D40
	bool InputEvent_IsShiftDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsShiftDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723B60
	bool InputEvent_IsRightShiftDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsRightShiftDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723AB0
	bool InputEvent_IsRightControlDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsRightControlDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723A00
	bool InputEvent_IsRightCommandDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsRightCommandDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723950
	bool InputEvent_IsRightAltDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsRightAltDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF6557238A0
	bool InputEvent_IsRepeat(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsRepeat // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF6557237F0
	bool InputEvent_IsLeftShiftDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsLeftShiftDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723740
	bool InputEvent_IsLeftControlDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsLeftControlDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723690
	bool InputEvent_IsLeftCommandDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsLeftCommandDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF6557235E0
	bool InputEvent_IsLeftAltDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsLeftAltDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723530
	bool InputEvent_IsControlDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsControlDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723480
	bool InputEvent_IsCommandDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsCommandDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF6557233D0
	bool InputEvent_IsAltDown(struct FInputEvent Input); // Function Engine.KismetInputLibrary.InputEvent_IsAltDown // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655723320
	struct FText InputChord_GetDisplayName(struct FInputChord Key); // Function Engine.KismetInputLibrary.InputChord_GetDisplayName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF6557231D0
	int32_t GetUserIndex(struct FKeyEvent Input); // Function Engine.KismetInputLibrary.GetUserIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x3C, 0x7FF655722FD0
	struct FKey GetKey(struct FKeyEvent Input); // Function Engine.KismetInputLibrary.GetKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655722920
	float GetAnalogValue(struct FAnalogInputEvent Input); // Function Engine.KismetInputLibrary.GetAnalogValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x44, 0x7FF655722520
	bool EqualEqual_KeyKey(struct FKey A, struct FKey B); // Function Engine.KismetInputLibrary.EqualEqual_KeyKey // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x31, 0x7FF6557223B0
	bool EqualEqual_InputChordInputChord(struct FInputChord A, struct FInputChord B); // Function Engine.KismetInputLibrary.EqualEqual_InputChordInputChord // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x41, 0x7FF6557221E0
	void CalibrateTilt(); // Function Engine.KismetInputLibrary.CalibrateTilt // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655721E30
};

// Class Engine.KismetInternationalizationLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetInternationalizationLibrary : UBlueprintFunctionLibrary {

	bool SetCurrentLocale(struct FString Culture, bool SaveToConfig); // Function Engine.KismetInternationalizationLibrary.SetCurrentLocale // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF655725D90
	bool SetCurrentLanguageAndLocale(struct FString Culture, bool SaveToConfig); // Function Engine.KismetInternationalizationLibrary.SetCurrentLanguageAndLocale // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF655725CB0
	bool SetCurrentLanguage(struct FString Culture, bool SaveToConfig); // Function Engine.KismetInternationalizationLibrary.SetCurrentLanguage // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF655725BD0
	bool SetCurrentCulture(struct FString Culture, bool SaveToConfig); // Function Engine.KismetInternationalizationLibrary.SetCurrentCulture // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF655725AF0
	bool SetCurrentAssetGroupCulture(struct FName AssetGroup, struct FString Culture, bool SaveToConfig); // Function Engine.KismetInternationalizationLibrary.SetCurrentAssetGroupCulture // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1A, 0x7FF6557259D0
	struct FString GetSuitableCulture(struct TArray<struct FString> AvailableCultures, struct FString CultureToMatch, struct FString FallbackCulture); // Function Engine.KismetInternationalizationLibrary.GetSuitableCulture // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655722E10
	struct FString GetNativeCulture(enum class ELocalizedTextSourceCategory TextCategory); // Function Engine.KismetInternationalizationLibrary.GetNativeCulture // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655722C60
	struct TArray<struct FString> GetLocalizedCultures(bool IncludeGame, bool IncludeEngine, bool IncludeEditor, bool IncludeAdditional); // Function Engine.KismetInternationalizationLibrary.GetLocalizedCultures // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655722A50
	struct FString GetCurrentLocale(); // Function Engine.KismetInternationalizationLibrary.GetCurrentLocale // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557228A0
	struct FString GetCurrentLanguage(); // Function Engine.KismetInternationalizationLibrary.GetCurrentLanguage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655722820
	struct FString GetCurrentCulture(); // Function Engine.KismetInternationalizationLibrary.GetCurrentCulture // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655722820
	struct FString GetCurrentAssetGroupCulture(struct FName AssetGroup); // Function Engine.KismetInternationalizationLibrary.GetCurrentAssetGroupCulture // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655722750
	struct FString GetCultureDisplayName(struct FString Culture, bool Localized); // Function Engine.KismetInternationalizationLibrary.GetCultureDisplayName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655722630
	void ClearCurrentAssetGroupCulture(struct FName AssetGroup, bool SaveToConfig); // Function Engine.KismetInternationalizationLibrary.ClearCurrentAssetGroupCulture // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF655721E50
};

// Class Engine.KismetMaterialLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetMaterialLibrary : UBlueprintFunctionLibrary {

	void SetVectorParameterValue(struct UObject* WorldContextObject, struct UMaterialParameterCollection* Collection, struct FName ParameterName, struct FLinearColor ParameterValue); // Function Engine.KismetMaterialLibrary.SetVectorParameterValue // (Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF655725FB0
	void SetScalarParameterValue(struct UObject* WorldContextObject, struct UMaterialParameterCollection* Collection, struct FName ParameterName, float ParameterValue); // Function Engine.KismetMaterialLibrary.SetScalarParameterValue // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x1C, 0x7FF655725E70
	struct FLinearColor GetVectorParameterValue(struct UObject* WorldContextObject, struct UMaterialParameterCollection* Collection, struct FName ParameterName); // Function Engine.KismetMaterialLibrary.GetVectorParameterValue // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF6557230D0
	float GetScalarParameterValue(struct UObject* WorldContextObject, struct UMaterialParameterCollection* Collection, struct FName ParameterName); // Function Engine.KismetMaterialLibrary.GetScalarParameterValue // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x1C, 0x7FF655722D20
	struct UMaterialInstanceDynamic* CreateDynamicMaterialInstance(struct UObject* WorldContextObject, struct UMaterialInterface* Parent, struct FName OptionalName); // Function Engine.KismetMaterialLibrary.CreateDynamicMaterialInstance // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF655721FF0
};

// Class Engine.KismetMathLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetMathLibrary : UBlueprintFunctionLibrary {

	int32_t Xor_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Xor_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655754EE0
	int64_t Xor_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Xor_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655754E20
	struct FVector WeightedMovingAverage_FVector(struct FVector CurrentSample, struct FVector PreviousSample, float Weight); // Function Engine.KismetMathLibrary.WeightedMovingAverage_FVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655754BD0
	struct FRotator WeightedMovingAverage_FRotator(struct FRotator CurrentSample, struct FRotator PreviousSample, float Weight); // Function Engine.KismetMathLibrary.WeightedMovingAverage_FRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655754A90
	float WeightedMovingAverage_Float(float CurrentSample, float PreviousSample, float Weight); // Function Engine.KismetMathLibrary.WeightedMovingAverage_Float // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655754D10
	float VSizeXYSquared(struct FVector A); // Function Engine.KismetMathLibrary.VSizeXYSquared // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655750460
	float VSizeXY(struct FVector A); // Function Engine.KismetMathLibrary.VSizeXY // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557503D0
	float VSizeSquared(struct FVector A); // Function Engine.KismetMathLibrary.VSizeSquared // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655750340
	float VSize2DSquared(struct FVector2D A); // Function Engine.KismetMathLibrary.VSize2DSquared // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655750220
	float VSize2D(struct FVector2D A); // Function Engine.KismetMathLibrary.VSize2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655750190
	float VSize(struct FVector A); // Function Engine.KismetMathLibrary.VSize // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557502A0
	struct FVector VLerp(struct FVector A, struct FVector B, float Alpha); // Function Engine.KismetMathLibrary.VLerp // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655750050
	struct FVector VInterpTo_Constant(struct FVector Current, struct FVector Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.VInterpTo_Constant // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF65574FED0
	struct FVector VInterpTo(struct FVector Current, struct FVector Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.VInterpTo // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF65574FD50
	struct FVector VectorSpringInterp(struct FVector Current, struct FVector Target, struct FVectorSpringState SpringState, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass); // Function Engine.KismetMathLibrary.VectorSpringInterp // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x4C, 0x7FF655751DB0
	struct FVector Vector_Zero(); // Function Engine.KismetMathLibrary.Vector_Zero // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655754A60
	struct FVector Vector_Up(); // Function Engine.KismetMathLibrary.Vector_Up // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655754A30
	void Vector_UnwindEuler(struct FVector A); // Function Engine.KismetMathLibrary.Vector_UnwindEuler // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557549B0
	struct FVector2D Vector_UnitCartesianToSpherical(struct FVector A); // Function Engine.KismetMathLibrary.Vector_UnitCartesianToSpherical // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF6557548D0
	struct FVector Vector_ToRadians(struct FVector A); // Function Engine.KismetMathLibrary.Vector_ToRadians // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655754820
	struct FVector Vector_ToDegrees(struct FVector A); // Function Engine.KismetMathLibrary.Vector_ToDegrees // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655754770
	struct FVector Vector_SnappedToGrid(struct FVector InVect, float InGridSize); // Function Engine.KismetMathLibrary.Vector_SnappedToGrid // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF6557545B0
	void Vector_Set(struct FVector A, float X, float Y, float Z); // Function Engine.KismetMathLibrary.Vector_Set // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF655754460
	struct FVector Vector_Right(); // Function Engine.KismetMathLibrary.Vector_Right // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655754430
	struct FVector Vector_Reciprocal(struct FVector A); // Function Engine.KismetMathLibrary.Vector_Reciprocal // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655754330
	struct FVector Vector_ProjectOnToNormal(struct FVector V, struct FVector InNormal); // Function Engine.KismetMathLibrary.Vector_ProjectOnToNormal // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655754230
	struct FVector Vector_One(); // Function Engine.KismetMathLibrary.Vector_One // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655754200
	struct FVector Vector_NormalUnsafe(struct FVector A); // Function Engine.KismetMathLibrary.Vector_NormalUnsafe // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655753F20
	void Vector_Normalize(struct FVector A, float Tolerance); // Function Engine.KismetMathLibrary.Vector_Normalize // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF655754070
	struct FVector Vector_Normal2D(struct FVector A, float Tolerance); // Function Engine.KismetMathLibrary.Vector_Normal2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655753D50
	struct FVector Vector_MirrorByPlane(struct FVector A, struct FPlane InPlane); // Function Engine.KismetMathLibrary.Vector_MirrorByPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF655753BF0
	struct FVector Vector_Left(); // Function Engine.KismetMathLibrary.Vector_Left // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655753BC0
	bool Vector_IsZero(struct FVector A); // Function Engine.KismetMathLibrary.Vector_IsZero // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xD, 0x7FF655753B10
	bool Vector_IsUnit(struct FVector A, float SquaredLenthTolerance); // Function Engine.KismetMathLibrary.Vector_IsUnit // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655753A00
	bool Vector_IsUniform(struct FVector A, float Tolerance); // Function Engine.KismetMathLibrary.Vector_IsUniform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6557538E0
	bool Vector_IsNormal(struct FVector A); // Function Engine.KismetMathLibrary.Vector_IsNormal // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xD, 0x7FF655753810
	bool Vector_IsNearlyZero(struct FVector A, float Tolerance); // Function Engine.KismetMathLibrary.Vector_IsNearlyZero // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655753700
	bool Vector_IsNAN(struct FVector A); // Function Engine.KismetMathLibrary.Vector_IsNAN // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xD, 0x7FF655753630
	float Vector_HeadingAngle(struct FVector A); // Function Engine.KismetMathLibrary.Vector_HeadingAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557534E0
	struct FVector Vector_GetSignVector(struct FVector A); // Function Engine.KismetMathLibrary.Vector_GetSignVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655753410
	struct FVector Vector_GetProjection(struct FVector A); // Function Engine.KismetMathLibrary.Vector_GetProjection // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655753370
	float Vector_GetAbsMin(struct FVector A); // Function Engine.KismetMathLibrary.Vector_GetAbsMin // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557532D0
	float Vector_GetAbsMax(struct FVector A); // Function Engine.KismetMathLibrary.Vector_GetAbsMax // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655753230
	struct FVector Vector_GetAbs(struct FVector A); // Function Engine.KismetMathLibrary.Vector_GetAbs // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655753190
	struct FVector Vector_Forward(); // Function Engine.KismetMathLibrary.Vector_Forward // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655753160
	struct FVector Vector_Down(); // Function Engine.KismetMathLibrary.Vector_Down // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655753130
	float Vector_DistanceSquared(struct FVector v1, struct FVector v2); // Function Engine.KismetMathLibrary.Vector_DistanceSquared // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655753050
	float Vector_Distance2DSquared(struct FVector v1, struct FVector v2); // Function Engine.KismetMathLibrary.Vector_Distance2DSquared // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655752EA0
	float Vector_Distance2D(struct FVector v1, struct FVector v2); // Function Engine.KismetMathLibrary.Vector_Distance2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655752DD0
	float Vector_Distance(struct FVector v1, struct FVector v2); // Function Engine.KismetMathLibrary.Vector_Distance // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655752F70
	float Vector_CosineAngle2D(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Vector_CosineAngle2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655752BD0
	struct FVector Vector_ComponentMin(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Vector_ComponentMin // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655752AF0
	struct FVector Vector_ComponentMax(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Vector_ComponentMax // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655752A10
	struct FVector Vector_ClampSizeMax2D(struct FVector A, float Max); // Function Engine.KismetMathLibrary.Vector_ClampSizeMax2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655752670
	struct FVector Vector_ClampSizeMax(struct FVector A, float Max); // Function Engine.KismetMathLibrary.Vector_ClampSizeMax // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655752820
	struct FVector Vector_ClampSize2D(struct FVector A, float Min, float Max); // Function Engine.KismetMathLibrary.Vector_ClampSize2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557524C0
	struct FVector Vector_BoundedToCube(struct FVector InVect, float InRadius); // Function Engine.KismetMathLibrary.Vector_BoundedToCube // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF6557523B0
	struct FVector Vector_BoundedToBox(struct FVector InVect, struct FVector InBoxMin, struct FVector InBoxMax); // Function Engine.KismetMathLibrary.Vector_BoundedToBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655752270
	struct FVector Vector_Backward(); // Function Engine.KismetMathLibrary.Vector_Backward // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655752240
	void Vector_Assign(struct FVector A, struct FVector InVector); // Function Engine.KismetMathLibrary.Vector_Assign // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF655752160
	void Vector_AddBounded(struct FVector A, struct FVector InAddVect, float InRadius); // Function Engine.KismetMathLibrary.Vector_AddBounded // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF655752000
	struct FVector4 Vector4_Zero(); // Function Engine.KismetMathLibrary.Vector4_Zero // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655751D90
	float Vector4_SizeSquared3(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_SizeSquared3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655751C00
	float Vector4_SizeSquared(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_SizeSquared // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655751CC0
	float Vector4_Size3(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_Size3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655751A70
	float Vector4_Size(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_Size // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655751B30
	void Vector4_Set(struct FVector4 A, float X, float Y, float Z, float W); // Function Engine.KismetMathLibrary.Vector4_Set // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557518D0
	struct FVector4 Vector4_NormalUnsafe3(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_NormalUnsafe3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557515A0
	void Vector4_Normalize3(struct FVector4 A, float Tolerance); // Function Engine.KismetMathLibrary.Vector4_Normalize3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF655751710
	struct FVector4 Vector4_Normal3(struct FVector4 A, float Tolerance); // Function Engine.KismetMathLibrary.Vector4_Normal3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557513E0
	struct FVector4 Vector4_Negated(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_Negated // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655751340
	struct FVector4 Vector4_MirrorByVector3(struct FVector4 Direction, struct FVector4 SurfaceNormal); // Function Engine.KismetMathLibrary.Vector4_MirrorByVector3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557511B0
	bool Vector4_IsZero(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_IsZero // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6557510F0
	bool Vector4_IsUnit3(struct FVector4 A, float SquaredLenthTolerance); // Function Engine.KismetMathLibrary.Vector4_IsUnit3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF655750FD0
	bool Vector4_IsNormal3(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_IsNormal3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655750F00
	bool Vector4_IsNearlyZero3(struct FVector4 A, float Tolerance); // Function Engine.KismetMathLibrary.Vector4_IsNearlyZero3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF655750DE0
	bool Vector4_IsNAN(struct FVector4 A); // Function Engine.KismetMathLibrary.Vector4_IsNAN // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655750CF0
	float Vector4_DotProduct3(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.Vector4_DotProduct3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655750AA0
	float Vector4_DotProduct(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.Vector4_DotProduct // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655750BC0
	struct FVector4 Vector4_CrossProduct3(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.Vector4_CrossProduct3 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655750920
	void Vector4_Assign(struct FVector4 A, struct FVector4 InVector); // Function Engine.KismetMathLibrary.Vector4_Assign // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF655750830
	struct FVector2D Vector2DInterpTo_Constant(struct FVector2D Current, struct FVector2D Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.Vector2DInterpTo_Constant // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655750640
	struct FVector2D Vector2DInterpTo(struct FVector2D Current, struct FVector2D Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.Vector2DInterpTo // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557504E0
	struct FVector2D Vector2D_Zero(); // Function Engine.KismetMathLibrary.Vector2D_Zero // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655750800
	struct FVector2D Vector2D_Unit45Deg(); // Function Engine.KismetMathLibrary.Vector2D_Unit45Deg // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557507D0
	struct FVector2D Vector2D_One(); // Function Engine.KismetMathLibrary.Vector2D_One // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557507A0
	struct FVector VEase(struct FVector A, struct FVector B, float Alpha, enum class EEasingFunc EasingFunc, float BlendExp, int32_t Steps); // Function Engine.KismetMathLibrary.VEase // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x34, 0x7FF65574FB60
	struct FDateTime UtcNow(); // Function Engine.KismetMathLibrary.UtcNow // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574FB20
	struct FVector4 TransformVector4(struct FMatrix Matrix, struct FVector4 Vec4); // Function Engine.KismetMathLibrary.TransformVector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x60, 0x7FF65574F920
	struct FRotator TransformRotation(struct FTransform T, struct FRotator Rotation); // Function Engine.KismetMathLibrary.TransformRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF65574F7E0
	struct FVector TransformLocation(struct FTransform T, struct FVector Location); // Function Engine.KismetMathLibrary.TransformLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF65574F630
	struct FVector TransformDirection(struct FTransform T, struct FVector Direction); // Function Engine.KismetMathLibrary.TransformDirection // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF65574F490
	float Transform_Determinant(struct FTransform Transform); // Function Engine.KismetMathLibrary.Transform_Determinant // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x34, 0x7FF65574FA40
	struct FVector2D ToSign2D(struct FVector2D A); // Function Engine.KismetMathLibrary.ToSign2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574F390
	struct FVector2D ToRounded2D(struct FVector2D A); // Function Engine.KismetMathLibrary.ToRounded2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574F290
	void ToDirectionAndLength2D(struct FVector2D A, struct FVector2D OutDir, float OutLength); // Function Engine.KismetMathLibrary.ToDirectionAndLength2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574F110
	struct FDateTime Today(); // Function Engine.KismetMathLibrary.Today // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574F440
	struct FTransform TLerp(struct FTransform A, struct FTransform B, float Alpha, enum class ELerpInterpolationMode InterpMode); // Function Engine.KismetMathLibrary.TLerp // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xA0, 0x7FF65574EBF0
	struct FTransform TInterpTo(struct FTransform Current, struct FTransform Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.TInterpTo // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xA0, 0x7FF65574E9D0
	struct FTimespan TimespanZeroValue(); // Function Engine.KismetMathLibrary.TimespanZeroValue // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF654FAEC00
	float TimespanRatio(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.TimespanRatio // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574F030
	struct FTimespan TimespanMinValue(); // Function Engine.KismetMathLibrary.TimespanMinValue // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574F000
	struct FTimespan TimespanMaxValue(); // Function Engine.KismetMathLibrary.TimespanMaxValue // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574EFD0
	bool TimespanFromString(struct FString TimespanString, struct FTimespan Result); // Function Engine.KismetMathLibrary.TimespanFromString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF65574EE90
	struct FTransform TEase(struct FTransform A, struct FTransform B, float Alpha, enum class EEasingFunc EasingFunc, float BlendExp, int32_t Steps); // Function Engine.KismetMathLibrary.TEase // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xA0, 0x7FF65574E750
	float Tan(float A); // Function Engine.KismetMathLibrary.Tan // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574EE10
	struct FVector Subtract_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Subtract_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65574E670
	struct FVector Subtract_VectorInt(struct FVector A, int32_t B); // Function Engine.KismetMathLibrary.Subtract_VectorInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65574E580
	struct FVector Subtract_VectorFloat(struct FVector A, float B); // Function Engine.KismetMathLibrary.Subtract_VectorFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65574E4A0
	struct FVector4 Subtract_Vector4Vector4(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.Subtract_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65574E360
	struct FVector2D Subtract_Vector2DVector2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.Subtract_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574E2A0
	struct FVector2D Subtract_Vector2DFloat(struct FVector2D A, float B); // Function Engine.KismetMathLibrary.Subtract_Vector2DFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574E1D0
	struct FTimespan Subtract_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.Subtract_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574DB30
	struct FQuat Subtract_QuatQuat(struct FQuat A, struct FQuat B); // Function Engine.KismetMathLibrary.Subtract_QuatQuat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65574E0B0
	struct FLinearColor Subtract_LinearColorLinearColor(struct FLinearColor A, struct FLinearColor B); // Function Engine.KismetMathLibrary.Subtract_LinearColorLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65574DFC0
	struct FIntPoint Subtract_IntPointIntPoint(struct FIntPoint A, struct FIntPoint B); // Function Engine.KismetMathLibrary.Subtract_IntPointIntPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574DEF0
	struct FIntPoint Subtract_IntPointInt(struct FIntPoint A, int32_t B); // Function Engine.KismetMathLibrary.Subtract_IntPointInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574DE20
	int32_t Subtract_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Subtract_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65574DD60
	int64_t Subtract_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Subtract_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574DCA0
	float Subtract_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.Subtract_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65574DBE0
	struct FDateTime Subtract_DateTimeTimespan(struct FDateTime A, struct FTimespan B); // Function Engine.KismetMathLibrary.Subtract_DateTimeTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574DB30
	struct FTimespan Subtract_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.Subtract_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574DB30
	enum class None Subtract_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.Subtract_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF65574DA80
	float Square(float A); // Function Engine.KismetMathLibrary.Square // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574DA00
	float Sqrt(float A); // Function Engine.KismetMathLibrary.Sqrt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574D950
	struct FVector Spherical2DToUnitCartesian(struct FVector2D A); // Function Engine.KismetMathLibrary.Spherical2DToUnitCartesian // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574D870
	float Sin(float A); // Function Engine.KismetMathLibrary.Sin // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574D7F0
	int64_t SignOfInteger64(int64_t A); // Function Engine.KismetMathLibrary.SignOfInteger64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574D6B0
	int32_t SignOfInteger(int32_t A); // Function Engine.KismetMathLibrary.SignOfInteger // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574D750
	float SignOfFloat(float A); // Function Engine.KismetMathLibrary.SignOfFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574D5E0
	void SetRandomStreamSeed(struct FRandomStream Stream, int32_t NewSeed); // Function Engine.KismetMathLibrary.SetRandomStreamSeed // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF65574D510
	void Set2D(struct FVector2D A, float X, float Y); // Function Engine.KismetMathLibrary.Set2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF65574D400
	struct FVector SelectVector(struct FVector A, struct FVector B, bool bPickA); // Function Engine.KismetMathLibrary.SelectVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65574CF70
	struct FTransform SelectTransform(struct FTransform A, struct FTransform B, bool bPickA); // Function Engine.KismetMathLibrary.SelectTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xA0, 0x7FF65574D240
	struct FString SelectString(struct FString A, struct FString B, bool bPickA); // Function Engine.KismetMathLibrary.SelectString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF65574D0A0
	struct FRotator SelectRotator(struct FRotator A, struct FRotator B, bool bPickA); // Function Engine.KismetMathLibrary.SelectRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65574CF70
	struct UObject* SelectObject(struct UObject* A, struct UObject* B, bool bSelectA); // Function Engine.KismetMathLibrary.SelectObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65574CB70
	int32_t SelectInt(int32_t A, int32_t B, bool bPickA); // Function Engine.KismetMathLibrary.SelectInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574CE80
	float SelectFloat(float A, float B, bool bPickA); // Function Engine.KismetMathLibrary.SelectFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574CD70
	struct FLinearColor SelectColor(struct FLinearColor A, struct FLinearColor B, bool bPickA); // Function Engine.KismetMathLibrary.SelectColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x34, 0x7FF65574CC60
	class UObject* SelectClass(class UObject* A, class UObject* B, bool bSelectA); // Function Engine.KismetMathLibrary.SelectClass // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65574CB70
	void SeedRandomStream(struct FRandomStream Stream); // Function Engine.KismetMathLibrary.SeedRandomStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x8, 0x7FF65574CAF0
	float SafeDivide(float A, float B); // Function Engine.KismetMathLibrary.SafeDivide // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65574CA30
	int64_t Round64(float A); // Function Engine.KismetMathLibrary.Round64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574C8D0
	int32_t Round(float A); // Function Engine.KismetMathLibrary.Round // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574C9A0
	struct FRotator RotatorFromAxisAndAngle(struct FVector Axis, float Angle); // Function Engine.KismetMathLibrary.RotatorFromAxisAndAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65574C7F0
	struct FVector RotateAngleAxis(struct FVector InVect, float AngleDeg, struct FVector Axis); // Function Engine.KismetMathLibrary.RotateAngleAxis // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65574C6B0
	struct FRotator RLerp(struct FRotator A, struct FRotator B, float Alpha, bool bShortestPath); // Function Engine.KismetMathLibrary.RLerp // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF65574AAD0
	struct FRotator RInterpTo_Constant(struct FRotator Current, struct FRotator Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.RInterpTo_Constant // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF65574A950
	struct FRotator RInterpTo(struct FRotator Current, struct FRotator Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.RInterpTo // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF65574A7D0
	void RGBToHSV_Vector(struct FLinearColor RGB, struct FLinearColor HSV); // Function Engine.KismetMathLibrary.RGBToHSV_Vector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65574A6F0
	void RGBToHSV(struct FLinearColor InColor, float H, float S, float V, float A); // Function Engine.KismetMathLibrary.RGBToHSV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65574A500
	struct FLinearColor RGBLinearToHSV(struct FLinearColor RGB); // Function Engine.KismetMathLibrary.RGBLinearToHSV // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65574A470
	void ResetVectorSpringState(struct FVectorSpringState SpringState); // Function Engine.KismetMathLibrary.ResetVectorSpringState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF65574C610
	void ResetRandomStream(struct FRandomStream Stream); // Function Engine.KismetMathLibrary.ResetRandomStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x8, 0x7FF65574C590
	void ResetFloatSpringState(struct FFloatSpringState SpringState); // Function Engine.KismetMathLibrary.ResetFloatSpringState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x8, 0x7FF65574C500
	struct FRotator REase(struct FRotator A, struct FRotator B, float Alpha, bool bShortestPath, enum class EEasingFunc EasingFunc, float BlendExp, int32_t Steps); // Function Engine.KismetMathLibrary.REase // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x34, 0x7FF65574A240
	struct FVector RandomUnitVectorInEllipticalConeInRadiansFromStream(struct FVector ConeDir, float MaxYawInRadians, float MaxPitchInRadians, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadiansFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65574C370
	struct FVector RandomUnitVectorInEllipticalConeInRadians(struct FVector ConeDir, float MaxYawInRadians, float MaxPitchInRadians); // Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadians // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65574C250
	struct FVector RandomUnitVectorInEllipticalConeInDegreesFromStream(struct FVector ConeDir, float MaxYawInDegrees, float MaxPitchInDegrees, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegreesFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65574C0B0
	struct FVector RandomUnitVectorInEllipticalConeInDegrees(struct FVector ConeDir, float MaxYawInDegrees, float MaxPitchInDegrees); // Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegrees // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65574BF80
	struct FVector RandomUnitVectorInConeInRadiansFromStream(struct FVector ConeDir, float ConeHalfAngleInRadians, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadiansFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65574BE50
	struct FVector RandomUnitVectorInConeInRadians(struct FVector ConeDir, float ConeHalfAngleInRadians); // Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadians // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65574BD70
	struct FVector RandomUnitVectorInConeInDegreesFromStream(struct FVector ConeDir, float ConeHalfAngleInDegrees, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegreesFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65574BC30
	struct FVector RandomUnitVectorInConeInDegrees(struct FVector ConeDir, float ConeHalfAngleInDegrees); // Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegrees // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65574BB40
	struct FVector RandomUnitVectorFromStream(struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomUnitVectorFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574BAA0
	struct FVector RandomUnitVector(); // Function Engine.KismetMathLibrary.RandomUnitVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65574BA60
	struct FRotator RandomRotatorFromStream(bool bRoll, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomRotatorFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574B980
	struct FRotator RandomRotator(bool bRoll); // Function Engine.KismetMathLibrary.RandomRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574B8E0
	struct FVector RandomPointInBoundingBox(struct FVector Origin, struct FVector BoxExtent); // Function Engine.KismetMathLibrary.RandomPointInBoundingBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65574B780
	int32_t RandomIntegerInRangeFromStream(int32_t Min, int32_t Max, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomIntegerInRangeFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574B680
	int32_t RandomIntegerInRange(int32_t Min, int32_t Max); // Function Engine.KismetMathLibrary.RandomIntegerInRange // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65574B580
	int32_t RandomIntegerFromStream(int32_t Max, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomIntegerFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574B4B0
	int64_t RandomInteger64InRange(int64_t Min, int64_t Max); // Function Engine.KismetMathLibrary.RandomInteger64InRange // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65574B2E0
	int64_t RandomInteger64(int64_t Max); // Function Engine.KismetMathLibrary.RandomInteger64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65574B210
	int32_t RandomInteger(int32_t Max); // Function Engine.KismetMathLibrary.RandomInteger // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574B3F0
	float RandomFloatInRangeFromStream(float Min, float Max, struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomFloatInRangeFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65574B100
	float RandomFloatInRange(float Min, float Max); // Function Engine.KismetMathLibrary.RandomFloatInRange // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65574B010
	float RandomFloatFromStream(struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomFloatFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65574AF80
	float RandomFloat(); // Function Engine.KismetMathLibrary.RandomFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF65574AF40
	bool RandomBoolWithWeightFromStream(float Weight, struct FRandomStream RandomStream); // Function Engine.KismetMathLibrary.RandomBoolWithWeightFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xD, 0x7FF65574AE60
	bool RandomBoolWithWeight(float Weight); // Function Engine.KismetMathLibrary.RandomBoolWithWeight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x5, 0x7FF65574ADE0
	bool RandomBoolFromStream(struct FRandomStream Stream); // Function Engine.KismetMathLibrary.RandomBoolFromStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65574AD50
	bool RandomBool(); // Function Engine.KismetMathLibrary.RandomBool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF65574ACF0
	float RadiansToDegrees(float A); // Function Engine.KismetMathLibrary.RadiansToDegrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65574AC70
	struct FVector Quat_VectorUp(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_VectorUp // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748EB0
	struct FVector Quat_VectorRight(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_VectorRight // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748D90
	struct FVector Quat_VectorForward(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_VectorForward // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748C90
	struct FVector Quat_UnrotateVector(struct FQuat Q, struct FVector V); // Function Engine.KismetMathLibrary.Quat_UnrotateVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65574A000
	float Quat_SizeSquared(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_SizeSquared // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655749F40
	float Quat_Size(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_Size // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655749E80
	void Quat_SetFromEuler(struct FQuat Q, struct FVector Euler); // Function Engine.KismetMathLibrary.Quat_SetFromEuler // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF655749DA0
	void Quat_SetComponents(struct FQuat Q, float X, float Y, float Z, float W); // Function Engine.KismetMathLibrary.Quat_SetComponents // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF655749C10
	struct FRotator Quat_Rotator(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_Rotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655749B70
	struct FVector Quat_RotateVector(struct FQuat Q, struct FVector V); // Function Engine.KismetMathLibrary.Quat_RotateVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655749940
	struct FQuat Quat_Normalized(struct FQuat Q, float Tolerance); // Function Engine.KismetMathLibrary.Quat_Normalized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557497E0
	void Quat_Normalize(struct FQuat Q, float Tolerance); // Function Engine.KismetMathLibrary.Quat_Normalize // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF655749690
	struct FQuat Quat_MakeFromEuler(struct FVector Euler); // Function Engine.KismetMathLibrary.Quat_MakeFromEuler // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557495F0
	struct FQuat Quat_Log(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_Log // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655749550
	bool Quat_IsNormalized(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_IsNormalized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655749480
	bool Quat_IsNonFinite(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_IsNonFinite // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6557493A0
	bool Quat_IsIdentity(struct FQuat Q, float Tolerance); // Function Engine.KismetMathLibrary.Quat_IsIdentity // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF655749280
	bool Quat_IsFinite(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_IsFinite // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6557491A0
	struct FQuat Quat_Inversed(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_Inversed // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557490D0
	struct FQuat Quat_Identity(); // Function Engine.KismetMathLibrary.Quat_Identity // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557490B0
	struct FVector Quat_GetRotationAxis(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_GetRotationAxis // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748FB0
	struct FVector Quat_GetAxisZ(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_GetAxisZ // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748EB0
	struct FVector Quat_GetAxisY(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_GetAxisY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748D90
	struct FVector Quat_GetAxisX(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_GetAxisX // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748C90
	float Quat_GetAngle(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_GetAngle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655748BE0
	struct FQuat Quat_Exp(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_Exp // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655748B40
	struct FVector Quat_Euler(struct FQuat Q); // Function Engine.KismetMathLibrary.Quat_Euler // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655748AA0
	void Quat_EnforceShortestArcWith(struct FQuat A, struct FQuat B); // Function Engine.KismetMathLibrary.Quat_EnforceShortestArcWith // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF655748970
	float Quat_AngularDistance(struct FQuat A, struct FQuat B); // Function Engine.KismetMathLibrary.Quat_AngularDistance // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655748830
	struct FVector ProjectVectorOnToVector(struct FVector V, struct FVector Target); // Function Engine.KismetMathLibrary.ProjectVectorOnToVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF6557486C0
	struct FVector ProjectVectorOnToPlane(struct FVector V, struct FVector PlaneNormal); // Function Engine.KismetMathLibrary.ProjectVectorOnToPlane // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF6557485A0
	struct FVector ProjectPointOnToPlane(struct FVector Point, struct FVector PlaneBase, struct FVector PlaneNormal); // Function Engine.KismetMathLibrary.ProjectPointOnToPlane // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655748430
	bool PointsAreCoplanar(struct TArray<struct FVector> Points, float Tolerance); // Function Engine.KismetMathLibrary.PointsAreCoplanar // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF655748330
	float PerlinNoise1D(float Value); // Function Engine.KismetMathLibrary.PerlinNoise1D // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557482B0
	int32_t Percent_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Percent_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6557481D0
	float Percent_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.Percent_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655748050
	enum class None Percent_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.Percent_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655747F80
	int32_t Or_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Or_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655747EC0
	int64_t Or_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Or_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655747E00
	struct FDateTime Now(); // Function Engine.KismetMathLibrary.Now // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655747DC0
	bool NotEqualExactly_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.NotEqualExactly_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655746C20
	bool NotEqualExactly_Vector4Vector4(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.NotEqualExactly_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655746AF0
	bool NotEqualExactly_Vector2DVector2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.NotEqualExactly_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655746A20
	bool NotEqual_VectorVector(struct FVector A, struct FVector B, float ErrorTolerance); // Function Engine.KismetMathLibrary.NotEqual_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1D, 0x7FF655747B00
	bool NotEqual_Vector4Vector4(struct FVector4 A, struct FVector4 B, float ErrorTolerance); // Function Engine.KismetMathLibrary.NotEqual_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x25, 0x7FF655747970
	bool NotEqual_Vector2DVector2D(struct FVector2D A, struct FVector2D B, float ErrorTolerance); // Function Engine.KismetMathLibrary.NotEqual_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF655747850
	bool NotEqual_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.NotEqual_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655746F50
	bool NotEqual_RotatorRotator(struct FRotator A, struct FRotator B, float ErrorTolerance); // Function Engine.KismetMathLibrary.NotEqual_RotatorRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1D, 0x7FF655747640
	bool NotEqual_QuatQuat(struct FQuat A, struct FQuat B, float ErrorTolerance); // Function Engine.KismetMathLibrary.NotEqual_QuatQuat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x25, 0x7FF6557474D0
	bool NotEqual_ObjectObject(struct UObject* A, struct UObject* B); // Function Engine.KismetMathLibrary.NotEqual_ObjectObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655746E90
	bool NotEqual_NameName(struct FName A, struct FName B); // Function Engine.KismetMathLibrary.NotEqual_NameName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655746E90
	bool NotEqual_MatrixMatrix(struct FMatrix A, struct FMatrix B, float Tolerance); // Function Engine.KismetMathLibrary.NotEqual_MatrixMatrix // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x85, 0x7FF655747340
	bool NotEqual_LinearColorLinearColor(struct FLinearColor A, struct FLinearColor B); // Function Engine.KismetMathLibrary.NotEqual_LinearColorLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655747260
	bool NotEqual_IntPointIntPoint(struct FIntPoint A, struct FIntPoint B); // Function Engine.KismetMathLibrary.NotEqual_IntPointIntPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655747190
	bool NotEqual_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.NotEqual_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF6557470D0
	bool NotEqual_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.NotEqual_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655746E90
	bool NotEqual_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.NotEqual_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF655747000
	bool NotEqual_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.NotEqual_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655746F50
	bool NotEqual_ClassClass(class UObject* A, class UObject* B); // Function Engine.KismetMathLibrary.NotEqual_ClassClass // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655746E90
	bool NotEqual_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.NotEqual_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655746DD0
	bool NotEqual_BoolBool(bool A, bool B); // Function Engine.KismetMathLibrary.NotEqual_BoolBool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655746D00
	bool Not_PreBool(bool A); // Function Engine.KismetMathLibrary.Not_PreBool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x2, 0x7FF655747D40
	int64_t Not_Int64(int64_t A); // Function Engine.KismetMathLibrary.Not_Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655747C40
	int32_t Not_Int(int32_t A); // Function Engine.KismetMathLibrary.Not_Int // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655747CC0
	struct FVector2D NormalSafe2D(struct FVector2D A, float Tolerance); // Function Engine.KismetMathLibrary.NormalSafe2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF6557464C0
	float NormalizeToRange(float Value, float RangeMin, float RangeMax); // Function Engine.KismetMathLibrary.NormalizeToRange // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655746820
	struct FRotator NormalizedDeltaRotator(struct FRotator A, struct FRotator B); // Function Engine.KismetMathLibrary.NormalizedDeltaRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655746930
	float NormalizeAxis(float Angle); // Function Engine.KismetMathLibrary.NormalizeAxis // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557467A0
	void Normalize2D(struct FVector2D A, float Tolerance); // Function Engine.KismetMathLibrary.Normalize2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF655746620
	struct FVector2D Normal2D(struct FVector2D A); // Function Engine.KismetMathLibrary.Normal2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557461E0
	struct FVector Normal(struct FVector A, float Tolerance); // Function Engine.KismetMathLibrary.Normal // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655746300
	struct FVector NegateVector(struct FVector A); // Function Engine.KismetMathLibrary.NegateVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557460A0
	struct FRotator NegateRotator(struct FRotator A); // Function Engine.KismetMathLibrary.NegateRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655746000
	struct FVector2D Negated2D(struct FVector2D A); // Function Engine.KismetMathLibrary.Negated2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655746140
	bool NearlyEqual_TransformTransform(struct FTransform A, struct FTransform B, float LocationTolerance, float RotationTolerance, float Scale3DTolerance); // Function Engine.KismetMathLibrary.NearlyEqual_TransformTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x6D, 0x7FF655745DE0
	bool NearlyEqual_FloatFloat(float A, float B, float ErrorTolerance); // Function Engine.KismetMathLibrary.NearlyEqual_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xD, 0x7FF655745CD0
	float MultiplyMultiply_FloatFloat(float Base, float Exp); // Function Engine.KismetMathLibrary.MultiplyMultiply_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6557449A0
	float MultiplyByPi(float Value); // Function Engine.KismetMathLibrary.MultiplyByPi // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655744920
	struct FVector Multiply_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Multiply_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655745BF0
	struct FVector Multiply_VectorInt(struct FVector A, int32_t B); // Function Engine.KismetMathLibrary.Multiply_VectorInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655745760
	struct FVector Multiply_VectorFloat(struct FVector A, float B); // Function Engine.KismetMathLibrary.Multiply_VectorFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655745680
	struct FVector4 Multiply_Vector4Vector4(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.Multiply_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655745AB0
	struct FVector2D Multiply_Vector2DVector2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.Multiply_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557459F0
	struct FVector2D Multiply_Vector2DFloat(struct FVector2D A, float B); // Function Engine.KismetMathLibrary.Multiply_Vector2DFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655745920
	struct FTimespan Multiply_TimespanFloat(struct FTimespan A, float Scalar); // Function Engine.KismetMathLibrary.Multiply_TimespanFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655745850
	struct FRotator Multiply_RotatorInt(struct FRotator A, int32_t B); // Function Engine.KismetMathLibrary.Multiply_RotatorInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655745760
	struct FRotator Multiply_RotatorFloat(struct FRotator A, float B); // Function Engine.KismetMathLibrary.Multiply_RotatorFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655745680
	struct FQuat Multiply_QuatQuat(struct FQuat A, struct FQuat B); // Function Engine.KismetMathLibrary.Multiply_QuatQuat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655745540
	struct FMatrix Multiply_MatrixMatrix(struct FMatrix A, struct FMatrix B); // Function Engine.KismetMathLibrary.Multiply_MatrixMatrix // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC0, 0x7FF655745330
	struct FMatrix Multiply_MatrixFloat(struct FMatrix A, float B); // Function Engine.KismetMathLibrary.Multiply_MatrixFloat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF6557451C0
	struct FLinearColor Multiply_LinearColorLinearColor(struct FLinearColor A, struct FLinearColor B); // Function Engine.KismetMathLibrary.Multiply_LinearColorLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557450D0
	struct FLinearColor Multiply_LinearColorFloat(struct FLinearColor A, float B); // Function Engine.KismetMathLibrary.Multiply_LinearColorFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655744FE0
	struct FIntPoint Multiply_IntPointIntPoint(struct FIntPoint A, struct FIntPoint B); // Function Engine.KismetMathLibrary.Multiply_IntPointIntPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655744F10
	struct FIntPoint Multiply_IntPointInt(struct FIntPoint A, int32_t B); // Function Engine.KismetMathLibrary.Multiply_IntPointInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655744E30
	int32_t Multiply_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Multiply_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655744D70
	float Multiply_IntFloat(int32_t A, float B); // Function Engine.KismetMathLibrary.Multiply_IntFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655744CA0
	int64_t Multiply_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Multiply_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655744BE0
	float Multiply_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.Multiply_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655744B20
	enum class None Multiply_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.Multiply_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655744A60
	struct FVector MirrorVectorByNormal(struct FVector InVect, struct FVector InNormal); // Function Engine.KismetMathLibrary.MirrorVectorByNormal // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573A1D0
	void MinOfIntArray(struct TArray<int32_t> IntArray, int32_t IndexOfMinValue, int32_t MinValue); // Function Engine.KismetMathLibrary.MinOfIntArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655744530
	void MinOfFloatArray(struct TArray<float> FloatArray, int32_t IndexOfMinValue, float MinValue); // Function Engine.KismetMathLibrary.MinOfFloatArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557443F0
	void MinOfByteArray(struct TArray<enum class None> ByteArray, int32_t IndexOfMinValue, enum class None MinValue); // Function Engine.KismetMathLibrary.MinOfByteArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF6557442B0
	int64_t MinInt64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.MinInt64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557441F0
	void MinimumAreaRectangle(struct UObject* WorldContextObject, struct TArray<struct FVector> InVerts, struct FVector SampleSurfaceNormal, struct FVector OutRectCenter, struct FRotator OutRectRotation, float OutSideLengthX, float OutSideLengthY, bool bDebugDraw); // Function Engine.KismetMathLibrary.MinimumAreaRectangle // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x45, 0x7FF655744670
	int32_t Min(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Min // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655744130
	void MaxOfIntArray(struct TArray<int32_t> IntArray, int32_t IndexOfMaxValue, int32_t MaxValue); // Function Engine.KismetMathLibrary.MaxOfIntArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655743FF0
	void MaxOfFloatArray(struct TArray<float> FloatArray, int32_t IndexOfMaxValue, float MaxValue); // Function Engine.KismetMathLibrary.MaxOfFloatArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655743EB0
	void MaxOfByteArray(struct TArray<enum class None> ByteArray, int32_t IndexOfMaxValue, enum class None MaxValue); // Function Engine.KismetMathLibrary.MaxOfByteArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF655743D70
	int64_t MaxInt64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.MaxInt64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655743CB0
	int32_t Max(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Max // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655743BF0
	struct FVector4 Matrix_TransformVector4(struct FMatrix M, struct FVector4 V); // Function Engine.KismetMathLibrary.Matrix_TransformVector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x60, 0x7FF6557439A0
	struct FVector4 Matrix_TransformVector(struct FMatrix M, struct FVector V); // Function Engine.KismetMathLibrary.Matrix_TransformVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x60, 0x7FF655743AC0
	struct FVector4 Matrix_TransformPosition(struct FMatrix M, struct FVector V); // Function Engine.KismetMathLibrary.Matrix_TransformPosition // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x60, 0x7FF655743860
	struct FQuat Matrix_ToQuat(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_ToQuat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF6557437C0
	void Matrix_SetOrigin(struct FMatrix M, struct FVector NewOrigin); // Function Engine.KismetMathLibrary.Matrix_SetOrigin // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x4C, 0x7FF6557436E0
	void Matrix_SetColumn(struct FMatrix M, enum class EMatrixColumns Column, struct FVector Value); // Function Engine.KismetMathLibrary.Matrix_SetColumn // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF6557435B0
	void Matrix_SetAxis(struct FMatrix M, enum class EAxis Axis, struct FVector AxisVector); // Function Engine.KismetMathLibrary.Matrix_SetAxis // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF655743480
	struct FMatrix Matrix_ScaleTranslation(struct FMatrix M, struct FVector Scale3D); // Function Engine.KismetMathLibrary.Matrix_ScaleTranslation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF655743340
	struct FMatrix Matrix_RemoveTranslation(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_RemoveTranslation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x80, 0x7FF655743280
	void Matrix_RemoveScaling(struct FMatrix M, float Tolerance); // Function Engine.KismetMathLibrary.Matrix_RemoveScaling // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x44, 0x7FF6557431B0
	struct FMatrix Matrix_Mirror(struct FMatrix M, enum class EAxis MirrorAxis, enum class EAxis FlipAxis); // Function Engine.KismetMathLibrary.Matrix_Mirror // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF655743040
	struct FVector Matrix_InverseTransformVector(struct FMatrix M, struct FVector V); // Function Engine.KismetMathLibrary.Matrix_InverseTransformVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x58, 0x7FF655742EB0
	struct FVector Matrix_InverseTransformPosition(struct FMatrix M, struct FVector V); // Function Engine.KismetMathLibrary.Matrix_InverseTransformPosition // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x58, 0x7FF655742D30
	struct FMatrix Matrix_Identity(); // Function Engine.KismetMathLibrary.Matrix_Identity // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655742CE0
	struct FVector Matrix_GetUnitAxis(struct FMatrix M, enum class EAxis Axis); // Function Engine.KismetMathLibrary.Matrix_GetUnitAxis // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655742BE0
	void Matrix_GetUnitAxes(struct FMatrix M, struct FVector X, struct FVector Y, struct FVector Z); // Function Engine.KismetMathLibrary.Matrix_GetUnitAxes // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x64, 0x7FF655742A50
	struct FMatrix Matrix_GetTransposed(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_GetTransposed // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x80, 0x7FF655742860
	struct FMatrix Matrix_GetTransposeAdjoint(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_GetTransposeAdjoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x80, 0x7FF6557427A0
	struct FVector Matrix_GetScaleVector(struct FMatrix M, float Tolerance); // Function Engine.KismetMathLibrary.Matrix_GetScaleVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655742380
	struct FVector Matrix_GetScaledAxis(struct FMatrix M, enum class EAxis Axis); // Function Engine.KismetMathLibrary.Matrix_GetScaledAxis // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655742630
	void Matrix_GetScaledAxes(struct FMatrix M, struct FVector X, struct FVector Y, struct FVector Z); // Function Engine.KismetMathLibrary.Matrix_GetScaledAxes // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x64, 0x7FF655742480
	float Matrix_GetRotDeterminant(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_GetRotDeterminant // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x44, 0x7FF655742270
	struct FRotator Matrix_GetRotator(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_GetRotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x4C, 0x7FF655733330
	struct FVector Matrix_GetOrigin(struct FMatrix InMatrix); // Function Engine.KismetMathLibrary.Matrix_GetOrigin // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x4C, 0x7FF6557421C0
	float Matrix_GetMaximumAxisScale(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_GetMaximumAxisScale // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x44, 0x7FF655742130
	struct FMatrix Matrix_GetMatrixWithoutScale(struct FMatrix M, float Tolerance); // Function Engine.KismetMathLibrary.Matrix_GetMatrixWithoutScale // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF655741FF0
	struct FMatrix Matrix_GetInverse(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_GetInverse // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x80, 0x7FF655741F30
	bool Matrix_GetFrustumTopPlane(struct FMatrix M, struct FPlane OutPlane); // Function Engine.KismetMathLibrary.Matrix_GetFrustumTopPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655741D30
	bool Matrix_GetFrustumRightPlane(struct FMatrix M, struct FPlane OutPlane); // Function Engine.KismetMathLibrary.Matrix_GetFrustumRightPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655741B30
	bool Matrix_GetFrustumNearPlane(struct FMatrix M, struct FPlane OutPlane); // Function Engine.KismetMathLibrary.Matrix_GetFrustumNearPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655741970
	bool Matrix_GetFrustumLeftPlane(struct FMatrix M, struct FPlane OutPlane); // Function Engine.KismetMathLibrary.Matrix_GetFrustumLeftPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655741770
	bool Matrix_GetFrustumFarPlane(struct FMatrix M, struct FPlane OutPlane); // Function Engine.KismetMathLibrary.Matrix_GetFrustumFarPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655741570
	bool Matrix_GetFrustumBottomPlane(struct FMatrix M, struct FPlane OutPlane); // Function Engine.KismetMathLibrary.Matrix_GetFrustumBottomPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655741370
	float Matrix_GetDeterminant(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_GetDeterminant // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x44, 0x7FF6557412E0
	struct FVector Matrix_GetColumn(struct FMatrix M, enum class EMatrixColumns Column); // Function Engine.KismetMathLibrary.Matrix_GetColumn // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF6557411E0
	bool Matrix_ContainsNaN(struct FMatrix M); // Function Engine.KismetMathLibrary.Matrix_ContainsNaN // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x41, 0x7FF655741150
	struct FMatrix Matrix_ConcatenateTranslation(struct FMatrix M, struct FVector Translation); // Function Engine.KismetMathLibrary.Matrix_ConcatenateTranslation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF655741000
	struct FMatrix Matrix_ApplyScale(struct FMatrix M, float Scale); // Function Engine.KismetMathLibrary.Matrix_ApplyScale // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF655740EE0
	float MapRangeUnclamped(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB); // Function Engine.KismetMathLibrary.MapRangeUnclamped // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655740D40
	float MapRangeClamped(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB); // Function Engine.KismetMathLibrary.MapRangeClamped // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655740BA0
	struct FVector4 MakeVector4(float X, float Y, float Z, float W); // Function Engine.KismetMathLibrary.MakeVector4 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655740930
	struct FVector2D MakeVector2D(float X, float Y); // Function Engine.KismetMathLibrary.MakeVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655740870
	struct FVector MakeVector(float X, float Y, float Z); // Function Engine.KismetMathLibrary.MakeVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655740A90
	struct FTransform MakeTransform(struct FVector Location, struct FRotator Rotation, struct FVector Scale); // Function Engine.KismetMathLibrary.MakeTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x60, 0x7FF6557406D0
	struct FTimespan MakeTimespan2(int32_t Days, int32_t Hours, int32_t Minutes, int32_t Seconds, int32_t FractionNano); // Function Engine.KismetMathLibrary.MakeTimespan2 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557403D0
	struct FTimespan MakeTimespan(int32_t Days, int32_t Hours, int32_t Minutes, int32_t Seconds, int32_t Milliseconds); // Function Engine.KismetMathLibrary.MakeTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655740550
	struct FRotator MakeRotFromZY(struct FVector Z, struct FVector Y); // Function Engine.KismetMathLibrary.MakeRotFromZY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655740070
	struct FRotator MakeRotFromZX(struct FVector Z, struct FVector X); // Function Engine.KismetMathLibrary.MakeRotFromZX // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573FF60
	struct FRotator MakeRotFromZ(struct FVector Z); // Function Engine.KismetMathLibrary.MakeRotFromZ // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65573FEA0
	struct FRotator MakeRotFromYZ(struct FVector Y, struct FVector Z); // Function Engine.KismetMathLibrary.MakeRotFromYZ // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573FD90
	struct FRotator MakeRotFromYX(struct FVector Y, struct FVector X); // Function Engine.KismetMathLibrary.MakeRotFromYX // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573FC80
	struct FRotator MakeRotFromY(struct FVector Y); // Function Engine.KismetMathLibrary.MakeRotFromY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65573FBC0
	struct FRotator MakeRotFromXZ(struct FVector X, struct FVector Z); // Function Engine.KismetMathLibrary.MakeRotFromXZ // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573FAB0
	struct FRotator MakeRotFromXY(struct FVector X, struct FVector Y); // Function Engine.KismetMathLibrary.MakeRotFromXY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573F9A0
	struct FRotator MakeRotFromX(struct FVector X); // Function Engine.KismetMathLibrary.MakeRotFromX // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65573F8E0
	struct FRotator MakeRotator(float Roll, float Pitch, float Yaw); // Function Engine.KismetMathLibrary.MakeRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557402C0
	struct FRotator MakeRotationFromAxes(struct FVector Forward, struct FVector Right, struct FVector Up); // Function Engine.KismetMathLibrary.MakeRotationFromAxes // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655740180
	struct FTransform MakeRelativeTransform(struct FTransform A, struct FTransform RelativeTo); // Function Engine.KismetMathLibrary.MakeRelativeTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF65573F750
	struct FRandomStream MakeRandomStream(int32_t InitialSeed); // Function Engine.KismetMathLibrary.MakeRandomStream // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573F6C0
	struct FQualifiedFrameTime MakeQualifiedFrameTime(struct FFrameNumber Frame, struct FFrameRate FrameRate, float SubFrame); // Function Engine.KismetMathLibrary.MakeQualifiedFrameTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65573F5B0
	float MakePulsatingValue(float InCurrentTime, float InPulsesPerSecond, float InPhase); // Function Engine.KismetMathLibrary.MakePulsatingValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573F4A0
	struct FPlane MakePlaneFromPointAndNormal(struct FVector Point, struct FVector Normal); // Function Engine.KismetMathLibrary.MakePlaneFromPointAndNormal // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65573F3C0
	struct FFrameRate MakeFrameRate(int32_t Numerator, int32_t Denominator); // Function Engine.KismetMathLibrary.MakeFrameRate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573F300
	struct FDateTime MakeDateTime(int32_t Year, int32_t Month, int32_t Day, int32_t Hour, int32_t Minute, int32_t Second, int32_t Millisecond); // Function Engine.KismetMathLibrary.MakeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65573F110
	struct FLinearColor MakeColor(float R, float G, float B, float A); // Function Engine.KismetMathLibrary.MakeColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65573EFB0
	struct FBox2D MakeBox2D(struct FVector2D Min, struct FVector2D Max); // Function Engine.KismetMathLibrary.MakeBox2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573EE00
	struct FBox MakeBox(struct FVector Min, struct FVector Max); // Function Engine.KismetMathLibrary.MakeBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x34, 0x7FF65573EED0
	float Loge(float A); // Function Engine.KismetMathLibrary.Loge // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65573ED80
	float Log(float A, float Base); // Function Engine.KismetMathLibrary.Log // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573ECC0
	bool LinePlaneIntersection_OriginNormal(struct FVector LineStart, struct FVector LineEnd, struct FVector PlaneOrigin, struct FVector PlaneNormal, float T, struct FVector Intersection); // Function Engine.KismetMathLibrary.LinePlaneIntersection_OriginNormal // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x41, 0x7FF65573D8C0
	bool LinePlaneIntersection(struct FVector LineStart, struct FVector LineEnd, struct FPlane APlane, float T, struct FVector Intersection); // Function Engine.KismetMathLibrary.LinePlaneIntersection // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x41, 0x7FF65573D6D0
	struct FLinearColor LinearColorLerpUsingHSV(struct FLinearColor A, struct FLinearColor B, float Alpha); // Function Engine.KismetMathLibrary.LinearColorLerpUsingHSV // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x34, 0x7FF65573DC40
	struct FLinearColor LinearColorLerp(struct FLinearColor A, struct FLinearColor B, float Alpha); // Function Engine.KismetMathLibrary.LinearColorLerp // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x34, 0x7FF65573DAE0
	struct FLinearColor LinearColor_Yellow(); // Function Engine.KismetMathLibrary.LinearColor_Yellow // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573ECA0
	struct FLinearColor LinearColor_White(); // Function Engine.KismetMathLibrary.LinearColor_White // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573EC80
	struct FLinearColor LinearColor_Transparent(); // Function Engine.KismetMathLibrary.LinearColor_Transparent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573EC60
	struct FColor LinearColor_ToRGBE(struct FLinearColor InLinearColor); // Function Engine.KismetMathLibrary.LinearColor_ToRGBE // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573EBD0
	struct FLinearColor LinearColor_ToNewOpacity(struct FLinearColor InColor, float InOpacity); // Function Engine.KismetMathLibrary.LinearColor_ToNewOpacity // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573EAF0
	void LinearColor_SetTemperature(struct FLinearColor InOutColor, float InTemperature); // Function Engine.KismetMathLibrary.LinearColor_SetTemperature // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF65573EA10
	void LinearColor_SetRGBA(struct FLinearColor InOutColor, float R, float G, float B, float A); // Function Engine.KismetMathLibrary.LinearColor_SetRGBA // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF65573E7F0
	void LinearColor_SetRandomHue(struct FLinearColor InOutColor); // Function Engine.KismetMathLibrary.LinearColor_SetRandomHue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF65573E980
	void LinearColor_SetFromSRGB(struct FLinearColor InOutColor, struct FColor InSRGB); // Function Engine.KismetMathLibrary.LinearColor_SetFromSRGB // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF65573E710
	void LinearColor_SetFromPow22(struct FLinearColor InOutColor, struct FColor InColor); // Function Engine.KismetMathLibrary.LinearColor_SetFromPow22 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF65573E630
	void LinearColor_SetFromHSV(struct FLinearColor InOutColor, float H, float S, float V, float A); // Function Engine.KismetMathLibrary.LinearColor_SetFromHSV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF65573E4A0
	void LinearColor_Set(struct FLinearColor InOutColor, struct FLinearColor InColor); // Function Engine.KismetMathLibrary.LinearColor_Set // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF65573E3E0
	struct FLinearColor LinearColor_Red(); // Function Engine.KismetMathLibrary.LinearColor_Red // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573E3C0
	struct FColor LinearColor_QuantizeRound(struct FLinearColor InColor); // Function Engine.KismetMathLibrary.LinearColor_QuantizeRound // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573E330
	struct FColor LinearColor_Quantize(struct FLinearColor InColor); // Function Engine.KismetMathLibrary.LinearColor_Quantize // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573E2A0
	bool LinearColor_IsNearEqual(struct FLinearColor A, struct FLinearColor B, float Tolerance); // Function Engine.KismetMathLibrary.LinearColor_IsNearEqual // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x25, 0x7FF65573E150
	struct FLinearColor LinearColor_Green(); // Function Engine.KismetMathLibrary.LinearColor_Green // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573E130
	struct FLinearColor LinearColor_Gray(); // Function Engine.KismetMathLibrary.LinearColor_Gray // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573E110
	float LinearColor_GetMin(struct FLinearColor InColor); // Function Engine.KismetMathLibrary.LinearColor_GetMin // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573E090
	float LinearColor_GetMax(struct FLinearColor InColor); // Function Engine.KismetMathLibrary.LinearColor_GetMax // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573E010
	float LinearColor_GetLuminance(struct FLinearColor InColor); // Function Engine.KismetMathLibrary.LinearColor_GetLuminance // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573DF70
	float LinearColor_Distance(struct FLinearColor C1, struct FLinearColor C2); // Function Engine.KismetMathLibrary.LinearColor_Distance // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573DE70
	struct FLinearColor LinearColor_Desaturated(struct FLinearColor InColor, float InDesaturation); // Function Engine.KismetMathLibrary.LinearColor_Desaturated // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573DDA0
	struct FLinearColor LinearColor_Blue(); // Function Engine.KismetMathLibrary.LinearColor_Blue // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573DD80
	struct FLinearColor LinearColor_Black(); // Function Engine.KismetMathLibrary.LinearColor_Black // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573DD60
	struct FVector LessLess_VectorRotator(struct FVector A, struct FRotator B); // Function Engine.KismetMathLibrary.LessLess_VectorRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573D230
	bool LessEqual_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.LessEqual_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573CF40
	bool LessEqual_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.LessEqual_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573D170
	bool LessEqual_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.LessEqual_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573D0B0
	bool LessEqual_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.LessEqual_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573CFF0
	bool LessEqual_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.LessEqual_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573CF40
	bool LessEqual_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.LessEqual_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF65573CE80
	bool Less_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.Less_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573D3E0
	bool Less_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Less_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573D610
	bool Less_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Less_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573D550
	bool Less_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.Less_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573D490
	bool Less_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.Less_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573D3E0
	bool Less_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.Less_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF65573D320
	float Lerp(float A, float B, float Alpha); // Function Engine.KismetMathLibrary.Lerp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573CD70
	bool IsZero2D(struct FVector2D A); // Function Engine.KismetMathLibrary.IsZero2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573CCC0
	bool IsPointInBoxWithTransform(struct FVector Point, struct FTransform BoxWorldTransform, struct FVector BoxExtent); // Function Engine.KismetMathLibrary.IsPointInBoxWithTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x4D, 0x7FF65573CB30
	bool IsPointInBox(struct FVector Point, struct FVector BoxOrigin, struct FVector BoxExtent); // Function Engine.KismetMathLibrary.IsPointInBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x25, 0x7FF65573CA00
	bool IsNearlyZero2D(struct FVector2D A, float Tolerance); // Function Engine.KismetMathLibrary.IsNearlyZero2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xD, 0x7FF65573C900
	bool IsMorning(struct FDateTime A); // Function Engine.KismetMathLibrary.IsMorning // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573C850
	bool IsLeapYear(int32_t Year); // Function Engine.KismetMathLibrary.IsLeapYear // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x5, 0x7FF65573C7D0
	bool IsAfternoon(struct FDateTime A); // Function Engine.KismetMathLibrary.IsAfternoon // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573C720
	struct FTransform InvertTransform(struct FTransform T); // Function Engine.KismetMathLibrary.InvertTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x60, 0x7FF65573C620
	struct FRotator InverseTransformRotation(struct FTransform T, struct FRotator Rotation); // Function Engine.KismetMathLibrary.InverseTransformRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF65573C4E0
	struct FVector InverseTransformLocation(struct FTransform T, struct FVector Location); // Function Engine.KismetMathLibrary.InverseTransformLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF65573C2C0
	struct FVector InverseTransformDirection(struct FTransform T, struct FVector Direction); // Function Engine.KismetMathLibrary.InverseTransformDirection // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF65573C110
	struct FIntPoint IntPoint_Zero(); // Function Engine.KismetMathLibrary.IntPoint_Zero // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65573C0E0
	struct FIntPoint IntPoint_Up(); // Function Engine.KismetMathLibrary.IntPoint_Up // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65573C0B0
	struct FIntPoint IntPoint_Right(); // Function Engine.KismetMathLibrary.IntPoint_Right // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65573C090
	struct FIntPoint IntPoint_One(); // Function Engine.KismetMathLibrary.IntPoint_One // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65573C060
	struct FIntPoint IntPoint_Left(); // Function Engine.KismetMathLibrary.IntPoint_Left // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65573C030
	struct FIntPoint IntPoint_Down(); // Function Engine.KismetMathLibrary.IntPoint_Down // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65573C000
	bool InRange_IntInt(int32_t Value, int32_t Min, int32_t Max, bool InclusiveMin, bool InclusiveMax); // Function Engine.KismetMathLibrary.InRange_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xF, 0x7FF65573BE80
	bool InRange_Int64Int64(int64_t Value, int64_t Min, int64_t Max, bool InclusiveMin, bool InclusiveMax); // Function Engine.KismetMathLibrary.InRange_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1B, 0x7FF65573BCF0
	bool InRange_FloatFloat(float Value, float Min, float Max, bool InclusiveMin, bool InclusiveMax); // Function Engine.KismetMathLibrary.InRange_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xF, 0x7FF65573BB50
	float Hypotenuse(float Width, float Height); // Function Engine.KismetMathLibrary.Hypotenuse // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573BA90
	struct FLinearColor HSVToRGBLinear(struct FLinearColor HSV); // Function Engine.KismetMathLibrary.HSVToRGBLinear // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65573B920
	void HSVToRGB_Vector(struct FLinearColor HSV, struct FLinearColor RGB); // Function Engine.KismetMathLibrary.HSVToRGB_Vector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65573B9B0
	struct FLinearColor HSVToRGB(float H, float S, float V, float A); // Function Engine.KismetMathLibrary.HSVToRGB // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65573B7B0
	float GridSnap_Float(float Location, float GridSize); // Function Engine.KismetMathLibrary.GridSnap_Float // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573B680
	struct FVector GreaterGreater_VectorRotator(struct FVector A, struct FRotator B); // Function Engine.KismetMathLibrary.GreaterGreater_VectorRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573B1E0
	bool GreaterEqual_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.GreaterEqual_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573AEF0
	bool GreaterEqual_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.GreaterEqual_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573B120
	bool GreaterEqual_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.GreaterEqual_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573B060
	bool GreaterEqual_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.GreaterEqual_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573AFA0
	bool GreaterEqual_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.GreaterEqual_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573AEF0
	bool GreaterEqual_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.GreaterEqual_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF65573AE30
	bool Greater_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.Greater_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573B390
	bool Greater_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Greater_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573B5C0
	bool Greater_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Greater_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573B500
	bool Greater_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.Greater_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65573B440
	bool Greater_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.Greater_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65573B390
	bool Greater_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.Greater_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF65573B2D0
	int32_t GetYear(struct FDateTime A); // Function Engine.KismetMathLibrary.GetYear // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573ADB0
	void GetYawPitchFromVector(struct FVector InVec, float Yaw, float Pitch); // Function Engine.KismetMathLibrary.GetYawPitchFromVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573AC80
	struct FVector GetVectorArrayAverage(struct TArray<struct FVector> Vectors); // Function Engine.KismetMathLibrary.GetVectorArrayAverage // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65573ABC0
	struct FVector GetUpVector(struct FRotator InRot); // Function Engine.KismetMathLibrary.GetUpVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65573AB20
	float GetTotalSeconds(struct FTimespan A); // Function Engine.KismetMathLibrary.GetTotalSeconds // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573AAA0
	float GetTotalMinutes(struct FTimespan A); // Function Engine.KismetMathLibrary.GetTotalMinutes // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573AA20
	float GetTotalMilliseconds(struct FTimespan A); // Function Engine.KismetMathLibrary.GetTotalMilliseconds // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573A9A0
	float GetTotalHours(struct FTimespan A); // Function Engine.KismetMathLibrary.GetTotalHours // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573A920
	float GetTotalDays(struct FTimespan A); // Function Engine.KismetMathLibrary.GetTotalDays // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573A8A0
	struct FTimespan GetTimeOfDay(struct FDateTime A); // Function Engine.KismetMathLibrary.GetTimeOfDay // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65573A820
	float GetTAU(); // Function Engine.KismetMathLibrary.GetTAU // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF65573A800
	void GetSlopeDegreeAngles(struct FVector MyRightYAxis, struct FVector FloorNormal, struct FVector UpVector, float OutSlopePitchDegreeAngle, float OutSlopeRollDegreeAngle); // Function Engine.KismetMathLibrary.GetSlopeDegreeAngles // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF65573A620
	int32_t GetSeconds(struct FTimespan A); // Function Engine.KismetMathLibrary.GetSeconds // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573A570
	int32_t GetSecond(struct FDateTime A); // Function Engine.KismetMathLibrary.GetSecond // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65573A570
	struct FVector2D GetRotated2D(struct FVector2D A, float AngleDeg); // Function Engine.KismetMathLibrary.GetRotated2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65573A360
	struct FVector GetRightVector(struct FRotator InRot); // Function Engine.KismetMathLibrary.GetRightVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65573A2C0
	struct FVector GetReflectionVector(struct FVector Direction, struct FVector SurfaceNormal); // Function Engine.KismetMathLibrary.GetReflectionVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65573A1D0
	float GetPointDistanceToSegment(struct FVector Point, struct FVector SegmentStart, struct FVector SegmentEnd); // Function Engine.KismetMathLibrary.GetPointDistanceToSegment // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65573A0A0
	float GetPointDistanceToLine(struct FVector Point, struct FVector LineOrigin, struct FVector LineDirection); // Function Engine.KismetMathLibrary.GetPointDistanceToLine // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655739F70
	float GetPI(); // Function Engine.KismetMathLibrary.GetPI // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF655739F50
	int32_t GetMonth(struct FDateTime A); // Function Engine.KismetMathLibrary.GetMonth // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739ED0
	int32_t GetMinutes(struct FTimespan A); // Function Engine.KismetMathLibrary.GetMinutes // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739E20
	int32_t GetMinute(struct FDateTime A); // Function Engine.KismetMathLibrary.GetMinute // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739E20
	float GetMinElement(struct FVector A); // Function Engine.KismetMathLibrary.GetMinElement // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655739DA0
	float GetMin2D(struct FVector2D A); // Function Engine.KismetMathLibrary.GetMin2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739D20
	int32_t GetMilliseconds(struct FTimespan A); // Function Engine.KismetMathLibrary.GetMilliseconds // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739C70
	int32_t GetMillisecond(struct FDateTime A); // Function Engine.KismetMathLibrary.GetMillisecond // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739BC0
	float GetMaxElement(struct FVector A); // Function Engine.KismetMathLibrary.GetMaxElement // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655739B40
	float GetMax2D(struct FVector2D A); // Function Engine.KismetMathLibrary.GetMax2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739AC0
	int32_t GetHours(struct FTimespan A); // Function Engine.KismetMathLibrary.GetHours // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739A10
	int32_t GetHour12(struct FDateTime A); // Function Engine.KismetMathLibrary.GetHour12 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739990
	int32_t GetHour(struct FDateTime A); // Function Engine.KismetMathLibrary.GetHour // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739A10
	struct FVector GetForwardVector(struct FRotator InRot); // Function Engine.KismetMathLibrary.GetForwardVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557398F0
	struct FTimespan GetDuration(struct FTimespan A); // Function Engine.KismetMathLibrary.GetDuration // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655739870
	struct FVector GetDirectionUnitVector(struct FVector From, struct FVector To); // Function Engine.KismetMathLibrary.GetDirectionUnitVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF6557396A0
	int32_t GetDays(struct FTimespan A); // Function Engine.KismetMathLibrary.GetDays // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739620
	int32_t GetDayOfYear(struct FDateTime A); // Function Engine.KismetMathLibrary.GetDayOfYear // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6557395A0
	int32_t GetDay(struct FDateTime A); // Function Engine.KismetMathLibrary.GetDay // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655739520
	struct FDateTime GetDate(struct FDateTime A); // Function Engine.KismetMathLibrary.GetDate // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655739490
	void GetAzimuthAndElevation(struct FVector InDirection, struct FTransform ReferenceFrame, float Azimuth, float Elevation); // Function Engine.KismetMathLibrary.GetAzimuthAndElevation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF6557392B0
	void GetAxes(struct FRotator A, struct FVector X, struct FVector Y, struct FVector Z); // Function Engine.KismetMathLibrary.GetAxes // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655739130
	float GetAbsMax2D(struct FVector2D A); // Function Engine.KismetMathLibrary.GetAbsMax2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6557390A0
	struct FVector2D GetAbs2D(struct FVector2D A); // Function Engine.KismetMathLibrary.GetAbs2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655739010
	struct FIntVector FTruncVector(struct FVector InVector); // Function Engine.KismetMathLibrary.FTruncVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655738320
	int64_t FTrunc64(float A); // Function Engine.KismetMathLibrary.FTrunc64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738220
	int32_t FTrunc(float A); // Function Engine.KismetMathLibrary.FTrunc // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557382A0
	struct FTimespan FromSeconds(float Seconds); // Function Engine.KismetMathLibrary.FromSeconds // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738F80
	struct FTimespan FromMinutes(float Minutes); // Function Engine.KismetMathLibrary.FromMinutes // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738EF0
	struct FTimespan FromMilliseconds(float Milliseconds); // Function Engine.KismetMathLibrary.FromMilliseconds // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738E60
	struct FTimespan FromHours(float Hours); // Function Engine.KismetMathLibrary.FromHours // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738DD0
	struct FTimespan FromDays(float Days); // Function Engine.KismetMathLibrary.FromDays // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738D40
	float Fraction(float A); // Function Engine.KismetMathLibrary.Fraction // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655738CB0
	int32_t FMod(float Dividend, float Divisor, float Remainder); // Function Engine.KismetMathLibrary.FMod // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738110
	float FMin(float A, float B); // Function Engine.KismetMathLibrary.FMin // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655738050
	float FMax(float A, float B); // Function Engine.KismetMathLibrary.FMax // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655737F90
	float FloatSpringInterp(float Current, float Target, struct FFloatSpringState SpringState, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass); // Function Engine.KismetMathLibrary.FloatSpringInterp // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x24, 0x7FF655738AA0
	float FixedTurn(float InCurrent, float InDesired, float InDeltaRate); // Function Engine.KismetMathLibrary.FixedTurn // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655738990
	float FInterpTo_Constant(float Current, float Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.FInterpTo_Constant // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655737E40
	float FInterpTo(float Current, float Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.FInterpTo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655737CF0
	float FInterpEaseInOut(float A, float B, float Alpha, float Exponent); // Function Engine.KismetMathLibrary.FInterpEaseInOut // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655737BA0
	void FindNearestPointsOnLineSegments(struct FVector Segment1Start, struct FVector Segment1End, struct FVector Segment2Start, struct FVector Segment2End, struct FVector Segment1Point, struct FVector Segment2Point); // Function Engine.KismetMathLibrary.FindNearestPointsOnLineSegments // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF655738780
	struct FRotator FindLookAtRotation(struct FVector Start, struct FVector Target); // Function Engine.KismetMathLibrary.FindLookAtRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655738640
	struct FVector FindClosestPointOnSegment(struct FVector Point, struct FVector SegmentStart, struct FVector SegmentEnd); // Function Engine.KismetMathLibrary.FindClosestPointOnSegment // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655738500
	struct FVector FindClosestPointOnLine(struct FVector Point, struct FVector LineOrigin, struct FVector LineDirection); // Function Engine.KismetMathLibrary.FindClosestPointOnLine // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557383C0
	int64_t FFloor64(float A); // Function Engine.KismetMathLibrary.FFloor64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655737A50
	int32_t FFloor(float A); // Function Engine.KismetMathLibrary.FFloor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655737B10
	float FClamp(float Value, float Min, float Max); // Function Engine.KismetMathLibrary.FClamp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655737940
	int64_t FCeil64(float A); // Function Engine.KismetMathLibrary.FCeil64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557377E0
	int32_t FCeil(float A); // Function Engine.KismetMathLibrary.FCeil // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557378A0
	float Exp(float A); // Function Engine.KismetMathLibrary.Exp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655737760
	bool EqualExactly_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.EqualExactly_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF6557375B0
	bool EqualExactly_Vector4Vector4(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.EqualExactly_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655737480
	bool EqualExactly_Vector2DVector2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.EqualExactly_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6557373B0
	bool EqualEqual_VectorVector(struct FVector A, struct FVector B, float ErrorTolerance); // Function Engine.KismetMathLibrary.EqualEqual_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1D, 0x7FF655737270
	bool EqualEqual_Vector4Vector4(struct FVector4 A, struct FVector4 B, float ErrorTolerance); // Function Engine.KismetMathLibrary.EqualEqual_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x25, 0x7FF6557370E0
	bool EqualEqual_Vector2DVector2D(struct FVector2D A, struct FVector2D B, float ErrorTolerance); // Function Engine.KismetMathLibrary.EqualEqual_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x15, 0x7FF655736FC0
	bool EqualEqual_TransformTransform(struct FTransform A, struct FTransform B); // Function Engine.KismetMathLibrary.EqualEqual_TransformTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x61, 0x7FF655736E40
	bool EqualEqual_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.EqualEqual_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655736610
	bool EqualEqual_RotatorRotator(struct FRotator A, struct FRotator B, float ErrorTolerance); // Function Engine.KismetMathLibrary.EqualEqual_RotatorRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1D, 0x7FF655736C30
	bool EqualEqual_QuatQuat(struct FQuat A, struct FQuat B, float Tolerance); // Function Engine.KismetMathLibrary.EqualEqual_QuatQuat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x25, 0x7FF655736AC0
	bool EqualEqual_ObjectObject(struct UObject* A, struct UObject* B); // Function Engine.KismetMathLibrary.EqualEqual_ObjectObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655736550
	bool EqualEqual_NameName(struct FName A, struct FName B); // Function Engine.KismetMathLibrary.EqualEqual_NameName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655736550
	bool EqualEqual_MatrixMatrix(struct FMatrix A, struct FMatrix B, float Tolerance); // Function Engine.KismetMathLibrary.EqualEqual_MatrixMatrix // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x85, 0x7FF655736930
	bool EqualEqual_LinearColorLinearColor(struct FLinearColor A, struct FLinearColor B); // Function Engine.KismetMathLibrary.EqualEqual_LinearColorLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655736850
	bool EqualEqual_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.EqualEqual_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF655736790
	bool EqualEqual_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.EqualEqual_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655736550
	bool EqualEqual_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.EqualEqual_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF6557366C0
	bool EqualEqual_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.EqualEqual_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655736610
	bool EqualEqual_ClassClass(class UObject* A, class UObject* B); // Function Engine.KismetMathLibrary.EqualEqual_ClassClass // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655736550
	bool EqualEqual_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.EqualEqual_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655736490
	bool EqualEqual_BoolBool(bool A, bool B); // Function Engine.KismetMathLibrary.EqualEqual_BoolBool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF6557363C0
	bool Equal_IntPointIntPoint(struct FIntPoint A, struct FIntPoint B); // Function Engine.KismetMathLibrary.Equal_IntPointIntPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655737690
	float Ease(float A, float B, float Alpha, enum class EEasingFunc EasingFunc, float BlendExp, int32_t Steps); // Function Engine.KismetMathLibrary.Ease // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655736200
	struct FVector DynamicWeightedMovingAverage_FVector(struct FVector CurrentSample, struct FVector PreviousSample, float MaxDistance, float MinWeight, float MaxWeight); // Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655735EB0
	struct FRotator DynamicWeightedMovingAverage_FRotator(struct FRotator CurrentSample, struct FRotator PreviousSample, float MaxDistance, float MinWeight, float MaxWeight); // Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655735D00
	float DynamicWeightedMovingAverage_Float(float CurrentSample, float PreviousSample, float MaxDistance, float MinWeight, float MaxWeight); // Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_Float // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655736060
	float DotProduct2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.DotProduct2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655735B70
	float Dot_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Dot_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655735C30
	struct FVector Divide_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Divide_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655735A40
	struct FVector Divide_VectorInt(struct FVector A, int32_t B); // Function Engine.KismetMathLibrary.Divide_VectorInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655735900
	struct FVector Divide_VectorFloat(struct FVector A, float B); // Function Engine.KismetMathLibrary.Divide_VectorFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF6557357D0
	struct FVector4 Divide_Vector4Vector4(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.Divide_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655735690
	struct FVector2D Divide_Vector2DVector2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.Divide_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655735590
	struct FVector2D Divide_Vector2DFloat(struct FVector2D A, float B); // Function Engine.KismetMathLibrary.Divide_Vector2DFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655735480
	struct FTimespan Divide_TimespanFloat(struct FTimespan A, float Scalar); // Function Engine.KismetMathLibrary.Divide_TimespanFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557353B0
	struct FLinearColor Divide_LinearColorLinearColor(struct FLinearColor A, struct FLinearColor B); // Function Engine.KismetMathLibrary.Divide_LinearColorLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557352C0
	struct FIntPoint Divide_IntPointIntPoint(struct FIntPoint A, struct FIntPoint B); // Function Engine.KismetMathLibrary.Divide_IntPointIntPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557351D0
	struct FIntPoint Divide_IntPointInt(struct FIntPoint A, int32_t B); // Function Engine.KismetMathLibrary.Divide_IntPointInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF6557350E0
	int32_t Divide_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Divide_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655735000
	int64_t Divide_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Divide_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655734F20
	float Divide_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.Divide_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655734DA0
	enum class None Divide_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.Divide_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655734CD0
	float DistanceSquared2D(struct FVector2D v1, struct FVector2D v2); // Function Engine.KismetMathLibrary.DistanceSquared2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655734C00
	float Distance2D(struct FVector2D v1, struct FVector2D v2); // Function Engine.KismetMathLibrary.Distance2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655734B30
	float DegTan(float A); // Function Engine.KismetMathLibrary.DegTan // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655734A20
	float DegSin(float A); // Function Engine.KismetMathLibrary.DegSin // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655734990
	float DegreesToRadians(float A); // Function Engine.KismetMathLibrary.DegreesToRadians // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655734AB0
	float DegCos(float A); // Function Engine.KismetMathLibrary.DegCos // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655734900
	float DegAtan2(float Y, float X); // Function Engine.KismetMathLibrary.DegAtan2 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6557347A0
	float DegAtan(float A); // Function Engine.KismetMathLibrary.DegAtan // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655734870
	float DegAsin(float A); // Function Engine.KismetMathLibrary.DegAsin // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655734700
	float DegAcos(float A); // Function Engine.KismetMathLibrary.DegAcos // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655734660
	int32_t DaysInYear(int32_t Year); // Function Engine.KismetMathLibrary.DaysInYear // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557345E0
	int32_t DaysInMonth(int32_t Year, int32_t Month); // Function Engine.KismetMathLibrary.DaysInMonth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655734500
	struct FDateTime DateTimeMinValue(); // Function Engine.KismetMathLibrary.DateTimeMinValue // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF654FAEC00
	struct FDateTime DateTimeMaxValue(); // Function Engine.KismetMathLibrary.DateTimeMaxValue // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557344D0
	bool DateTimeFromString(struct FString DateTimeString, struct FDateTime Result); // Function Engine.KismetMathLibrary.DateTimeFromString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655734390
	bool DateTimeFromIsoString(struct FString IsoString, struct FDateTime Result); // Function Engine.KismetMathLibrary.DateTimeFromIsoString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655734250
	float CrossProduct2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.CrossProduct2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655734080
	struct FVector Cross_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Cross_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655734140
	struct FVector CreateVectorFromYawPitch(float Yaw, float Pitch, float Length); // Function Engine.KismetMathLibrary.CreateVectorFromYawPitch // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655733F60
	float Cos(float A); // Function Engine.KismetMathLibrary.Cos // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655733EE0
	struct FTransform ConvertTransformToRelative(struct FTransform Transform, struct FTransform ParentTransform); // Function Engine.KismetMathLibrary.ConvertTransformToRelative // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF655733D50
	struct FVector2D Conv_VectorToVector2D(struct FVector InVector); // Function Engine.KismetMathLibrary.Conv_VectorToVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655733CD0
	struct FTransform Conv_VectorToTransform(struct FVector InLocation); // Function Engine.KismetMathLibrary.Conv_VectorToTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655733C20
	struct FRotator Conv_VectorToRotator(struct FVector InVec); // Function Engine.KismetMathLibrary.Conv_VectorToRotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655733B80
	struct FQuat Conv_VectorToQuaterion(struct FVector InVec); // Function Engine.KismetMathLibrary.Conv_VectorToQuaterion // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655733AF0
	struct FLinearColor Conv_VectorToLinearColor(struct FVector InVec); // Function Engine.KismetMathLibrary.Conv_VectorToLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655733A60
	struct FVector Conv_Vector4ToVector(struct FVector4 InVector4); // Function Engine.KismetMathLibrary.Conv_Vector4ToVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF6557339B0
	struct FRotator Conv_Vector4ToRotator(struct FVector4 InVec); // Function Engine.KismetMathLibrary.Conv_Vector4ToRotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655733900
	struct FQuat Conv_Vector4ToQuaterion(struct FVector4 InVec); // Function Engine.KismetMathLibrary.Conv_Vector4ToQuaterion // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655733860
	struct FVector Conv_Vector2DToVector(struct FVector2D InVector2D, float Z); // Function Engine.KismetMathLibrary.Conv_Vector2DToVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655733790
	struct FIntPoint Conv_Vector2DToIntPoint(struct FVector2D InVector2D); // Function Engine.KismetMathLibrary.Conv_Vector2DToIntPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557336E0
	struct FMatrix Conv_TransformToMatrix(struct FTransform Transform); // Function Engine.KismetMathLibrary.Conv_TransformToMatrix // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x70, 0x7FF6557335D0
	struct FVector Conv_RotatorToVector(struct FRotator InRot); // Function Engine.KismetMathLibrary.Conv_RotatorToVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655733530
	struct FTransform Conv_RotatorToTransform(struct FRotator InRotator); // Function Engine.KismetMathLibrary.Conv_RotatorToTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655733480
	struct FTransform Conv_MatrixToTransform(struct FMatrix InMatrix); // Function Engine.KismetMathLibrary.Conv_MatrixToTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x70, 0x7FF6557333D0
	struct FRotator Conv_MatrixToRotator(struct FMatrix InMatrix); // Function Engine.KismetMathLibrary.Conv_MatrixToRotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x4C, 0x7FF655733330
	struct FVector Conv_LinearColorToVector(struct FLinearColor InLinearColor); // Function Engine.KismetMathLibrary.Conv_LinearColorToVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF6557332A0
	struct FColor Conv_LinearColorToColor(struct FLinearColor InLinearColor, bool InUseSRGB); // Function Engine.KismetMathLibrary.Conv_LinearColorToColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557331C0
	struct FVector Conv_IntVectorToVector(struct FIntVector InIntVector); // Function Engine.KismetMathLibrary.Conv_IntVectorToVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557330F0
	struct FIntVector Conv_IntToIntVector(int32_t inInt); // Function Engine.KismetMathLibrary.Conv_IntToIntVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655733070
	int64_t Conv_IntToInt64(int32_t inInt); // Function Engine.KismetMathLibrary.Conv_IntToInt64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655732FF0
	float Conv_IntToFloat(int32_t inInt); // Function Engine.KismetMathLibrary.Conv_IntToFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655732F70
	enum class None Conv_IntToByte(int32_t inInt); // Function Engine.KismetMathLibrary.Conv_IntToByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x5, 0x7FF655732EF0
	bool Conv_IntToBool(int32_t inInt); // Function Engine.KismetMathLibrary.Conv_IntToBool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x5, 0x7FF655732920
	struct FVector2D Conv_IntPointToVector2D(struct FIntPoint InIntPoint); // Function Engine.KismetMathLibrary.Conv_IntPointToVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655732E60
	int32_t Conv_Int64ToInt(int64_t inInt); // Function Engine.KismetMathLibrary.Conv_Int64ToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655732DE0
	enum class None Conv_Int64ToByte(int64_t inInt); // Function Engine.KismetMathLibrary.Conv_Int64ToByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF655732D60
	struct FVector Conv_FloatToVector(float InFloat); // Function Engine.KismetMathLibrary.Conv_FloatToVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655732CD0
	struct FLinearColor Conv_FloatToLinearColor(float InFloat); // Function Engine.KismetMathLibrary.Conv_FloatToLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655732C30
	struct FLinearColor Conv_ColorToLinearColor(struct FColor InColor); // Function Engine.KismetMathLibrary.Conv_ColorToLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655732BA0
	int32_t Conv_ByteToInt(enum class None InByte); // Function Engine.KismetMathLibrary.Conv_ByteToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655732B30
	float Conv_ByteToFloat(enum class None InByte); // Function Engine.KismetMathLibrary.Conv_ByteToFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655732AB0
	int32_t Conv_BoolToInt(bool InBool); // Function Engine.KismetMathLibrary.Conv_BoolToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655732A30
	float Conv_BoolToFloat(bool InBool); // Function Engine.KismetMathLibrary.Conv_BoolToFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557329A0
	enum class None Conv_BoolToByte(bool InBool); // Function Engine.KismetMathLibrary.Conv_BoolToByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x2, 0x7FF655732920
	struct FTransform ComposeTransforms(struct FTransform A, struct FTransform B); // Function Engine.KismetMathLibrary.ComposeTransforms // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x90, 0x7FF655732790
	struct FRotator ComposeRotators(struct FRotator A, struct FRotator B); // Function Engine.KismetMathLibrary.ComposeRotators // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF6557326A0
	bool ClassIsChildOf(class UObject* TestClass, class UObject* ParentClass); // Function Engine.KismetMathLibrary.ClassIsChildOf // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF6557325E0
	struct FVector ClampVectorSize(struct FVector A, float Min, float Max); // Function Engine.KismetMathLibrary.ClampVectorSize // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655732410
	int64_t ClampInt64(int64_t Value, int64_t Min, int64_t Max); // Function Engine.KismetMathLibrary.ClampInt64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655732310
	float ClampAxis(float Angle); // Function Engine.KismetMathLibrary.ClampAxis // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655732290
	struct FVector2D ClampAxes2D(struct FVector2D A, float MinAxisVal, float MaxAxisVal); // Function Engine.KismetMathLibrary.ClampAxes2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655732170
	float ClampAngle(float AngleDegrees, float MinAngleDegrees, float MaxAngleDegrees); // Function Engine.KismetMathLibrary.ClampAngle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655732060
	int32_t Clamp(int32_t Value, int32_t Min, int32_t Max); // Function Engine.KismetMathLibrary.Clamp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655731F70
	struct FLinearColor CInterpTo(struct FLinearColor Current, struct FLinearColor Target, float DeltaTime, float InterpSpeed); // Function Engine.KismetMathLibrary.CInterpTo // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF655731DF0
	void BreakVector4(struct FVector4 InVec, float X, float Y, float Z, float W); // Function Engine.KismetMathLibrary.BreakVector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655731A90
	void BreakVector2D(struct FVector2D InVec, float X, float Y); // Function Engine.KismetMathLibrary.BreakVector2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655731970
	void BreakVector(struct FVector InVec, float X, float Y, float Z); // Function Engine.KismetMathLibrary.BreakVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655731C80
	void BreakTransform(struct FTransform InTransform, struct FVector Location, struct FRotator Rotation, struct FVector Scale); // Function Engine.KismetMathLibrary.BreakTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x54, 0x7FF655731740
	void BreakTimespan2(struct FTimespan InTimespan, int32_t Days, int32_t Hours, int32_t Minutes, int32_t Seconds, int32_t FractionNano); // Function Engine.KismetMathLibrary.BreakTimespan2 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF6557312E0
	void BreakTimespan(struct FTimespan InTimespan, int32_t Days, int32_t Hours, int32_t Minutes, int32_t Seconds, int32_t Milliseconds); // Function Engine.KismetMathLibrary.BreakTimespan // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF655731510
	void BreakRotIntoAxes(struct FRotator InRot, struct FVector X, struct FVector Y, struct FVector Z); // Function Engine.KismetMathLibrary.BreakRotIntoAxes // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655730FF0
	void BreakRotator(struct FRotator InRot, float Roll, float Pitch, float Yaw); // Function Engine.KismetMathLibrary.BreakRotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655731170
	void BreakRandomStream(struct FRandomStream InRandomStream, int32_t InitialSeed); // Function Engine.KismetMathLibrary.BreakRandomStream // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655730F10
	void BreakQualifiedFrameTime(struct FQualifiedFrameTime InFrameTime, struct FFrameNumber Frame, struct FFrameRate FrameRate, float SubFrame); // Function Engine.KismetMathLibrary.BreakQualifiedFrameTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655730D70
	void BreakFrameRate(struct FFrameRate InFrameRate, int32_t Numerator, int32_t Denominator); // Function Engine.KismetMathLibrary.BreakFrameRate // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655730C40
	void BreakDateTime(struct FDateTime InDateTime, int32_t Year, int32_t Month, int32_t Day, int32_t Hour, int32_t Minute, int32_t Second, int32_t Millisecond); // Function Engine.KismetMathLibrary.BreakDateTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF655730990
	void BreakColor(struct FLinearColor InColor, float R, float G, float B, float A); // Function Engine.KismetMathLibrary.BreakColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557307B0
	bool BooleanXOR(bool A, bool B); // Function Engine.KismetMathLibrary.BooleanXOR // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF6557306F0
	bool BooleanOR(bool A, bool B); // Function Engine.KismetMathLibrary.BooleanOR // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655730620
	bool BooleanNOR(bool A, bool B); // Function Engine.KismetMathLibrary.BooleanNOR // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655730550
	bool BooleanNAND(bool A, bool B); // Function Engine.KismetMathLibrary.BooleanNAND // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655730480
	bool BooleanAND(bool A, bool B); // Function Engine.KismetMathLibrary.BooleanAND // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF6557303B0
	enum class None BMin(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.BMin // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF6557302F0
	enum class None BMax(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.BMax // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF655730230
	float Atan2(float Y, float X); // Function Engine.KismetMathLibrary.Atan2 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF6557300F0
	float Atan(float A); // Function Engine.KismetMathLibrary.Atan // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6557301B0
	float Asin(float A); // Function Engine.KismetMathLibrary.Asin // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655730050
	int32_t And_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.And_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65572FF90
	int64_t And_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.And_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65572FED0
	struct FVector Add_VectorVector(struct FVector A, struct FVector B); // Function Engine.KismetMathLibrary.Add_VectorVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF65572FDF0
	struct FVector Add_VectorInt(struct FVector A, int32_t B); // Function Engine.KismetMathLibrary.Add_VectorInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65572FD00
	struct FVector Add_VectorFloat(struct FVector A, float B); // Function Engine.KismetMathLibrary.Add_VectorFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65572FC20
	struct FVector4 Add_Vector4Vector4(struct FVector4 A, struct FVector4 B); // Function Engine.KismetMathLibrary.Add_Vector4Vector4 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65572FAE0
	struct FVector2D Add_Vector2DVector2D(struct FVector2D A, struct FVector2D B); // Function Engine.KismetMathLibrary.Add_Vector2DVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65572FA20
	struct FVector2D Add_Vector2DFloat(struct FVector2D A, float B); // Function Engine.KismetMathLibrary.Add_Vector2DFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65572F950
	struct FTimespan Add_TimespanTimespan(struct FTimespan A, struct FTimespan B); // Function Engine.KismetMathLibrary.Add_TimespanTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65572F120
	struct FQuat Add_QuatQuat(struct FQuat A, struct FQuat B); // Function Engine.KismetMathLibrary.Add_QuatQuat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65572F830
	struct FMatrix Add_MatrixMatrix(struct FMatrix A, struct FMatrix B); // Function Engine.KismetMathLibrary.Add_MatrixMatrix // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0xC0, 0x7FF65572F6A0
	struct FLinearColor Add_LinearColorLinearColor(struct FLinearColor A, struct FLinearColor B); // Function Engine.KismetMathLibrary.Add_LinearColorLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65572F5B0
	struct FIntPoint Add_IntPointIntPoint(struct FIntPoint A, struct FIntPoint B); // Function Engine.KismetMathLibrary.Add_IntPointIntPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65572F4E0
	struct FIntPoint Add_IntPointInt(struct FIntPoint A, int32_t B); // Function Engine.KismetMathLibrary.Add_IntPointInt // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65572F410
	int32_t Add_IntInt(int32_t A, int32_t B); // Function Engine.KismetMathLibrary.Add_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65572F350
	int64_t Add_Int64Int64(int64_t A, int64_t B); // Function Engine.KismetMathLibrary.Add_Int64Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65572F290
	float Add_FloatFloat(float A, float B); // Function Engine.KismetMathLibrary.Add_FloatFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65572F1D0
	struct FDateTime Add_DateTimeTimespan(struct FDateTime A, struct FTimespan B); // Function Engine.KismetMathLibrary.Add_DateTimeTimespan // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65572F120
	struct FDateTime Add_DateTimeDateTime(struct FDateTime A, struct FDateTime B); // Function Engine.KismetMathLibrary.Add_DateTimeDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65572F120
	enum class None Add_ByteByte(enum class None A, enum class None B); // Function Engine.KismetMathLibrary.Add_ByteByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x3, 0x7FF65572F070
	float Acos(float A); // Function Engine.KismetMathLibrary.Acos // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65572EFD0
	int64_t Abs_Int64(int64_t A); // Function Engine.KismetMathLibrary.Abs_Int64 // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65572EEC0
	int32_t Abs_Int(int32_t A); // Function Engine.KismetMathLibrary.Abs_Int // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65572EF50
	float Abs(float A); // Function Engine.KismetMathLibrary.Abs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65572EE40
};

// Class Engine.KismetNodeHelperLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetNodeHelperLibrary : UBlueprintFunctionLibrary {

	void MarkBit(int32_t Data, int32_t Index); // Function Engine.KismetNodeHelperLibrary.MarkBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x8, 0x7FF65575B6F0
	bool HasUnmarkedBit(int32_t Data, int32_t NumBits); // Function Engine.KismetNodeHelperLibrary.HasUnmarkedBit // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF65575AB50
	bool HasMarkedBit(int32_t Data, int32_t NumBits); // Function Engine.KismetNodeHelperLibrary.HasMarkedBit // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF65575AA90
	enum class None GetValidValue(struct UEnum* Enum, enum class None EnumeratorValue); // Function Engine.KismetNodeHelperLibrary.GetValidValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xA, 0x7FF65575A9D0
	int32_t GetUnmarkedBit(int32_t Data, int32_t StartIdx, int32_t NumBits, bool bRandom); // Function Engine.KismetNodeHelperLibrary.GetUnmarkedBit // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF65575A8A0
	int32_t GetRandomUnmarkedBit(int32_t Data, int32_t StartIdx, int32_t NumBits); // Function Engine.KismetNodeHelperLibrary.GetRandomUnmarkedBit // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65575A650
	int32_t GetFirstUnmarkedBit(int32_t Data, int32_t StartIdx, int32_t NumBits); // Function Engine.KismetNodeHelperLibrary.GetFirstUnmarkedBit // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65575A560
	enum class None GetEnumeratorValueFromIndex(struct UEnum* Enum, enum class None EnumeratorIndex); // Function Engine.KismetNodeHelperLibrary.GetEnumeratorValueFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xA, 0x7FF65575A4A0
	struct FString GetEnumeratorUserFriendlyName(struct UEnum* Enum, enum class None EnumeratorValue); // Function Engine.KismetNodeHelperLibrary.GetEnumeratorUserFriendlyName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65575A390
	struct FName GetEnumeratorName(struct UEnum* Enum, enum class None EnumeratorValue); // Function Engine.KismetNodeHelperLibrary.GetEnumeratorName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65575A2D0
	void ClearBit(int32_t Data, int32_t Index); // Function Engine.KismetNodeHelperLibrary.ClearBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x8, 0x7FF655757E70
	void ClearAllBits(int32_t Data); // Function Engine.KismetNodeHelperLibrary.ClearAllBits // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x4, 0x7FF655757DF0
	bool BitIsMarked(int32_t Data, int32_t Index); // Function Engine.KismetNodeHelperLibrary.BitIsMarked // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557567F0
};

// Class Engine.KismetRenderingLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetRenderingLibrary : UBlueprintFunctionLibrary {

	void SetCastInsetShadowForAllAttachments(struct UPrimitiveComponent* PrimitiveComponent, bool bCastInsetShadow, bool bLightAttachmentsAsGroup); // Function Engine.KismetRenderingLibrary.SetCastInsetShadowForAllAttachments // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0xA, 0x7FF65575CAF0
	struct UTexture2D* RenderTargetCreateStaticTexture2DEditorOnly(struct UTextureRenderTarget2D* RenderTarget, struct FString Name, enum class TextureCompressionSettings CompressionSettings, enum class TextureMipGenSettings MipSettings); // Function Engine.KismetRenderingLibrary.RenderTargetCreateStaticTexture2DEditorOnly // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF65575C1E0
	void ReleaseRenderTarget2D(struct UTextureRenderTarget2D* TextureRenderTarget); // Function Engine.KismetRenderingLibrary.ReleaseRenderTarget2D // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65575C170
	struct FColor ReadRenderTargetUV(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, float U, float V); // Function Engine.KismetRenderingLibrary.ReadRenderTargetUV // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF65575C030
	struct FLinearColor ReadRenderTargetRawUV(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, float U, float V); // Function Engine.KismetRenderingLibrary.ReadRenderTargetRawUV // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF65575BED0
	struct FLinearColor ReadRenderTargetRawPixel(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, int32_t X, int32_t Y); // Function Engine.KismetRenderingLibrary.ReadRenderTargetRawPixel // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF65575BD80
	struct FColor ReadRenderTargetPixel(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, int32_t X, int32_t Y); // Function Engine.KismetRenderingLibrary.ReadRenderTargetPixel // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF65575BC40
	struct FSkelMeshSkinWeightInfo MakeSkinWeightInfo(int32_t Bone0, enum class None Weight0, int32_t Bone1, enum class None Weight1, int32_t Bone2, enum class None Weight2, int32_t Bone3, enum class None Weight3); // Function Engine.KismetRenderingLibrary.MakeSkinWeightInfo // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x5C, 0x7FF65575B490
	struct UTexture2D* ImportFileAsTexture2D(struct UObject* WorldContextObject, struct FString Filename); // Function Engine.KismetRenderingLibrary.ImportFileAsTexture2D // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF65575AD00
	struct UTexture2D* ImportBufferAsTexture2D(struct UObject* WorldContextObject, struct TArray<enum class None> Buffer); // Function Engine.KismetRenderingLibrary.ImportBufferAsTexture2D // (Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF65575AC10
	void ExportTexture2D(struct UObject* WorldContextObject, struct UTexture2D* Texture, struct FString FilePath, struct FString Filename); // Function Engine.KismetRenderingLibrary.ExportTexture2D // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF655759E10
	void ExportRenderTarget(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, struct FString FilePath, struct FString Filename); // Function Engine.KismetRenderingLibrary.ExportRenderTarget // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF655759CB0
	void EndDrawCanvasToRenderTarget(struct UObject* WorldContextObject, struct FDrawToRenderTargetContext Context); // Function Engine.KismetRenderingLibrary.EndDrawCanvasToRenderTarget // (Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF6557598D0
	void DrawMaterialToRenderTarget(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, struct UMaterialInterface* Material); // Function Engine.KismetRenderingLibrary.DrawMaterialToRenderTarget // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6557597E0
	struct UTextureRenderTarget2D* CreateRenderTarget2D(struct UObject* WorldContextObject, int32_t Width, int32_t Height, enum class ETextureRenderTargetFormat Format, struct FLinearColor ClearColor, bool bAutoGenerateMipMaps); // Function Engine.KismetRenderingLibrary.CreateRenderTarget2D // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x30, 0x7FF655759510
	void ConvertRenderTargetToTexture2DEditorOnly(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* RenderTarget, struct UTexture2D* Texture); // Function Engine.KismetRenderingLibrary.ConvertRenderTargetToTexture2DEditorOnly // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF655759420
	void ClearRenderTarget2D(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, struct FLinearColor ClearColor); // Function Engine.KismetRenderingLibrary.ClearRenderTarget2D // (Final|RequiredAPI|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF655757F40
	void BreakSkinWeightInfo(struct FSkelMeshSkinWeightInfo InWeight, int32_t Bone0, enum class None Weight0, int32_t Bone1, enum class None Weight1, int32_t Bone2, enum class None Weight2, int32_t Bone3, enum class None Weight3); // Function Engine.KismetRenderingLibrary.BreakSkinWeightInfo // (Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x59, 0x7FF6557568B0
	void BeginDrawCanvasToRenderTarget(struct UObject* WorldContextObject, struct UTextureRenderTarget2D* TextureRenderTarget, struct UCanvas* Canvas, struct FVector2D Size, struct FDrawToRenderTargetContext Context); // Function Engine.KismetRenderingLibrary.BeginDrawCanvasToRenderTarget // (Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x30, 0x7FF655756630
};

// Class Engine.KismetStringLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetStringLibrary : UBlueprintFunctionLibrary {

	struct FString TrimTrailing(struct FString SourceString); // Function Engine.KismetStringLibrary.TrimTrailing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65575D2C0
	struct FString Trim(struct FString SourceString); // Function Engine.KismetStringLibrary.Trim // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65575D1E0
	struct FString ToUpper(struct FString SourceString); // Function Engine.KismetStringLibrary.ToUpper // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65575D100
	struct FString ToLower(struct FString SourceString); // Function Engine.KismetStringLibrary.ToLower // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65575D020
	struct FString TimeSecondsToString(float InSeconds); // Function Engine.KismetStringLibrary.TimeSecondsToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65575CF50
	bool StartsWith(struct FString SourceString, struct FString InPrefix, enum class ESearchCase SearchCase); // Function Engine.KismetStringLibrary.StartsWith // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x22, 0x7FF65575CE20
	bool Split(struct FString SourceString, struct FString InStr, struct FString LeftS, struct FString RightS, enum class ESearchCase SearchCase, enum class ESearchDir SearchDir); // Function Engine.KismetStringLibrary.Split // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x43, 0x7FF65575CC00
	struct FString RightPad(struct FString SourceString, int32_t ChCount); // Function Engine.KismetStringLibrary.RightPad // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575C9D0
	struct FString RightChop(struct FString SourceString, int32_t Count); // Function Engine.KismetStringLibrary.RightChop // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575C8B0
	struct FString Right(struct FString SourceString, int32_t Count); // Function Engine.KismetStringLibrary.Right // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575C790
	struct FString Reverse(struct FString SourceString); // Function Engine.KismetStringLibrary.Reverse // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65575C6B0
	int32_t ReplaceInline(struct FString SourceString, struct FString SearchText, struct FString ReplacementText, enum class ESearchCase SearchCase); // Function Engine.KismetStringLibrary.ReplaceInline // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x38, 0x7FF65575C520
	struct FString Replace(struct FString SourceString, struct FString From, struct FString To, enum class ESearchCase SearchCase); // Function Engine.KismetStringLibrary.Replace // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF65575C360
	struct TArray<struct FString> ParseIntoArray(struct FString SourceString, struct FString Delimiter, bool CullEmptyStrings); // Function Engine.KismetStringLibrary.ParseIntoArray // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF65575BAD0
	bool NotEqual_StrStr(struct FString A, struct FString B); // Function Engine.KismetStringLibrary.NotEqual_StrStr // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF65575B8F0
	bool NotEqual_StriStri(struct FString A, struct FString B); // Function Engine.KismetStringLibrary.NotEqual_StriStri // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF65575B9E0
	struct FString Mid(struct FString SourceString, int32_t Start, int32_t Count); // Function Engine.KismetStringLibrary.Mid // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575A740
	bool MatchesWildcard(struct FString SourceString, struct FString Wildcard, enum class ESearchCase SearchCase); // Function Engine.KismetStringLibrary.MatchesWildcard // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x22, 0x7FF65575B7C0
	int32_t Len(struct FString S); // Function Engine.KismetStringLibrary.Len // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65575B3F0
	struct FString LeftPad(struct FString SourceString, int32_t ChCount); // Function Engine.KismetStringLibrary.LeftPad // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575B2D0
	struct FString LeftChop(struct FString SourceString, int32_t Count); // Function Engine.KismetStringLibrary.LeftChop // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575B1B0
	struct FString Left(struct FString SourceString, int32_t Count); // Function Engine.KismetStringLibrary.Left // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575B090
	struct FString JoinStringArray(struct TArray<struct FString> SourceArray, struct FString Separator); // Function Engine.KismetStringLibrary.JoinStringArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65575AF20
	bool IsNumeric(struct FString SourceString); // Function Engine.KismetStringLibrary.IsNumeric // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65575AE80
	bool IsEmpty(struct FString inString); // Function Engine.KismetStringLibrary.IsEmpty // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65575ADE0
	struct FString GetSubstring(struct FString SourceString, int32_t StartIndex, int32_t Length); // Function Engine.KismetStringLibrary.GetSubstring // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65575A740
	int32_t GetCharacterAsNumber(struct FString SourceString, int32_t Index); // Function Engine.KismetStringLibrary.GetCharacterAsNumber // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65575A200
	struct TArray<struct FString> GetCharacterArrayFromString(struct FString SourceString); // Function Engine.KismetStringLibrary.GetCharacterArrayFromString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65575A120
	int32_t FindSubstring(struct FString SearchIn, struct FString Substring, bool bUseCase, bool bSearchFromEnd, int32_t StartPosition); // Function Engine.KismetStringLibrary.FindSubstring // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x2C, 0x7FF655759F70
	bool EqualEqual_StrStr(struct FString A, struct FString B); // Function Engine.KismetStringLibrary.EqualEqual_StrStr // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655759AD0
	bool EqualEqual_StriStri(struct FString A, struct FString B); // Function Engine.KismetStringLibrary.EqualEqual_StriStri // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655759BC0
	bool EndsWith(struct FString SourceString, struct FString InSuffix, enum class ESearchCase SearchCase); // Function Engine.KismetStringLibrary.EndsWith // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x22, 0x7FF6557599A0
	int32_t CullArray(struct FString SourceString, struct TArray<struct FString> inArray); // Function Engine.KismetStringLibrary.CullArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF6557596C0
	struct FString Conv_VectorToString(struct FVector InVec); // Function Engine.KismetStringLibrary.Conv_VectorToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655759350
	struct FString Conv_Vector2dToString(struct FVector2D InVec); // Function Engine.KismetStringLibrary.Conv_Vector2dToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655759290
	struct FString Conv_TransformToString(struct FTransform InTrans); // Function Engine.KismetStringLibrary.Conv_TransformToString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655759170
	void Conv_StringToVector2D(struct FString inString, struct FVector2D OutConvertedVector2D, bool OutIsValid); // Function Engine.KismetStringLibrary.Conv_StringToVector2D // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655758F10
	void Conv_StringToVector(struct FString inString, struct FVector OutConvertedVector, bool OutIsValid); // Function Engine.KismetStringLibrary.Conv_StringToVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1D, 0x7FF655759040
	void Conv_StringToRotator(struct FString inString, struct FRotator OutConvertedRotator, bool OutIsValid); // Function Engine.KismetStringLibrary.Conv_StringToRotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x1D, 0x7FF655758DE0
	struct FName Conv_StringToName(struct FString inString); // Function Engine.KismetStringLibrary.Conv_StringToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655758D40
	int32_t Conv_StringToInt(struct FString inString); // Function Engine.KismetStringLibrary.Conv_StringToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655758CA0
	float Conv_StringToFloat(struct FString inString); // Function Engine.KismetStringLibrary.Conv_StringToFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF655758C00
	void Conv_StringToColor(struct FString inString, struct FLinearColor OutConvertedColor, bool OutIsValid); // Function Engine.KismetStringLibrary.Conv_StringToColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655758AD0
	struct FString Conv_RotatorToString(struct FRotator InRot); // Function Engine.KismetStringLibrary.Conv_RotatorToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655758A00
	struct FString Conv_ObjectToString(struct UObject* InObj); // Function Engine.KismetStringLibrary.Conv_ObjectToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655758930
	struct FString Conv_NameToString(struct FName InName); // Function Engine.KismetStringLibrary.Conv_NameToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF654F0F030
	struct FString Conv_MatrixToString(struct FMatrix InMatrix); // Function Engine.KismetStringLibrary.Conv_MatrixToString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655758860
	struct FString Conv_IntVectorToString(struct FIntVector InIntVec); // Function Engine.KismetStringLibrary.Conv_IntVectorToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655758790
	struct FString Conv_IntToString(int32_t inInt); // Function Engine.KismetStringLibrary.Conv_IntToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557586D0
	struct FString Conv_IntPointToString(struct FIntPoint InIntPoint); // Function Engine.KismetStringLibrary.Conv_IntPointToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655758610
	struct FString Conv_FloatToString(float InFloat); // Function Engine.KismetStringLibrary.Conv_FloatToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655758540
	struct FString Conv_ColorToString(struct FLinearColor InColor); // Function Engine.KismetStringLibrary.Conv_ColorToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655758470
	struct FString Conv_ByteToString(enum class None InByte); // Function Engine.KismetStringLibrary.Conv_ByteToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557583B0
	struct FString Conv_BoolToString(bool InBool); // Function Engine.KismetStringLibrary.Conv_BoolToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557582E0
	bool Contains(struct FString SearchIn, struct FString Substring, bool bUseCase, bool bSearchFromEnd); // Function Engine.KismetStringLibrary.Contains // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x23, 0x7FF655758170
	struct FString Concat_StrStr(struct FString A, struct FString B); // Function Engine.KismetStringLibrary.Concat_StrStr // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655758040
	struct FString BuildString_Vector2d(struct FString AppendTo, struct FString Prefix, struct FVector2D InVector2D, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Vector2d // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF655757A60
	struct FString BuildString_Vector(struct FString AppendTo, struct FString Prefix, struct FVector InVector, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Vector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655757C20
	struct FString BuildString_Rotator(struct FString AppendTo, struct FString Prefix, struct FRotator InRot, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Rotator // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655757890
	struct FString BuildString_Object(struct FString AppendTo, struct FString Prefix, struct UObject* InObj, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Object // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF6557576D0
	struct FString BuildString_Name(struct FString AppendTo, struct FString Prefix, struct FName InName, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Name // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF655757510
	struct FString BuildString_IntVector(struct FString AppendTo, struct FString Prefix, struct FIntVector InIntVector, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_IntVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655757340
	struct FString BuildString_Int(struct FString AppendTo, struct FString Prefix, int32_t inInt, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Int // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF655757180
	struct FString BuildString_Float(struct FString AppendTo, struct FString Prefix, float InFloat, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Float // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF655756FC0
	struct FString BuildString_Color(struct FString AppendTo, struct FString Prefix, struct FLinearColor InColor, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Color // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x50, 0x7FF655756DF0
	struct FString BuildString_Bool(struct FString AppendTo, struct FString Prefix, bool InBool, struct FString Suffix); // Function Engine.KismetStringLibrary.BuildString_Bool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF655756C30
};

// Class Engine.KismetStringTableLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetStringTableLibrary : UBlueprintFunctionLibrary {

	bool IsRegisteredTableId(struct FName TableId); // Function Engine.KismetStringTableLibrary.IsRegisteredTableId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A6F0
	bool IsRegisteredTableEntry(struct FName TableId, struct FString Key); // Function Engine.KismetStringTableLibrary.IsRegisteredTableEntry // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF65576A610
	struct FString GetTableNamespace(struct FName TableId); // Function Engine.KismetStringTableLibrary.GetTableNamespace // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF65576A340
	struct FString GetTableEntrySourceString(struct FName TableId, struct FString Key); // Function Engine.KismetStringTableLibrary.GetTableEntrySourceString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65576A220
	struct FString GetTableEntryMetaData(struct FName TableId, struct FString Key, struct FName MetaDataId); // Function Engine.KismetStringTableLibrary.GetTableEntryMetaData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65576A0C0
	struct TArray<struct FName> GetRegisteredStringTables(); // Function Engine.KismetStringTableLibrary.GetRegisteredStringTables // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655769DB0
	struct TArray<struct FName> GetMetaDataIdsFromStringTableEntry(struct FName TableId, struct FString Key); // Function Engine.KismetStringTableLibrary.GetMetaDataIdsFromStringTableEntry // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655769170
	struct TArray<struct FString> GetKeysFromStringTable(struct FName TableId); // Function Engine.KismetStringTableLibrary.GetKeysFromStringTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557690A0
};

// Class Engine.KismetSystemLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetSystemLibrary : UBlueprintFunctionLibrary {

	void UnregisterForRemoteNotifications(); // Function Engine.KismetSystemLibrary.UnregisterForRemoteNotifications // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65576F380
	void UnloadPrimaryAssetList(struct TArray<struct FPrimaryAssetId> PrimaryAssetIdList); // Function Engine.KismetSystemLibrary.UnloadPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF655772B60
	void UnloadPrimaryAsset(struct FPrimaryAssetId PrimaryAssetId); // Function Engine.KismetSystemLibrary.UnloadPrimaryAsset // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF655772AE0
	void TransactObject(struct UObject* Object); // Function Engine.KismetSystemLibrary.TransactObject // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655765B60
	void StackTrace(); // Function Engine.KismetSystemLibrary.StackTrace // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655772AC0
	bool SphereTraceSingleForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.SphereTraceSingleForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x105, 0x7FF655772670
	bool SphereTraceSingleByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.SphereTraceSingleByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xF5, 0x7FF655772240
	bool SphereTraceSingle(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.SphereTraceSingle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xED, 0x7FF655771E10
	bool SphereTraceMultiForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.SphereTraceMultiForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x91, 0x7FF6557719D0
	bool SphereTraceMultiByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.SphereTraceMultiByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x81, 0x7FF6557715B0
	bool SphereTraceMulti(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.SphereTraceMulti // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x79, 0x7FF655771190
	bool SphereOverlapComponents(struct UObject* WorldContextObject, struct FVector SpherePos, float SphereRadius, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ComponentClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct UPrimitiveComponent*> OutComponents); // Function Engine.KismetSystemLibrary.SphereOverlapComponents // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x51, 0x7FF655770F10
	bool SphereOverlapActors(struct UObject* WorldContextObject, struct FVector SpherePos, float SphereRadius, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ActorClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct AActor*> OutActors); // Function Engine.KismetSystemLibrary.SphereOverlapActors // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x51, 0x7FF655770C90
	void SnapshotObject(struct UObject* Object); // Function Engine.KismetSystemLibrary.SnapshotObject // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655765B60
	void ShowPlatformSpecificLeaderboardScreen(struct FString CategoryName); // Function Engine.KismetSystemLibrary.ShowPlatformSpecificLeaderboardScreen // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655770C00
	void ShowPlatformSpecificAchievementsScreen(struct APlayerController* SpecificPlayer); // Function Engine.KismetSystemLibrary.ShowPlatformSpecificAchievementsScreen // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655770B90
	void ShowInterstitialAd(); // Function Engine.KismetSystemLibrary.ShowInterstitialAd // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655770B70
	void ShowAdBanner(int32_t AdIdIndex, bool bShowOnBottomOfScreen); // Function Engine.KismetSystemLibrary.ShowAdBanner // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF655770AC0
	void SetWindowTitle(struct FText Title); // Function Engine.KismetSystemLibrary.SetWindowTitle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF655770A00
	void SetVolumeButtonsHandledBySystem(bool bEnabled); // Function Engine.KismetSystemLibrary.SetVolumeButtonsHandledBySystem // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557651F0
	void SetVectorPropertyByName(struct UObject* Object, struct FName PropertyName, struct FVector Value); // Function Engine.KismetSystemLibrary.SetVectorPropertyByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF655770900
	void SetUserActivity(struct FUserActivity UserActivity); // Function Engine.KismetSystemLibrary.SetUserActivity // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF655770860
	void SetTransformPropertyByName(struct UObject* Object, struct FName PropertyName, struct FTransform Value); // Function Engine.KismetSystemLibrary.SetTransformPropertyByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF655770710
	void SetTextPropertyByName(struct UObject* Object, struct FName PropertyName, struct FText Value); // Function Engine.KismetSystemLibrary.SetTextPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x28, 0x7FF6557705D0
	void SetSuppressViewportTransitionMessage(struct UObject* WorldContextObject, bool bState); // Function Engine.KismetSystemLibrary.SetSuppressViewportTransitionMessage // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF655770510
	void SetStructurePropertyByName(struct UObject* Object, struct FName PropertyName, struct FGenericStruct Value); // Function Engine.KismetSystemLibrary.SetStructurePropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x14, 0x7FF65576F7A0
	void SetStringPropertyByName(struct UObject* Object, struct FName PropertyName, struct FString Value); // Function Engine.KismetSystemLibrary.SetStringPropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF655770400
	void SetSoftObjectPropertyByName(struct UObject* Object, struct FName PropertyName, struct TSoftObjectPtr<struct UObject> Value); // Function Engine.KismetSystemLibrary.SetSoftObjectPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x38, 0x7FF6557702D0
	void SetSoftClassPropertyByName(struct UObject* Object, struct FName PropertyName, SoftClassProperty Value); // Function Engine.KismetSystemLibrary.SetSoftClassPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x38, 0x7FF6557701A0
	void SetRotatorPropertyByName(struct UObject* Object, struct FName PropertyName, struct FRotator Value); // Function Engine.KismetSystemLibrary.SetRotatorPropertyByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF6557700A0
	void SetObjectPropertyByName(struct UObject* Object, struct FName PropertyName, struct UObject* Value); // Function Engine.KismetSystemLibrary.SetObjectPropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF65576FFB0
	void SetNamePropertyByName(struct UObject* Object, struct FName PropertyName, struct FName Value); // Function Engine.KismetSystemLibrary.SetNamePropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF65576FEB0
	void SetLinearColorPropertyByName(struct UObject* Object, struct FName PropertyName, struct FLinearColor Value); // Function Engine.KismetSystemLibrary.SetLinearColorPropertyByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF65576FDB0
	void SetIntPropertyByName(struct UObject* Object, struct FName PropertyName, int32_t Value); // Function Engine.KismetSystemLibrary.SetIntPropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF65576FBB0
	void SetInterfacePropertyByName(struct UObject* Object, struct FName PropertyName, struct TScriptInterface<None> Value); // Function Engine.KismetSystemLibrary.SetInterfacePropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x20, 0x7FF65576FCA0
	void SetInt64PropertyByName(struct UObject* Object, struct FName PropertyName, int64_t Value); // Function Engine.KismetSystemLibrary.SetInt64PropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF65576FAC0
	void SetGamepadsBlockDeviceFeedback(bool bBlock); // Function Engine.KismetSystemLibrary.SetGamepadsBlockDeviceFeedback // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557651F0
	void SetFloatPropertyByName(struct UObject* Object, struct FName PropertyName, float Value); // Function Engine.KismetSystemLibrary.SetFloatPropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF65576F9C0
	void SetFieldPathPropertyByName(struct UObject* Object, struct FName PropertyName, FieldPathProperty Value); // Function Engine.KismetSystemLibrary.SetFieldPathPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x30, 0x7FF65576F890
	void SetCollisionProfileNameProperty(struct UObject* Object, struct FName PropertyName, struct FCollisionProfileName Value); // Function Engine.KismetSystemLibrary.SetCollisionProfileNameProperty // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF65576F7A0
	void SetClassPropertyByName(struct UObject* Object, struct FName PropertyName, class UObject* Value); // Function Engine.KismetSystemLibrary.SetClassPropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF65576F6B0
	void SetBytePropertyByName(struct UObject* Object, struct FName PropertyName, enum class None Value); // Function Engine.KismetSystemLibrary.SetBytePropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF65576F5C0
	void SetBoolPropertyByName(struct UObject* Object, struct FName PropertyName, bool Value); // Function Engine.KismetSystemLibrary.SetBoolPropertyByName // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF65576F4C0
	void RetriggerableDelay(struct UObject* WorldContextObject, float Duration, struct FLatentActionInfo LatentInfo); // Function Engine.KismetSystemLibrary.RetriggerableDelay // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF65576F3A0
	void ResetGamepadAssignmentToController(int32_t ControllerId); // Function Engine.KismetSystemLibrary.ResetGamepadAssignmentToController // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6536695A0
	void ResetGamepadAssignments(); // Function Engine.KismetSystemLibrary.ResetGamepadAssignments // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6535DF250
	void RegisterForRemoteNotifications(); // Function Engine.KismetSystemLibrary.RegisterForRemoteNotifications // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65576F380
	void QuitGame(struct UObject* WorldContextObject, struct APlayerController* SpecificPlayer, enum class EQuitPreference QuitPreference, bool bIgnorePlatformRestrictions); // Function Engine.KismetSystemLibrary.QuitGame // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF65576F240
	void PrintWarning(struct FString inString); // Function Engine.KismetSystemLibrary.PrintWarning // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576F1B0
	void PrintText(struct UObject* WorldContextObject, struct FText InText, bool bPrintToScreen, bool bPrintToLog, struct FLinearColor TextColor, float Duration); // Function Engine.KismetSystemLibrary.PrintText // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x38, 0x7FF65576EF80
	void PrintString(struct UObject* WorldContextObject, struct FString inString, bool bPrintToScreen, bool bPrintToLog, struct FLinearColor TextColor, float Duration); // Function Engine.KismetSystemLibrary.PrintString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x30, 0x7FF65576EDA0
	void OnAssetLoaded__DelegateSignature(struct UObject* Loaded); // DelegateFunction Engine.KismetSystemLibrary.OnAssetLoaded__DelegateSignature // (Public|Delegate) // Param Size : 0x8, 0x7FF653FAFDF0
	void OnAssetClassLoaded__DelegateSignature(class UObject* Loaded); // DelegateFunction Engine.KismetSystemLibrary.OnAssetClassLoaded__DelegateSignature // (Public|Delegate) // Param Size : 0x8, 0x7FF653FAFDF0
	bool NotEqual_SoftObjectReference(struct TSoftObjectPtr<struct UObject> A, struct TSoftObjectPtr<struct UObject> B); // Function Engine.KismetSystemLibrary.NotEqual_SoftObjectReference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF65576EC60
	bool NotEqual_SoftClassReference(SoftClassProperty A, SoftClassProperty B); // Function Engine.KismetSystemLibrary.NotEqual_SoftClassReference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF65576EC60
	bool NotEqual_PrimaryAssetType(struct FPrimaryAssetType A, struct FPrimaryAssetType B); // Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetType // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF654F103A0
	bool NotEqual_PrimaryAssetId(struct FPrimaryAssetId A, struct FPrimaryAssetId B); // Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetId // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF65576EB80
	struct FString NormalizeFilename(struct FString InFilename); // Function Engine.KismetSystemLibrary.NormalizeFilename // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65576EAA0
	void MoveComponentTo(struct USceneComponent* Component, struct FVector TargetRelativeLocation, struct FRotator TargetRelativeRotation, bool bEaseOut, bool bEaseIn, float OverTime, bool bForceShortestRotationPath, enum class EMoveComponentAction MoveAction, struct FLatentActionInfo LatentInfo); // Function Engine.KismetSystemLibrary.MoveComponentTo // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x48, 0x7FF65576E7E0
	struct FSoftObjectPath MakeSoftObjectPath(struct FString PathString); // Function Engine.KismetSystemLibrary.MakeSoftObjectPath // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65576E700
	struct FSoftClassPath MakeSoftClassPath(struct FString PathString); // Function Engine.KismetSystemLibrary.MakeSoftClassPath // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF65576E650
	struct FText MakeLiteralText(struct FText Value); // Function Engine.KismetSystemLibrary.MakeLiteralText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF65576E4E0
	struct FString MakeLiteralString(struct FString Value); // Function Engine.KismetSystemLibrary.MakeLiteralString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF65576E3D0
	struct FName MakeLiteralName(struct FName Value); // Function Engine.KismetSystemLibrary.MakeLiteralName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF65576E350
	int32_t MakeLiteralInt(int32_t Value); // Function Engine.KismetSystemLibrary.MakeLiteralInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF6533F7D40
	float MakeLiteralFloat(float Value); // Function Engine.KismetSystemLibrary.MakeLiteralFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65576E2D0
	enum class None MakeLiteralByte(enum class None Value); // Function Engine.KismetSystemLibrary.MakeLiteralByte // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x2, 0x7FF65576E260
	bool MakeLiteralBool(bool Value); // Function Engine.KismetSystemLibrary.MakeLiteralBool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x2, 0x7FF655732920
	void LoadInterstitialAd(int32_t AdIdIndex); // Function Engine.KismetSystemLibrary.LoadInterstitialAd // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65576E1F0
	class UObject* LoadClassAsset_Blocking(SoftClassProperty AssetClass); // Function Engine.KismetSystemLibrary.LoadClassAsset_Blocking // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF65576E100
	void LoadAssetClass(struct UObject* WorldContextObject, SoftClassProperty AssetClass, struct FDelegate OnLoaded, struct FLatentActionInfo LatentInfo); // Function Engine.KismetSystemLibrary.LoadAssetClass // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x58, 0x7FF65576DE50
	struct UObject* LoadAsset_Blocking(struct TSoftObjectPtr<struct UObject> Asset); // Function Engine.KismetSystemLibrary.LoadAsset_Blocking // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF65576E010
	void LoadAsset(struct UObject* WorldContextObject, struct TSoftObjectPtr<struct UObject> Asset, struct FDelegate OnLoaded, struct FLatentActionInfo LatentInfo); // Function Engine.KismetSystemLibrary.LoadAsset // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x58, 0x7FF65576DC90
	bool LineTraceSingleForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.LineTraceSingleForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xFD, 0x7FF65576D870
	bool LineTraceSingleByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.LineTraceSingleByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xF5, 0x7FF65576D470
	bool LineTraceSingle(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.LineTraceSingle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xED, 0x7FF65576D070
	bool LineTraceMultiForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.LineTraceMultiForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x89, 0x7FF65576CC80
	bool LineTraceMultiByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.LineTraceMultiByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x81, 0x7FF65576C8B0
	bool LineTraceMulti(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.LineTraceMulti // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x79, 0x7FF65576C4E0
	void LaunchURL(struct FString URL); // Function Engine.KismetSystemLibrary.LaunchURL // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576C450
	void K2_UnPauseTimerHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_UnPauseTimerHandle // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576C3A0
	void K2_UnPauseTimerDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_UnPauseTimerDelegate // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576C310
	void K2_UnPauseTimer(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_UnPauseTimer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF65576C200
	bool K2_TimerExistsHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_TimerExistsHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65576C140
	bool K2_TimerExistsDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_TimerExistsDelegate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65576C0A0
	bool K2_TimerExists(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_TimerExists // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF65576BF80
	struct FTimerHandle K2_SetTimerDelegate(struct FDelegate Delegate, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance); // Function Engine.KismetSystemLibrary.K2_SetTimerDelegate // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF65576BDF0
	struct FTimerHandle K2_SetTimer(struct UObject* Object, struct FString FunctionName, float Time, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance); // Function Engine.KismetSystemLibrary.K2_SetTimer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x30, 0x7FF65576BBD0
	void K2_PauseTimerHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_PauseTimerHandle // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576BB20
	void K2_PauseTimerDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_PauseTimerDelegate // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576BA90
	void K2_PauseTimer(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_PauseTimer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF65576B980
	bool K2_IsValidTimerHandle(struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_IsValidTimerHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576B900
	bool K2_IsTimerPausedHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_IsTimerPausedHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65576B840
	bool K2_IsTimerPausedDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_IsTimerPausedDelegate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65576B7A0
	bool K2_IsTimerPaused(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_IsTimerPaused // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF65576B680
	bool K2_IsTimerActiveHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_IsTimerActiveHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65576B5C0
	bool K2_IsTimerActiveDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_IsTimerActiveDelegate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65576B520
	bool K2_IsTimerActive(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_IsTimerActive // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF65576B400
	struct FTimerHandle K2_InvalidateTimerHandle(struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_InvalidateTimerHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF65576B360
	float K2_GetTimerRemainingTimeHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65576B2A0
	float K2_GetTimerRemainingTimeDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeDelegate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65576B200
	float K2_GetTimerRemainingTime(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65576B0E0
	float K2_GetTimerElapsedTimeHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65576B020
	float K2_GetTimerElapsedTimeDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeDelegate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x14, 0x7FF65576AF80
	float K2_GetTimerElapsedTime(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1C, 0x7FF65576AE60
	void K2_ClearTimerHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_ClearTimerHandle // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576ADB0
	void K2_ClearTimerDelegate(struct FDelegate Delegate); // Function Engine.KismetSystemLibrary.K2_ClearTimerDelegate // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65576AD20
	void K2_ClearTimer(struct UObject* Object, struct FString FunctionName); // Function Engine.KismetSystemLibrary.K2_ClearTimer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF65576AC10
	void K2_ClearAndInvalidateTimerHandle(struct UObject* WorldContextObject, struct FTimerHandle Handle); // Function Engine.KismetSystemLibrary.K2_ClearAndInvalidateTimerHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF65576AB50
	bool IsValidSoftObjectReference(struct TSoftObjectPtr<struct UObject> SoftObjectReference); // Function Engine.KismetSystemLibrary.IsValidSoftObjectReference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x29, 0x7FF65576AA90
	bool IsValidSoftClassReference(SoftClassProperty SoftClassReference); // Function Engine.KismetSystemLibrary.IsValidSoftClassReference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x29, 0x7FF65576AA90
	bool IsValidPrimaryAssetType(struct FPrimaryAssetType PrimaryAssetType); // Function Engine.KismetSystemLibrary.IsValidPrimaryAssetType // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF654F0FBC0
	bool IsValidPrimaryAssetId(struct FPrimaryAssetId PrimaryAssetId); // Function Engine.KismetSystemLibrary.IsValidPrimaryAssetId // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF65576AA00
	bool IsValidClass(class UObject* Class); // Function Engine.KismetSystemLibrary.IsValidClass // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A920
	bool IsValid(struct UObject* Object); // Function Engine.KismetSystemLibrary.IsValid // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A920
	bool IsUnattended(); // Function Engine.KismetSystemLibrary.IsUnattended // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF65576A8F0
	bool IsStandalone(struct UObject* WorldContextObject); // Function Engine.KismetSystemLibrary.IsStandalone // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A870
	bool IsSplitScreen(struct UObject* WorldContextObject); // Function Engine.KismetSystemLibrary.IsSplitScreen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A7F0
	bool IsServer(struct UObject* WorldContextObject); // Function Engine.KismetSystemLibrary.IsServer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A770
	bool IsScreensaverEnabled(); // Function Engine.KismetSystemLibrary.IsScreensaverEnabled // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6532F13B0
	bool IsPackagedForDistribution(); // Function Engine.KismetSystemLibrary.IsPackagedForDistribution // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6535D30D0
	bool IsLoggedIn(struct APlayerController* SpecificPlayer); // Function Engine.KismetSystemLibrary.IsLoggedIn // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A590
	bool IsInterstitialAdRequested(); // Function Engine.KismetSystemLibrary.IsInterstitialAdRequested // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65576A560
	bool IsInterstitialAdAvailable(); // Function Engine.KismetSystemLibrary.IsInterstitialAdAvailable // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65576A530
	bool IsDedicatedServer(struct UObject* WorldContextObject); // Function Engine.KismetSystemLibrary.IsDedicatedServer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x9, 0x7FF65576A4B0
	bool IsControllerAssignedToGamepad(int32_t ControllerId); // Function Engine.KismetSystemLibrary.IsControllerAssignedToGamepad // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x5, 0x7FF65576A430
	void HideAdBanner(); // Function Engine.KismetSystemLibrary.HideAdBanner // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65576A410
	bool GetVolumeButtonsHandledBySystem(); // Function Engine.KismetSystemLibrary.GetVolumeButtonsHandledBySystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x1, 0x7FF6535D30D0
	struct FString GetUniqueDeviceId(); // Function Engine.KismetSystemLibrary.GetUniqueDeviceId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655768CE0
	bool GetSupportedFullscreenResolutions(struct TArray<struct FIntPoint> Resolutions); // Function Engine.KismetSystemLibrary.GetSupportedFullscreenResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF65576A010
	struct TSoftObjectPtr<struct UObject> GetSoftObjectReferenceFromPrimaryAssetId(struct FPrimaryAssetId PrimaryAssetId); // Function Engine.KismetSystemLibrary.GetSoftObjectReferenceFromPrimaryAssetId // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF655769F50
	SoftClassProperty GetSoftClassReferenceFromPrimaryAssetId(struct FPrimaryAssetId PrimaryAssetId); // Function Engine.KismetSystemLibrary.GetSoftClassReferenceFromPrimaryAssetId // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF655769E90
	int32_t GetRenderingMaterialQualityLevel(); // Function Engine.KismetSystemLibrary.GetRenderingMaterialQualityLevel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF655769E60
	int32_t GetRenderingDetailMode(); // Function Engine.KismetSystemLibrary.GetRenderingDetailMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF655769E30
	struct FString GetProjectSavedDirectory(); // Function Engine.KismetSystemLibrary.GetProjectSavedDirectory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655769D30
	struct FString GetProjectDirectory(); // Function Engine.KismetSystemLibrary.GetProjectDirectory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655769CB0
	struct FString GetProjectContentDirectory(); // Function Engine.KismetSystemLibrary.GetProjectContentDirectory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655769C30
	void GetPrimaryAssetsWithBundleState(struct TArray<struct FName> RequiredBundles, struct TArray<struct FName> ExcludedBundles, struct TArray<struct FPrimaryAssetType> ValidTypes, bool bForceCurrentState, struct TArray<struct FPrimaryAssetId> OutPrimaryAssetIdList); // Function Engine.KismetSystemLibrary.GetPrimaryAssetsWithBundleState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x48, 0x7FF655769A20
	void GetPrimaryAssetIdList(struct FPrimaryAssetType PrimaryAssetType, struct TArray<struct FPrimaryAssetId> OutPrimaryAssetIdList); // Function Engine.KismetSystemLibrary.GetPrimaryAssetIdList // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF655769940
	struct FPrimaryAssetId GetPrimaryAssetIdFromSoftObjectReference(struct TSoftObjectPtr<struct UObject> SoftObjectReference); // Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftObjectReference // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF655769840
	struct FPrimaryAssetId GetPrimaryAssetIdFromSoftClassReference(SoftClassProperty SoftClassReference); // Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftClassReference // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF655769840
	struct FPrimaryAssetId GetPrimaryAssetIdFromObject(struct UObject* Object); // Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromObject // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557697B0
	struct FPrimaryAssetId GetPrimaryAssetIdFromClass(class UObject* Class); // Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromClass // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655769720
	struct TArray<struct FString> GetPreferredLanguages(); // Function Engine.KismetSystemLibrary.GetPreferredLanguages // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557696A0
	struct FString GetPlatformUserName(); // Function Engine.KismetSystemLibrary.GetPlatformUserName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655769620
	struct FString GetPlatformUserDir(); // Function Engine.KismetSystemLibrary.GetPlatformUserDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557695A0
	struct FString GetPathName(struct UObject* Object); // Function Engine.KismetSystemLibrary.GetPathName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557694D0
	struct UObject* GetOuterObject(struct UObject* Object); // Function Engine.KismetSystemLibrary.GetOuterObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655769450
	struct FString GetObjectName(struct UObject* Object); // Function Engine.KismetSystemLibrary.GetObjectName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655769380
	struct UObject* GetObjectFromPrimaryAssetId(struct FPrimaryAssetId PrimaryAssetId); // Function Engine.KismetSystemLibrary.GetObjectFromPrimaryAssetId // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557692F0
	int32_t GetMinYResolutionForUI(); // Function Engine.KismetSystemLibrary.GetMinYResolutionForUI // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF6557692C0
	int32_t GetMinYResolutionFor3DView(); // Function Engine.KismetSystemLibrary.GetMinYResolutionFor3DView // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF655769290
	struct FString GetLocalCurrencySymbol(); // Function Engine.KismetSystemLibrary.GetLocalCurrencySymbol // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655768EE0
	struct FString GetLocalCurrencyCode(); // Function Engine.KismetSystemLibrary.GetLocalCurrencyCode // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655768EE0
	float GetGameTimeInSeconds(struct UObject* WorldContextObject); // Function Engine.KismetSystemLibrary.GetGameTimeInSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF655703AA0
	struct FString GetGamepadControllerName(int32_t ControllerId); // Function Engine.KismetSystemLibrary.GetGamepadControllerName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655768FE0
	struct FString GetGameName(); // Function Engine.KismetSystemLibrary.GetGameName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655768F60
	struct FString GetGameBundleId(); // Function Engine.KismetSystemLibrary.GetGameBundleId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655768EE0
	int64_t GetFrameCount(); // Function Engine.KismetSystemLibrary.GetFrameCount // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF655768EB0
	struct FString GetEngineVersion(); // Function Engine.KismetSystemLibrary.GetEngineVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655768E30
	struct FString GetDisplayName(struct UObject* Object); // Function Engine.KismetSystemLibrary.GetDisplayName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655768D60
	struct FString GetDeviceId(); // Function Engine.KismetSystemLibrary.GetDeviceId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655768CE0
	struct FString GetDefaultLocale(); // Function Engine.KismetSystemLibrary.GetDefaultLocale // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655768C60
	struct FString GetDefaultLanguage(); // Function Engine.KismetSystemLibrary.GetDefaultLanguage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF655768BE0
	bool GetCurrentBundleState(struct FPrimaryAssetId PrimaryAssetId, bool bForceCurrentState, struct TArray<struct FName> OutBundles); // Function Engine.KismetSystemLibrary.GetCurrentBundleState // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x29, 0x7FF655768A90
	bool GetConvenientWindowedResolutions(struct TArray<struct FIntPoint> Resolutions); // Function Engine.KismetSystemLibrary.GetConvenientWindowedResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6557689E0
	int32_t GetConsoleVariableIntValue(struct FString VariableName); // Function Engine.KismetSystemLibrary.GetConsoleVariableIntValue // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF655768940
	float GetConsoleVariableFloatValue(struct FString VariableName); // Function Engine.KismetSystemLibrary.GetConsoleVariableFloatValue // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6557688A0
	bool GetConsoleVariableBoolValue(struct FString VariableName); // Function Engine.KismetSystemLibrary.GetConsoleVariableBoolValue // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF655768800
	void GetComponentBounds(struct USceneComponent* Component, struct FVector Origin, struct FVector BoxExtent, float SphereRadius); // Function Engine.KismetSystemLibrary.GetComponentBounds // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x24, 0x7FF6557686A0
	struct FString GetCommandLine(); // Function Engine.KismetSystemLibrary.GetCommandLine // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655768620
	class UObject* GetClassFromPrimaryAssetId(struct FPrimaryAssetId PrimaryAssetId); // Function Engine.KismetSystemLibrary.GetClassFromPrimaryAssetId // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655768580
	struct FString GetClassDisplayName(class UObject* Class); // Function Engine.KismetSystemLibrary.GetClassDisplayName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557684B0
	int32_t GetAdIDCount(); // Function Engine.KismetSystemLibrary.GetAdIDCount // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x4, 0x7FF655768480
	void GetActorListFromComponentList(struct TArray<struct UPrimitiveComponent*> ComponentList, class UObject* ActorClassFilter, struct TArray<struct AActor*> OutActorList); // Function Engine.KismetSystemLibrary.GetActorListFromComponentList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x28, 0x7FF655768330
	void GetActorBounds(struct AActor* Actor, struct FVector Origin, struct FVector BoxExtent); // Function Engine.KismetSystemLibrary.GetActorBounds // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655768220
	void ForceCloseAdBanner(); // Function Engine.KismetSystemLibrary.ForceCloseAdBanner // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655768200
	void FlushPersistentDebugLines(struct UObject* WorldContextObject); // Function Engine.KismetSystemLibrary.FlushPersistentDebugLines // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655765B60
	void FlushDebugStrings(struct UObject* WorldContextObject); // Function Engine.KismetSystemLibrary.FlushDebugStrings // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655765B60
	void ExecuteConsoleCommand(struct UObject* WorldContextObject, struct FString Command, struct APlayerController* SpecificPlayer); // Function Engine.KismetSystemLibrary.ExecuteConsoleCommand // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF6557680F0
	bool EqualEqual_SoftObjectReference(struct TSoftObjectPtr<struct UObject> A, struct TSoftObjectPtr<struct UObject> B); // Function Engine.KismetSystemLibrary.EqualEqual_SoftObjectReference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655767FB0
	bool EqualEqual_SoftClassReference(SoftClassProperty A, SoftClassProperty B); // Function Engine.KismetSystemLibrary.EqualEqual_SoftClassReference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x51, 0x7FF655767FB0
	bool EqualEqual_PrimaryAssetType(struct FPrimaryAssetType A, struct FPrimaryAssetType B); // Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetType // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF654F0EC50
	bool EqualEqual_PrimaryAssetId(struct FPrimaryAssetId A, struct FPrimaryAssetId B); // Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetId // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x21, 0x7FF655767ED0
	int32_t EndTransaction(); // Function Engine.KismetSystemLibrary.EndTransaction // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655767EA0
	void DrawDebugString(struct UObject* WorldContextObject, struct FVector TextLocation, struct FString Text, struct AActor* TestBaseActor, struct FLinearColor TextColor, float Duration); // Function Engine.KismetSystemLibrary.DrawDebugString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x44, 0x7FF655767CC0
	void DrawDebugSphere(struct UObject* WorldContextObject, struct FVector Center, float Radius, int32_t Segments, struct FLinearColor LineColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugSphere // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x34, 0x7FF655767AB0
	void DrawDebugPoint(struct UObject* WorldContextObject, struct FVector Position, float Size, struct FLinearColor PointColor, float Duration); // Function Engine.KismetSystemLibrary.DrawDebugPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x2C, 0x7FF655767920
	void DrawDebugPlane(struct UObject* WorldContextObject, struct FPlane PlaneCoordinates, struct FVector Location, float Size, struct FLinearColor PlaneColor, float Duration); // Function Engine.KismetSystemLibrary.DrawDebugPlane // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x44, 0x7FF655767750
	void DrawDebugLine(struct UObject* WorldContextObject, struct FVector LineStart, struct FVector LineEnd, struct FLinearColor LineColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugLine // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x38, 0x7FF655767570
	void DrawDebugFrustum(struct UObject* WorldContextObject, struct FTransform FrustumTransform, struct FLinearColor FrustumColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugFrustum // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x58, 0x7FF655767380
	void DrawDebugFloatHistoryTransform(struct UObject* WorldContextObject, struct FDebugFloatHistory FloatHistory, struct FTransform DrawTransform, struct FVector2D DrawSize, struct FLinearColor DrawColor, float Duration); // Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x7C, 0x7FF655767130
	void DrawDebugFloatHistoryLocation(struct UObject* WorldContextObject, struct FDebugFloatHistory FloatHistory, struct FVector DrawLocation, struct FVector2D DrawSize, struct FLinearColor DrawColor, float Duration); // Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x50, 0x7FF655766F30
	void DrawDebugCylinder(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, int32_t Segments, struct FLinearColor LineColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugCylinder // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF655766CE0
	void DrawDebugCoordinateSystem(struct UObject* WorldContextObject, struct FVector AxisLoc, struct FRotator AxisRot, float Scale, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugCoordinateSystem // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x2C, 0x7FF655766B10
	void DrawDebugConeInDegrees(struct UObject* WorldContextObject, struct FVector Origin, struct FVector Direction, float Length, float AngleWidth, float AngleHeight, int32_t NumSides, struct FLinearColor LineColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugConeInDegrees // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x48, 0x7FF655766830
	void DrawDebugCone(struct UObject* WorldContextObject, struct FVector Origin, struct FVector Direction, float Length, float AngleWidth, float AngleHeight, int32_t NumSides, struct FLinearColor LineColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugCone // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x48, 0x7FF655766830
	void DrawDebugCircle(struct UObject* WorldContextObject, struct FVector Center, float Radius, int32_t NumSegments, struct FLinearColor LineColor, float Duration, float Thickness, struct FVector YAxis, struct FVector ZAxis, bool bDrawAxis); // Function Engine.KismetSystemLibrary.DrawDebugCircle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x4D, 0x7FF655766550
	void DrawDebugCapsule(struct UObject* WorldContextObject, struct FVector Center, float HalfHeight, float Radius, struct FRotator Rotation, struct FLinearColor LineColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugCapsule // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF6557662F0
	void DrawDebugCamera(struct ACameraActor* CameraActor, struct FLinearColor CameraColor, float Duration); // Function Engine.KismetSystemLibrary.DrawDebugCamera // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF6557661F0
	void DrawDebugBox(struct UObject* WorldContextObject, struct FVector Center, struct FVector Extent, struct FLinearColor LineColor, struct FRotator Rotation, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x44, 0x7FF655765FD0
	void DrawDebugArrow(struct UObject* WorldContextObject, struct FVector LineStart, struct FVector LineEnd, float ArrowSize, struct FLinearColor LineColor, float Duration, float Thickness); // Function Engine.KismetSystemLibrary.DrawDebugArrow // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x3C, 0x7FF655765DB0
	bool DoesImplementInterface(struct UObject* TestObject, class UInterface* Interface); // Function Engine.KismetSystemLibrary.DoesImplementInterface // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x11, 0x7FF655765CF0
	void Delay(struct UObject* WorldContextObject, float Duration, struct FLatentActionInfo LatentInfo); // Function Engine.KismetSystemLibrary.Delay // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF655765BD0
	void CreateCopyForUndoBuffer(struct UObject* ObjectToModify); // Function Engine.KismetSystemLibrary.CreateCopyForUndoBuffer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655765B60
	struct FString ConvertToRelativePath(struct FString Filename); // Function Engine.KismetSystemLibrary.ConvertToRelativePath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655765A80
	struct FString ConvertToAbsolutePath(struct FString Filename); // Function Engine.KismetSystemLibrary.ConvertToAbsolutePath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557659A0
	struct TSoftObjectPtr<struct UObject> Conv_SoftObjPathToSoftObjRef(struct FSoftObjectPath SoftObjectPath); // Function Engine.KismetSystemLibrary.Conv_SoftObjPathToSoftObjRef // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655765800
	struct FString Conv_SoftObjectReferenceToString(struct TSoftObjectPtr<struct UObject> SoftObjectReference); // Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF655765700
	struct UObject* Conv_SoftObjectReferenceToObject(struct TSoftObjectPtr<struct UObject> SoftObject); // Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToObject // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557658E0
	struct FString Conv_SoftClassReferenceToString(SoftClassProperty SoftClassReference); // Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x38, 0x7FF655765700
	class UObject* Conv_SoftClassReferenceToClass(SoftClassProperty SoftClass); // Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655765640
	SoftClassProperty Conv_SoftClassPathToSoftClassRef(struct FSoftClassPath SoftClassPath); // Function Engine.KismetSystemLibrary.Conv_SoftClassPathToSoftClassRef // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655765560
	struct FString Conv_PrimaryAssetTypeToString(struct FPrimaryAssetType PrimaryAssetType); // Function Engine.KismetSystemLibrary.Conv_PrimaryAssetTypeToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF654F0F030
	struct FString Conv_PrimaryAssetIdToString(struct FPrimaryAssetId PrimaryAssetId); // Function Engine.KismetSystemLibrary.Conv_PrimaryAssetIdToString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655765480
	struct TSoftObjectPtr<struct UObject> Conv_ObjectToSoftObjectReference(struct UObject* Object); // Function Engine.KismetSystemLibrary.Conv_ObjectToSoftObjectReference // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557653D0
	struct UObject* Conv_InterfaceToObject(struct TScriptInterface<None> Interface); // Function Engine.KismetSystemLibrary.Conv_InterfaceToObject // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655765330
	SoftClassProperty Conv_ClassToSoftClassReference(class UObject* Class); // Function Engine.KismetSystemLibrary.Conv_ClassToSoftClassReference // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655765270
	void ControlScreensaver(bool bAllowScreenSaver); // Function Engine.KismetSystemLibrary.ControlScreensaver // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557651F0
	bool ComponentOverlapComponents(struct UPrimitiveComponent* Component, struct FTransform ComponentTransform, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ComponentClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct UPrimitiveComponent*> OutComponents); // Function Engine.KismetSystemLibrary.ComponentOverlapComponents // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x79, 0x7FF655764F60
	bool ComponentOverlapActors(struct UPrimitiveComponent* Component, struct FTransform ComponentTransform, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ActorClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct AActor*> OutActors); // Function Engine.KismetSystemLibrary.ComponentOverlapActors // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x79, 0x7FF655764CD0
	void CollectGarbage(); // Function Engine.KismetSystemLibrary.CollectGarbage // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655764CB0
	bool CapsuleTraceSingleForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, float HalfHeight, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.CapsuleTraceSingleForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x105, 0x7FF655764820
	bool CapsuleTraceSingleByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, float HalfHeight, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.CapsuleTraceSingleByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xFD, 0x7FF6557643B0
	bool CapsuleTraceSingle(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, float HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.CapsuleTraceSingle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xF5, 0x7FF655763F40
	bool CapsuleTraceMultiForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, float HalfHeight, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.CapsuleTraceMultiForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x91, 0x7FF655763AC0
	bool CapsuleTraceMultiByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, float HalfHeight, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.CapsuleTraceMultiByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x89, 0x7FF655763660
	bool CapsuleTraceMulti(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, float Radius, float HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.CapsuleTraceMulti // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x81, 0x7FF655763200
	bool CapsuleOverlapComponents(struct UObject* WorldContextObject, struct FVector CapsulePos, float Radius, float HalfHeight, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ComponentClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct UPrimitiveComponent*> OutComponents); // Function Engine.KismetSystemLibrary.CapsuleOverlapComponents // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x59, 0x7FF655762F50
	bool CapsuleOverlapActors(struct UObject* WorldContextObject, struct FVector CapsulePos, float Radius, float HalfHeight, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ActorClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct AActor*> OutActors); // Function Engine.KismetSystemLibrary.CapsuleOverlapActors // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x59, 0x7FF655762CA0
	bool CanLaunchURL(struct FString URL); // Function Engine.KismetSystemLibrary.CanLaunchURL // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF655762C00
	void CancelTransaction(int32_t Index); // Function Engine.KismetSystemLibrary.CancelTransaction // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6536695A0
	void BreakSoftObjectPath(struct FSoftObjectPath InSoftObjectPath, struct FString PathString); // Function Engine.KismetSystemLibrary.BreakSoftObjectPath // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655762AE0
	void BreakSoftClassPath(struct FSoftClassPath InSoftClassPath, struct FString PathString); // Function Engine.KismetSystemLibrary.BreakSoftClassPath // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655762AE0
	bool BoxTraceSingleForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FVector HalfSize, struct FRotator Orientation, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.BoxTraceSingleForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x115, 0x7FF655762630
	bool BoxTraceSingleByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FVector HalfSize, struct FRotator Orientation, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.BoxTraceSingleByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10D, 0x7FF6557621A0
	bool BoxTraceSingle(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FVector HalfSize, struct FRotator Orientation, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.BoxTraceSingle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x105, 0x7FF655761D10
	bool BoxTraceMultiForObjects(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FVector HalfSize, struct FRotator Orientation, struct TArray<enum class EObjectTypeQuery> ObjectTypes, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.BoxTraceMultiForObjects // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xA1, 0x7FF655761870
	bool BoxTraceMultiByProfile(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FVector HalfSize, struct FRotator Orientation, struct FName ProfileName, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.BoxTraceMultiByProfile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x99, 0x7FF6557613F0
	bool BoxTraceMulti(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FVector HalfSize, struct FRotator Orientation, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Engine.KismetSystemLibrary.BoxTraceMulti // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x91, 0x7FF655760F70
	bool BoxOverlapComponents(struct UObject* WorldContextObject, struct FVector BoxPos, struct FVector Extent, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ComponentClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct UPrimitiveComponent*> OutComponents); // Function Engine.KismetSystemLibrary.BoxOverlapComponents // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x59, 0x7FF655760CF0
	bool BoxOverlapActors(struct UObject* WorldContextObject, struct FVector BoxPos, struct FVector BoxExtent, struct TArray<enum class EObjectTypeQuery> ObjectTypes, class UObject* ActorClassFilter, struct TArray<struct AActor*> ActorsToIgnore, struct TArray<struct AActor*> OutActors); // Function Engine.KismetSystemLibrary.BoxOverlapActors // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x59, 0x7FF655760A70
	int32_t BeginTransaction(struct FString Context, struct FText Description, struct UObject* PrimaryObject); // Function Engine.KismetSystemLibrary.BeginTransaction // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x34, 0x7FF6557608F0
	struct FDebugFloatHistory AddFloatHistorySample(float Value, struct FDebugFloatHistory FloatHistory); // Function Engine.KismetSystemLibrary.AddFloatHistorySample // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // Param Size : 0x48, 0x7FF655760790
};

// Class Engine.KismetTextLibrary
// Size : 0x28 (Inherited : 0x28)
struct UKismetTextLibrary : UBlueprintFunctionLibrary {

	struct FText TextTrimTrailing(struct FText InText); // Function Engine.KismetTextLibrary.TextTrimTrailing // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655778270
	struct FText TextTrimPrecedingAndTrailing(struct FText InText); // Function Engine.KismetTextLibrary.TextTrimPrecedingAndTrailing // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655778140
	struct FText TextTrimPreceding(struct FText InText); // Function Engine.KismetTextLibrary.TextTrimPreceding // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655778010
	struct FText TextToUpper(struct FText InText); // Function Engine.KismetTextLibrary.TextToUpper // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655777EE0
	struct FText TextToLower(struct FText InText); // Function Engine.KismetTextLibrary.TextToLower // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655777DB0
	bool TextIsTransient(struct FText InText); // Function Engine.KismetTextLibrary.TextIsTransient // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655777CE0
	bool TextIsFromStringTable(struct FText Text); // Function Engine.KismetTextLibrary.TextIsFromStringTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655777C10
	bool TextIsEmpty(struct FText InText); // Function Engine.KismetTextLibrary.TextIsEmpty // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655777B40
	bool TextIsCultureInvariant(struct FText InText); // Function Engine.KismetTextLibrary.TextIsCultureInvariant // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x19, 0x7FF655777A70
	struct FText TextFromStringTable(struct FName TableId, struct FString Key); // Function Engine.KismetTextLibrary.TextFromStringTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655777940
	bool StringTableIdAndKeyFromText(struct FText Text, struct FName OutTableId, struct FString OutKey); // Function Engine.KismetTextLibrary.StringTableIdAndKeyFromText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x31, 0x7FF655777790
	struct FText PolyglotDataToText(struct FPolyglotTextData PolyglotData); // Function Engine.KismetTextLibrary.PolyglotDataToText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0xD0, 0x7FF655777610
	bool NotEqual_TextText(struct FText A, struct FText B); // Function Engine.KismetTextLibrary.NotEqual_TextText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x31, 0x7FF6557774A0
	bool NotEqual_IgnoreCase_TextText(struct FText A, struct FText B); // Function Engine.KismetTextLibrary.NotEqual_IgnoreCase_TextText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x31, 0x7FF655777330
	void IsPolyglotDataValid(struct FPolyglotTextData PolyglotData, bool IsValid, struct FText ErrorMessage); // Function Engine.KismetTextLibrary.IsPolyglotDataValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0xD8, 0x7FF655777120
	struct FText GetEmptyText(); // Function Engine.KismetTextLibrary.GetEmptyText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655777090
	struct FText Format(struct FText InPattern, struct TArray<struct FFormatArgumentData> InArgs); // Function Engine.KismetTextLibrary.Format // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655776EE0
	bool FindTextInLocalizationTable(struct FString Namespace, struct FString Key, struct FText OutText); // Function Engine.KismetTextLibrary.FindTextInLocalizationTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x39, 0x7FF655776D60
	bool EqualEqual_TextText(struct FText A, struct FText B); // Function Engine.KismetTextLibrary.EqualEqual_TextText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x31, 0x7FF655776BF0
	bool EqualEqual_IgnoreCase_TextText(struct FText A, struct FText B); // Function Engine.KismetTextLibrary.EqualEqual_IgnoreCase_TextText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x31, 0x7FF655776A80
	struct FText Conv_VectorToText(struct FVector InVec); // Function Engine.KismetTextLibrary.Conv_VectorToText // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655776990
	struct FText Conv_Vector2dToText(struct FVector2D InVec); // Function Engine.KismetTextLibrary.Conv_Vector2dToText // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557768C0
	struct FText Conv_TransformToText(struct FTransform InTrans); // Function Engine.KismetTextLibrary.Conv_TransformToText // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x48, 0x7FF655776780
	struct FString Conv_TextToString(struct FText InText); // Function Engine.KismetTextLibrary.Conv_TextToString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655776670
	struct FText Conv_StringToText(struct FString inString); // Function Engine.KismetTextLibrary.Conv_StringToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655776580
	struct FText Conv_RotatorToText(struct FRotator InRot); // Function Engine.KismetTextLibrary.Conv_RotatorToText // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655776490
	struct FText Conv_ObjectToText(struct UObject* InObj); // Function Engine.KismetTextLibrary.Conv_ObjectToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557763B0
	struct FText Conv_NameToText(struct FName InName); // Function Engine.KismetTextLibrary.Conv_NameToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF6557762D0
	struct FText Conv_IntToText(int32_t Value, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits); // Function Engine.KismetTextLibrary.Conv_IntToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF6557760C0
	struct FText Conv_Int64ToText(int64_t Value, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits); // Function Engine.KismetTextLibrary.Conv_Int64ToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655775EB0
	struct FText Conv_FloatToText(float Value, enum class ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits); // Function Engine.KismetTextLibrary.Conv_FloatToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655775C10
	struct FText Conv_ColorToText(struct FLinearColor InColor); // Function Engine.KismetTextLibrary.Conv_ColorToText // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x28, 0x7FF655775B30
	struct FText Conv_ByteToText(enum class None Value); // Function Engine.KismetTextLibrary.Conv_ByteToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655775A50
	struct FText Conv_BoolToText(bool InBool); // Function Engine.KismetTextLibrary.Conv_BoolToText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655775970
	struct FText AsTimeZoneTime_DateTime(struct FDateTime InDateTime, struct FString InTimeZone); // Function Engine.KismetTextLibrary.AsTimeZoneTime_DateTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655775640
	struct FText AsTimeZoneDateTime_DateTime(struct FDateTime InDateTime, struct FString InTimeZone); // Function Engine.KismetTextLibrary.AsTimeZoneDateTime_DateTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557753A0
	struct FText AsTimeZoneDate_DateTime(struct FDateTime InDateTime, struct FString InTimeZone); // Function Engine.KismetTextLibrary.AsTimeZoneDate_DateTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF6557754F0
	struct FText AsTimespan_Timespan(struct FTimespan InTimespan); // Function Engine.KismetTextLibrary.AsTimespan_Timespan // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655775880
	struct FText AsTime_DateTime(struct FDateTime In); // Function Engine.KismetTextLibrary.AsTime_DateTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655775790
	struct FText AsPercent_Float(float Value, enum class ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits); // Function Engine.KismetTextLibrary.AsPercent_Float // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655775100
	struct FText AsDateTime_DateTime(struct FDateTime In); // Function Engine.KismetTextLibrary.AsDateTime_DateTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655774F20
	struct FText AsDate_DateTime(struct FDateTime InDateTime); // Function Engine.KismetTextLibrary.AsDate_DateTime // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // Param Size : 0x20, 0x7FF655775010
	struct FText AsCurrencyBase(int32_t BaseValue, struct FString CurrencyCode); // Function Engine.KismetTextLibrary.AsCurrencyBase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x30, 0x7FF655774800
	struct FText AsCurrency_Integer(int32_t Value, enum class ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits, struct FString CurrencyCode); // Function Engine.KismetTextLibrary.AsCurrency_Integer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655774C30
	struct FText AsCurrency_Float(float Value, enum class ERoundingMode RoundingMode, bool bAlwaysSign, bool bUseGrouping, int32_t MinimumIntegralDigits, int32_t MaximumIntegralDigits, int32_t MinimumFractionalDigits, int32_t MaximumFractionalDigits, struct FString CurrencyCode); // Function Engine.KismetTextLibrary.AsCurrency_Float // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x40, 0x7FF655774930
};

// Class Engine.Layer
// Size : 0x48 (Inherited : 0x28)
struct ULayer : UObject {
	struct FName LayerName; // 0x28(0x8)
	unsigned char bIsVisible : 1; // 0x30(0x1)
	unsigned char UnknownData_30_1 : 7; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
	struct TArray<struct FLayerActorStats> ActorStats; // 0x38(0x10)
};

// Class Engine.LevelPartitionInterface
// Size : 0x28 (Inherited : 0x28)
struct ULevelPartitionInterface : UInterface {
};

// Class Engine.Level
// Size : 0x280 (Inherited : 0x28)
struct ULevel : UObject {
	unsigned char UnknownData_28[0x0090]; // 0x28(0x90)
	struct UWorld* OwningWorld; // 0xB8(0x8)
	struct UModel* Model; // 0xC0(0x8)
	struct TArray<struct UModelComponent*> ModelComponents; // 0xC8(0x10)
	struct ULevelActorContainer* ActorCluster; // 0xD8(0x8)
	int32_t NumTextureStreamingUnbuiltComponents; // 0xE0(0x4)
	int32_t NumTextureStreamingDirtyResources; // 0xE4(0x4)
	struct ALevelScriptActor* LevelScriptActor; // 0xE8(0x8)
	struct ANavigationObjectBase* NavListStart; // 0xF0(0x8)
	struct ANavigationObjectBase* NavListEnd; // 0xF8(0x8)
	struct TArray<struct UNavigationDataChunk*> NavDataChunks; // 0x100(0x10)
	float LightmapTotalSize; // 0x110(0x4)
	float ShadowmapTotalSize; // 0x114(0x4)
	struct TArray<struct FVector> StaticNavigableGeometry; // 0x118(0x10)
	struct TArray<struct FGuid> StreamingTextureGuids; // 0x128(0x10)
	unsigned char UnknownData_138[0x0098]; // 0x138(0x98)
	struct FGuid LevelBuildDataId; // 0x1D0(0x10)
	struct UMapBuildDataRegistry* MapBuildData; // 0x1E0(0x8)
	struct FIntVector LightBuildLevelOffset; // 0x1E8(0xC)
	unsigned char bIsLightingScenario : 1; // 0x1F4(0x1)
	unsigned char UnknownData_1F4_1 : 2; // 0x1F4(0x1)
	unsigned char bTextureStreamingRotationChanged : 1; // 0x1F4(0x1)
	unsigned char bStaticComponentsRegisteredInStreamingManager : 1; // 0x1F4(0x1)
	unsigned char bIsVisible : 1; // 0x1F4(0x1)
	unsigned char UnknownData_1F4_6 : 2; // 0x1F4(0x1)
	unsigned char UnknownData_1F5[0x004B]; // 0x1F5(0x4B)
	struct AWorldSettings* WorldSettings; // 0x240(0x8)
	unsigned char UnknownData_248[0x0008]; // 0x248(0x8)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x250(0x10)
	unsigned char UnknownData_260[0x0010]; // 0x260(0x10)
	struct TArray<struct FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors; // 0x270(0x10)
};

// Class Engine.LevelActorContainer
// Size : 0x38 (Inherited : 0x28)
struct ULevelActorContainer : UObject {
	struct TArray<struct AActor*> Actors; // 0x28(0x10)
};

// Class Engine.LevelBounds
// Size : 0x230 (Inherited : 0x220)
struct ALevelBounds : AActor {
	struct UBoxComponent* BoxComponent; // 0x220(0x8)
	bool bAutoUpdateBounds; // 0x228(0x1)
	unsigned char UnknownData_229[0x0007]; // 0x229(0x7)
};

// Class Engine.LevelScriptActor
// Size : 0x228 (Inherited : 0x220)
struct ALevelScriptActor : AActor {
	unsigned char bInputEnabled : 1; // 0x220(0x1)
	unsigned char UnknownData_220_1 : 7; // 0x220(0x1)
	unsigned char UnknownData_221[0x0007]; // 0x221(0x7)

	void WorldOriginLocationChanged(struct FIntVector OldOriginLocation, struct FIntVector NewOriginLocation); // Function Engine.LevelScriptActor.WorldOriginLocationChanged // (Event|Public|HasDefaults|BlueprintEvent) // Param Size : 0x18, 0x7FF653FAFDF0
	void SetCinematicMode(bool bCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning); // Function Engine.LevelScriptActor.SetCinematicMode // (Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF65577B3F0
	bool RemoteEvent(struct FName EventName); // Function Engine.LevelScriptActor.RemoteEvent // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF65577AB40
	void LevelReset(); // Function Engine.LevelScriptActor.LevelReset // (BlueprintAuthorityOnly|Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF653FAFDF0
};

// Class Engine.LevelScriptBlueprint
// Size : 0xA0 (Inherited : 0xA0)
struct ULevelScriptBlueprint : UBlueprint {
};

// Class Engine.LevelStreaming
// Size : 0x150 (Inherited : 0x28)
struct ULevelStreaming : UObject {
	struct TSoftObjectPtr<struct UWorld> WorldAsset; // 0x28(0x28)
	struct FName PackageNameToLoad; // 0x50(0x8)
	struct TArray<struct FName> LODPackageNames; // 0x58(0x10)
	unsigned char UnknownData_68[0x0018]; // 0x68(0x18)
	struct FTransform LevelTransform; // 0x80(0x30)
	int32_t LevelLODIndex; // 0xB0(0x4)
	int32_t StreamingPriority; // 0xB4(0x4)
	unsigned char UnknownData_B8[0x0002]; // 0xB8(0x2)
	unsigned char UnknownData_BA_0 : 3; // 0xBA(0x1)
	unsigned char bShouldBeVisible : 1; // 0xBA(0x1)
	unsigned char bShouldBeLoaded : 1; // 0xBA(0x1)
	unsigned char bLocked : 1; // 0xBA(0x1)
	unsigned char bIsStatic : 1; // 0xBA(0x1)
	unsigned char bShouldBlockOnLoad : 1; // 0xBA(0x1)
	unsigned char bShouldBlockOnUnload : 1; // 0xBB(0x1)
	unsigned char bDisableDistanceStreaming : 1; // 0xBB(0x1)
	unsigned char bDrawOnLevelStatusMap : 1; // 0xBB(0x1)
	unsigned char UnknownData_BB_3 : 5; // 0xBB(0x1)
	struct FLinearColor LevelColor; // 0xBC(0x10)
	unsigned char UnknownData_CC[0x0004]; // 0xCC(0x4)
	struct TArray<struct ALevelStreamingVolume*> EditorStreamingVolumes; // 0xD0(0x10)
	float MinTimeBetweenVolumeUnloadRequests; // 0xE0(0x4)
	unsigned char UnknownData_E4[0x0004]; // 0xE4(0x4)
	struct FMulticastInlineDelegate OnLevelLoaded; // 0xE8(0x10)
	struct FMulticastInlineDelegate OnLevelUnloaded; // 0xF8(0x10)
	struct FMulticastInlineDelegate OnLevelShown; // 0x108(0x10)
	struct FMulticastInlineDelegate OnLevelHidden; // 0x118(0x10)
	struct ULevel* LoadedLevel; // 0x128(0x8)
	struct ULevel* PendingUnloadLevel; // 0x130(0x8)
	unsigned char UnknownData_138[0x0018]; // 0x138(0x18)

	bool ShouldBeLoaded(); // Function Engine.LevelStreaming.ShouldBeLoaded // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF654FA16E0
	void SetShouldBeVisible(bool bInShouldBeVisible); // Function Engine.LevelStreaming.SetShouldBeVisible // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577C1F0
	void SetShouldBeLoaded(bool bInShouldBeLoaded); // Function Engine.LevelStreaming.SetShouldBeLoaded // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65570BF00
	void SetPriority(int32_t NewPriority); // Function Engine.LevelStreaming.SetPriority // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577BFF0
	void SetLevelLODIndex(int32_t LODIndex); // Function Engine.LevelStreaming.SetLevelLODIndex // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577B960
	bool IsStreamingStatePending(); // Function Engine.LevelStreaming.IsStreamingStatePending // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65577A720
	bool IsLevelVisible(); // Function Engine.LevelStreaming.IsLevelVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65577A6F0
	bool IsLevelLoaded(); // Function Engine.LevelStreaming.IsLevelLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF65577A6C0
	struct FName GetWorldAssetPackageFName(); // Function Engine.LevelStreaming.GetWorldAssetPackageFName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF65577A650
	struct ULevel* GetLoadedLevel(); // Function Engine.LevelStreaming.GetLoadedLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF65577A630
	struct ALevelScriptActor* GetLevelScriptActor(); // Function Engine.LevelStreaming.GetLevelScriptActor // (Final|Native|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x8, 0x7FF65577A580
	struct ULevelStreaming* CreateInstance(struct FString UniqueInstanceName); // Function Engine.LevelStreaming.CreateInstance // (Final|Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF65577A4A0
};

// Class Engine.LevelStreamingAlwaysLoaded
// Size : 0x150 (Inherited : 0x150)
struct ULevelStreamingAlwaysLoaded : ULevelStreaming {
};

// Class Engine.LevelStreamingDynamic
// Size : 0x150 (Inherited : 0x150)
struct ULevelStreamingDynamic : ULevelStreaming {
	unsigned char bInitiallyLoaded : 1; // 0x148(0x1)
	unsigned char bInitiallyVisible : 1; // 0x148(0x1)

	struct ULevelStreamingDynamic* LoadLevelInstanceBySoftObjectPtr(struct UObject* WorldContextObject, struct TSoftObjectPtr<struct UWorld> Level, struct FVector Location, struct FRotator Rotation, bool bOutSuccess); // Function Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x58, 0x7FF65577A950
	struct ULevelStreamingDynamic* LoadLevelInstance(struct UObject* WorldContextObject, struct FString LevelName, struct FVector Location, struct FRotator Rotation, bool bOutSuccess); // Function Engine.LevelStreamingDynamic.LoadLevelInstance // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF65577A750
};

// Class Engine.LevelStreamingPersistent
// Size : 0x150 (Inherited : 0x150)
struct ULevelStreamingPersistent : ULevelStreaming {
};

// Class Engine.LevelStreamingVolume
// Size : 0x270 (Inherited : 0x258)
struct ALevelStreamingVolume : AVolume {
	struct TArray<struct FName> StreamingLevelNames; // 0x258(0x10)
	unsigned char bEditorPreVisOnly : 1; // 0x268(0x1)
	unsigned char bDisabled : 1; // 0x268(0x1)
	unsigned char UnknownData_268_2 : 6; // 0x268(0x1)
	unsigned char UnknownData_269[0x0003]; // 0x269(0x3)
	enum class EStreamingVolumeUsage StreamingUsage; // 0x26C(0x1)
	unsigned char UnknownData_26D[0x0003]; // 0x26D(0x3)
};

// Class Engine.LightmappedSurfaceCollection
// Size : 0x40 (Inherited : 0x28)
struct ULightmappedSurfaceCollection : UObject {
	struct UModel* SourceModel; // 0x28(0x8)
	struct TArray<int32_t> Surfaces; // 0x30(0x10)
};

// Class Engine.LightMapTexture2D
// Size : 0xF0 (Inherited : 0xE8)
struct ULightMapTexture2D : UTexture2D {
	unsigned char UnknownData_E8[0x0008]; // 0xE8(0x8)
};

// Class Engine.LightmassCharacterIndirectDetailVolume
// Size : 0x258 (Inherited : 0x258)
struct ALightmassCharacterIndirectDetailVolume : AVolume {
};

// Class Engine.LightmassImportanceVolume
// Size : 0x258 (Inherited : 0x258)
struct ALightmassImportanceVolume : AVolume {
};

// Class Engine.LightmassPortal
// Size : 0x228 (Inherited : 0x220)
struct ALightmassPortal : AActor {
	struct ULightmassPortalComponent* PortalComponent; // 0x220(0x8)
};

// Class Engine.LightmassPortalComponent
// Size : 0x200 (Inherited : 0x1F0)
struct ULightmassPortalComponent : USceneComponent {
	struct UBoxComponent* PreviewBox; // 0x1F0(0x8)
	unsigned char UnknownData_1F8[0x0008]; // 0x1F8(0x8)
};

// Class Engine.LightmassPrimitiveSettingsObject
// Size : 0x40 (Inherited : 0x28)
struct ULightmassPrimitiveSettingsObject : UObject {
	struct FLightmassPrimitiveSettings LightmassSettings; // 0x28(0x18)
};

// Class Engine.LineBatchComponent
// Size : 0x450 (Inherited : 0x410)
struct ULineBatchComponent : UPrimitiveComponent {
	unsigned char UnknownData_410[0x0040]; // 0x410(0x40)
};

// Class Engine.LocalLightComponent
// Size : 0x340 (Inherited : 0x320)
struct ULocalLightComponent : ULightComponent {
	enum class ELightUnits IntensityUnits; // 0x320(0x1)
	unsigned char UnknownData_321[0x0003]; // 0x321(0x3)
	float Radius; // 0x324(0x4)
	float AttenuationRadius; // 0x328(0x4)
	struct FLightmassPointLightSettings LightmassSettings; // 0x32C(0xC)
	unsigned char UnknownData_338[0x0008]; // 0x338(0x8)

	void SetIntensityUnits(enum class ELightUnits NewIntensityUnits); // Function Engine.LocalLightComponent.SetIntensityUnits // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF65577E280
	void SetAttenuationRadius(float NewRadius); // Function Engine.LocalLightComponent.SetAttenuationRadius // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577E200
	float GetUnitsConversionFactor(enum class ELightUnits SrcUnits, enum class ELightUnits TargetUnits, float CosHalfConeAngle); // Function Engine.LocalLightComponent.GetUnitsConversionFactor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0xC, 0x7FF65577E100
};

// Class Engine.LocalPlayer
// Size : 0x258 (Inherited : 0x48)
struct ULocalPlayer : UPlayer {
	unsigned char UnknownData_48[0x0028]; // 0x48(0x28)
	struct UGameViewportClient* ViewportClient; // 0x70(0x8)
	unsigned char UnknownData_78[0x001C]; // 0x78(0x1C)
	enum class EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x94(0x1)
	unsigned char UnknownData_95[0x0003]; // 0x95(0x3)
	class APlayerController* PendingLevelPlayerControllerClass; // 0x98(0x8)
	unsigned char bSentSplitJoin : 1; // 0xA0(0x1)
	unsigned char UnknownData_A0_1 : 7; // 0xA0(0x1)
	unsigned char UnknownData_A1[0x0017]; // 0xA1(0x17)
	int32_t ControllerId; // 0xB8(0x4)
	unsigned char UnknownData_BC[0x019C]; // 0xBC(0x19C)
};

// Class Engine.LocalPlayerSubsystem
// Size : 0x30 (Inherited : 0x30)
struct ULocalPlayerSubsystem : USubsystem {
};

// Class Engine.LODActor
// Size : 0x2A8 (Inherited : 0x220)
struct ALODActor : AActor {
	struct UStaticMeshComponent* StaticMeshComponent; // 0x220(0x8)
	struct TMap<struct UMaterialInterface*, struct UInstancedStaticMeshComponent*> ImpostersStaticMeshComponents; // 0x228(0x50)
	struct UHLODProxy* Proxy; // 0x278(0x8)
	struct FName Key; // 0x280(0x8)
	float LODDrawDistance; // 0x288(0x4)
	int32_t LODLevel; // 0x28C(0x4)
	struct TArray<struct AActor*> SubActors; // 0x290(0x10)
	enum class None CachedNumHLODLevels; // 0x2A0(0x1)
	unsigned char UnknownData_2A1[0x0007]; // 0x2A1(0x7)
};

// Class Engine.MapBuildDataRegistry
// Size : 0x238 (Inherited : 0x28)
struct UMapBuildDataRegistry : UObject {
	enum class ELightingBuildQuality LevelLightingQuality; // 0x28(0x1)
	unsigned char UnknownData_29[0x020F]; // 0x29(0x20F)
};

// Class Engine.Material
// Size : 0x4E8 (Inherited : 0x88)
struct UMaterial : UMaterialInterface {
	struct UPhysicalMaterial* PhysMaterial; // 0x88(0x8)
	struct UPhysicalMaterialMask* PhysMaterialMask; // 0x90(0x8)
	struct UPhysicalMaterial* PhysicalMaterialMap[8]; // 0x98(0x40)
	struct FScalarMaterialInput Metallic; // 0xD8(0xC)
	unsigned char UnknownData_E4[0x0008]; // 0xE4(0x8)
	struct FScalarMaterialInput Specular; // 0xEC(0xC)
	unsigned char UnknownData_F8[0x0008]; // 0xF8(0x8)
	struct FScalarMaterialInput Anisotropy; // 0x100(0xC)
	unsigned char UnknownData_10C[0x0008]; // 0x10C(0x8)
	struct FVectorMaterialInput Normal; // 0x114(0xC)
	unsigned char UnknownData_120[0x0008]; // 0x120(0x8)
	struct FVectorMaterialInput Tangent; // 0x128(0xC)
	unsigned char UnknownData_134[0x0008]; // 0x134(0x8)
	struct FColorMaterialInput EmissiveColor; // 0x13C(0xC)
	unsigned char UnknownData_148[0x0008]; // 0x148(0x8)
	enum class EMaterialDomain MaterialDomain; // 0x150(0x1)
	enum class EBlendMode BlendMode; // 0x151(0x1)
	enum class EDecalBlendMode DecalBlendMode; // 0x152(0x1)
	enum class EMaterialDecalResponse MaterialDecalResponse; // 0x153(0x1)
	enum class EMaterialShadingModel ShadingModel; // 0x154(0x1)
	unsigned char bCastDynamicShadowAsMasked : 1; // 0x155(0x1)
	unsigned char UnknownData_155_1 : 7; // 0x155(0x1)
	struct FMaterialShadingModelField ShadingModels; // 0x156(0x2)
	float OpacityMaskClipValue; // 0x158(0x4)
	struct FVectorMaterialInput WorldPositionOffset; // 0x15C(0xC)
	unsigned char UnknownData_168[0x0008]; // 0x168(0x8)
	struct FScalarMaterialInput Refraction; // 0x170(0xC)
	unsigned char UnknownData_17C[0x0008]; // 0x17C(0x8)
	struct FMaterialAttributesInput MaterialAttributes; // 0x184(0x10)
	unsigned char UnknownData_194[0x0008]; // 0x194(0x8)
	struct FScalarMaterialInput PixelDepthOffset; // 0x19C(0xC)
	unsigned char UnknownData_1A8[0x0008]; // 0x1A8(0x8)
	struct FShadingModelMaterialInput ShadingModelFromMaterialExpression; // 0x1B0(0xC)
	unsigned char UnknownData_1BC[0x0008]; // 0x1BC(0x8)
	unsigned char bEnableSeparateTranslucency : 1; // 0x1C4(0x1)
	unsigned char bEnableResponsiveAA : 1; // 0x1C4(0x1)
	unsigned char bScreenSpaceReflections : 1; // 0x1C4(0x1)
	unsigned char bContactShadows : 1; // 0x1C4(0x1)
	unsigned char TwoSided : 1; // 0x1C4(0x1)
	unsigned char DitheredLODTransition : 1; // 0x1C4(0x1)
	unsigned char DitherOpacityMask : 1; // 0x1C4(0x1)
	unsigned char bAllowNegativeEmissiveColor : 1; // 0x1C4(0x1)
	enum class ETranslucencyLightingMode TranslucencyLightingMode; // 0x1C5(0x1)
	unsigned char bEnableMobileSeparateTranslucency : 1; // 0x1C6(0x1)
	unsigned char UnknownData_1C6_1 : 7; // 0x1C6(0x1)
	unsigned char UnknownData_1C7[0x0001]; // 0x1C7(0x1)
	int32_t NumCustomizedUVs; // 0x1C8(0x4)
	float TranslucencyDirectionalLightingIntensity; // 0x1CC(0x4)
	float TranslucentShadowDensityScale; // 0x1D0(0x4)
	float TranslucentSelfShadowDensityScale; // 0x1D4(0x4)
	float TranslucentSelfShadowSecondDensityScale; // 0x1D8(0x4)
	float TranslucentSelfShadowSecondOpacity; // 0x1DC(0x4)
	float TranslucentBackscatteringExponent; // 0x1E0(0x4)
	struct FLinearColor TranslucentMultipleScatteringExtinction; // 0x1E4(0x10)
	float TranslucentShadowStartOffset; // 0x1F4(0x4)
	unsigned char bDisableDepthTest : 1; // 0x1F8(0x1)
	unsigned char bWriteOnlyAlpha : 1; // 0x1F8(0x1)
	unsigned char bGenerateSphericalParticleNormals : 1; // 0x1F8(0x1)
	unsigned char bTangentSpaceNormal : 1; // 0x1F8(0x1)
	unsigned char bUseEmissiveForDynamicAreaLighting : 1; // 0x1F8(0x1)
	unsigned char bBlockGI : 1; // 0x1F8(0x1)
	unsigned char bUsedAsSpecialEngineMaterial : 1; // 0x1F8(0x1)
	unsigned char bUsedWithSkeletalMesh : 1; // 0x1F8(0x1)
	unsigned char bUsedWithEditorCompositing : 1; // 0x1F9(0x1)
	unsigned char bUsedWithParticleSprites : 1; // 0x1F9(0x1)
	unsigned char bUsedWithBeamTrails : 1; // 0x1F9(0x1)
	unsigned char bUsedWithMeshParticles : 1; // 0x1F9(0x1)
	unsigned char bUsedWithNiagaraSprites : 1; // 0x1F9(0x1)
	unsigned char bUsedWithNiagaraRibbons : 1; // 0x1F9(0x1)
	unsigned char bUsedWithNiagaraMeshParticles : 1; // 0x1F9(0x1)
	unsigned char bUsedWithGeometryCache : 1; // 0x1F9(0x1)
	unsigned char bUsedWithStaticLighting : 1; // 0x1FA(0x1)
	unsigned char bUsedWithMorphTargets : 1; // 0x1FA(0x1)
	unsigned char bUsedWithSplineMeshes : 1; // 0x1FA(0x1)
	unsigned char bUsedWithInstancedStaticMeshes : 1; // 0x1FA(0x1)
	unsigned char bUsedWithGeometryCollections : 1; // 0x1FA(0x1)
	unsigned char bUsesDistortion : 1; // 0x1FA(0x1)
	unsigned char bUsedWithClothing : 1; // 0x1FA(0x1)
	unsigned char UnknownData_1FB[0x0001]; // 0x1FB(0x1)
	unsigned char bUsedWithWater : 1; // 0x1FC(0x1)
	unsigned char bUsedWithHairStrands : 1; // 0x1FC(0x1)
	unsigned char bUsedWithLidarPointCloud : 1; // 0x1FC(0x1)
	unsigned char UnknownData_1FC_3 : 5; // 0x1FC(0x1)
	unsigned char UnknownData_1FD[0x0003]; // 0x1FD(0x3)
	unsigned char bUsedWithUI : 1; // 0x200(0x1)
	unsigned char bAutomaticallySetUsageInEditor : 1; // 0x200(0x1)
	unsigned char bFullyRough : 1; // 0x200(0x1)
	unsigned char bUseFullPrecision : 1; // 0x200(0x1)
	unsigned char bUseLightmapDirectionality : 1; // 0x200(0x1)
	unsigned char UnknownData_200_5 : 3; // 0x200(0x1)
	unsigned char UnknownData_201[0x0003]; // 0x201(0x3)
	unsigned char bForwardRenderUsePreintegratedGFForSimpleIBL : 1; // 0x204(0x1)
	unsigned char UnknownData_204_1 : 7; // 0x204(0x1)
	unsigned char UnknownData_205[0x0003]; // 0x205(0x3)
	unsigned char bUseHQForwardReflections : 1; // 0x208(0x1)
	unsigned char bUsePlanarForwardReflections : 1; // 0x208(0x1)
	unsigned char bNormalCurvatureToRoughness : 1; // 0x208(0x1)
	unsigned char UnknownData_208_3 : 5; // 0x208(0x1)
	enum class EMaterialTessellationMode D3D11TessellationMode; // 0x209(0x1)
	unsigned char bEnableCrackFreeDisplacement : 1; // 0x20A(0x1)
	unsigned char bEnableAdaptiveTessellation : 1; // 0x20A(0x1)
	unsigned char AllowTranslucentCustomDepthWrites : 1; // 0x20A(0x1)
	unsigned char Wireframe : 1; // 0x20A(0x1)
	unsigned char bCanMaskedBeAssumedOpaque : 1; // 0x20A(0x1)
	unsigned char bIsMasked : 1; // 0x20A(0x1)
	unsigned char bIsPreviewMaterial : 1; // 0x20A(0x1)
	unsigned char bIsFunctionPreviewMaterial : 1; // 0x20A(0x1)
	unsigned char bUseMaterialAttributes : 1; // 0x20B(0x1)
	unsigned char bCastRayTracedShadows : 1; // 0x20B(0x1)
	unsigned char bUseTranslucencyVertexFog : 1; // 0x20B(0x1)
	unsigned char bIsSky : 1; // 0x20B(0x1)
	unsigned char bComputeFogPerPixel : 1; // 0x20B(0x1)
	unsigned char bOutputTranslucentVelocity : 1; // 0x20B(0x1)
	unsigned char bAllowDevelopmentShaderCompile : 1; // 0x20B(0x1)
	unsigned char bIsMaterialEditorStatsMaterial : 1; // 0x20B(0x1)
	enum class EBlendableLocation BlendableLocation; // 0x20C(0x1)
	unsigned char BlendableOutputAlpha : 1; // 0x20D(0x1)
	unsigned char bEnableStencilTest : 1; // 0x20D(0x1)
	unsigned char UnknownData_20D_2 : 6; // 0x20D(0x1)
	enum class EMaterialStencilCompare StencilCompare; // 0x20E(0x1)
	enum class None StencilRefValue; // 0x20F(0x1)
	enum class ERefractionMode RefractionMode; // 0x210(0x1)
	unsigned char UnknownData_211[0x0003]; // 0x211(0x3)
	int32_t BlendablePriority; // 0x214(0x4)
	unsigned char bIsBlendable : 1; // 0x218(0x1)
	unsigned char UnknownData_218_1 : 7; // 0x218(0x1)
	unsigned char UnknownData_219[0x0003]; // 0x219(0x3)
	uint32_t UsageFlagWarnings; // 0x21C(0x4)
	float RefractionDepthBias; // 0x220(0x4)
	struct FGuid StateId; // 0x224(0x10)
	float MaxDisplacement; // 0x234(0x4)
	unsigned char UnknownData_238[0x0088]; // 0x238(0x88)
	struct FMaterialCachedExpressionData CachedExpressionData; // 0x2C0(0x228)
};

// Class Engine.MaterialBillboardComponent
// Size : 0x420 (Inherited : 0x410)
struct UMaterialBillboardComponent : UPrimitiveComponent {
	struct TArray<struct FMaterialSpriteElement> Elements; // 0x408(0x10)

	void SetElements(struct TArray<struct FMaterialSpriteElement> NewElements); // Function Engine.MaterialBillboardComponent.SetElements // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x10, 0x7FF655781FF0
	void AddElement(struct UMaterialInterface* Material, struct UCurveFloat* DistanceToOpacityCurve, bool bSizeIsInScreenSpace, float BaseSizeX, float BaseSizeY, struct UCurveFloat* DistanceToSizeCurve); // Function Engine.MaterialBillboardComponent.AddElement // (Final|Native|Public|BlueprintCallable) // Param Size : 0x28, 0x7FF655781E20
};

// Class Engine.MaterialExpressionAbs
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionAbs : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionActorPositionWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionActorPositionWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionAdd
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionAdd : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float ConstA; // 0x68(0x4)
	float ConstB; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionAntialiasedTextureMask
// Size : 0xF8 (Inherited : 0xF0)
struct UMaterialExpressionAntialiasedTextureMask : UMaterialExpressionTextureSampleParameter2D {
	float Threshold; // 0xF0(0x4)
	enum class ETextureColorChannel Channel; // 0xF4(0x1)
	unsigned char UnknownData_F5[0x0003]; // 0xF5(0x3)
};

// Class Engine.MaterialExpressionAppendVector
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionAppendVector : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionArccosine
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionArccosine : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionArccosineFast
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionArccosineFast : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionArcsine
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionArcsine : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionArcsineFast
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionArcsineFast : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionArctangent
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionArctangent : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionArctangent2
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionArctangent2 : UMaterialExpression {
	struct FExpressionInput Y; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput X; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionArctangent2Fast
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionArctangent2Fast : UMaterialExpression {
	struct FExpressionInput Y; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput X; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionArctangentFast
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionArctangentFast : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionAtmosphericFogColor
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionAtmosphericFogColor : UMaterialExpression {
	struct FExpressionInput WorldPosition; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionAtmosphericLightColor
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionAtmosphericLightColor : UMaterialExpression {
};

// Class Engine.MaterialExpressionAtmosphericLightVector
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionAtmosphericLightVector : UMaterialExpression {
};

// Class Engine.MaterialExpressionBentNormalCustomOutput
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionBentNormalCustomOutput : UMaterialExpressionCustomOutput {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionBlackBody
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionBlackBody : UMaterialExpression {
	struct FExpressionInput Temp; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionBlendMaterialAttributes
// Size : 0x88 (Inherited : 0x40)
struct UMaterialExpressionBlendMaterialAttributes : UMaterialExpression {
	struct FMaterialAttributesInput A; // 0x40(0x10)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct FMaterialAttributesInput B; // 0x58(0x10)
	unsigned char UnknownData_68[0x0008]; // 0x68(0x8)
	struct FExpressionInput Alpha; // 0x70(0xC)
	unsigned char UnknownData_7C[0x0008]; // 0x7C(0x8)
	enum class EMaterialAttributeBlend PixelAttributeBlendType; // 0x84(0x1)
	enum class EMaterialAttributeBlend VertexAttributeBlendType; // 0x85(0x1)
	unsigned char UnknownData_86[0x0002]; // 0x86(0x2)
};

// Class Engine.MaterialExpressionBreakMaterialAttributes
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionBreakMaterialAttributes : UMaterialExpression {
	struct FMaterialAttributesInput MaterialAttributes; // 0x40(0x10)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
};

// Class Engine.MaterialExpressionBumpOffset
// Size : 0x88 (Inherited : 0x40)
struct UMaterialExpressionBumpOffset : UMaterialExpression {
	struct FExpressionInput Coordinate; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Height; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput HeightRatioInput; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	float HeightRatio; // 0x7C(0x4)
	float ReferencePlane; // 0x80(0x4)
	uint32_t ConstCoordinate; // 0x84(0x4)
};

// Class Engine.MaterialExpressionCameraPositionWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionCameraPositionWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionCameraVectorWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionCameraVectorWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionCeil
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionCeil : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionParameter
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionParameter : UMaterialExpression {
	struct FName ParameterName; // 0x40(0x8)
	struct FGuid ExpressionGUID; // 0x48(0x10)
};

// Class Engine.MaterialExpressionVectorParameter
// Size : 0x70 (Inherited : 0x58)
struct UMaterialExpressionVectorParameter : UMaterialExpressionParameter {
	struct FLinearColor DefaultValue; // 0x58(0x10)
	bool bUseCustomPrimitiveData; // 0x68(0x1)
	enum class None PrimitiveDataIndex; // 0x69(0x1)
	unsigned char UnknownData_6A[0x0006]; // 0x6A(0x6)
};

// Class Engine.MaterialExpressionChannelMaskParameter
// Size : 0x88 (Inherited : 0x70)
struct UMaterialExpressionChannelMaskParameter : UMaterialExpressionVectorParameter {
	enum class EChannelMaskParameterColor MaskChannel; // 0x70(0x1)
	unsigned char UnknownData_71[0x0003]; // 0x71(0x3)
	struct FExpressionInput Input; // 0x74(0xC)
	unsigned char UnknownData_80[0x0008]; // 0x80(0x8)
};

// Class Engine.MaterialExpressionClamp
// Size : 0x88 (Inherited : 0x40)
struct UMaterialExpressionClamp : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Min; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput Max; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	enum class EClampMode ClampMode; // 0x7C(0x1)
	unsigned char UnknownData_7D[0x0003]; // 0x7D(0x3)
	float MinDefault; // 0x80(0x4)
	float MaxDefault; // 0x84(0x4)
};

// Class Engine.MaterialExpressionClearCoatNormalCustomOutput
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionClearCoatNormalCustomOutput : UMaterialExpressionCustomOutput {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionCollectionParameter
// Size : 0x60 (Inherited : 0x40)
struct UMaterialExpressionCollectionParameter : UMaterialExpression {
	struct UMaterialParameterCollection* Collection; // 0x40(0x8)
	struct FName ParameterName; // 0x48(0x8)
	struct FGuid ParameterId; // 0x50(0x10)
};

// Class Engine.MaterialExpressionComment
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionComment : UMaterialExpression {
	int32_t SizeX; // 0x40(0x4)
	int32_t SizeY; // 0x44(0x4)
	struct FString Text; // 0x48(0x10)
	struct FLinearColor CommentColor; // 0x58(0x10)
	int32_t FontSize; // 0x68(0x4)
	unsigned char UnknownData_6C[0x0004]; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionComponentMask
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionComponentMask : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	unsigned char R : 1; // 0x54(0x1)
	unsigned char G : 1; // 0x54(0x1)
	unsigned char B : 1; // 0x54(0x1)
	unsigned char A : 1; // 0x54(0x1)
	unsigned char UnknownData_54_4 : 4; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
};

// Class Engine.MaterialExpressionConstant
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionConstant : UMaterialExpression {
	float R; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
};

// Class Engine.MaterialExpressionConstant2Vector
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionConstant2Vector : UMaterialExpression {
	float R; // 0x40(0x4)
	float G; // 0x44(0x4)
};

// Class Engine.MaterialExpressionConstant3Vector
// Size : 0x50 (Inherited : 0x40)
struct UMaterialExpressionConstant3Vector : UMaterialExpression {
	struct FLinearColor Constant; // 0x40(0x10)
};

// Class Engine.MaterialExpressionConstant4Vector
// Size : 0x50 (Inherited : 0x40)
struct UMaterialExpressionConstant4Vector : UMaterialExpression {
	struct FLinearColor Constant; // 0x40(0x10)
};

// Class Engine.MaterialExpressionConstantBiasScale
// Size : 0x60 (Inherited : 0x40)
struct UMaterialExpressionConstantBiasScale : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float Bias; // 0x54(0x4)
	float Scale; // 0x58(0x4)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
};

// Class Engine.MaterialExpressionCosine
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionCosine : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float Period; // 0x54(0x4)
};

// Class Engine.MaterialExpressionCrossProduct
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionCrossProduct : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionScalarParameter
// Size : 0x60 (Inherited : 0x58)
struct UMaterialExpressionScalarParameter : UMaterialExpressionParameter {
	float DefaultValue; // 0x58(0x4)
	bool bUseCustomPrimitiveData; // 0x5C(0x1)
	enum class None PrimitiveDataIndex; // 0x5D(0x1)
	unsigned char UnknownData_5E[0x0002]; // 0x5E(0x2)
};

// Class Engine.MaterialExpressionCurveAtlasRowParameter
// Size : 0x88 (Inherited : 0x60)
struct UMaterialExpressionCurveAtlasRowParameter : UMaterialExpressionScalarParameter {
	struct UCurveLinearColor* Curve; // 0x60(0x8)
	struct UCurveLinearColorAtlas* Atlas; // 0x68(0x8)
	struct FExpressionInput InputTime; // 0x70(0xC)
	unsigned char UnknownData_7C[0x000C]; // 0x7C(0xC)
};

// Class Engine.MaterialExpressionCustom
// Size : 0x98 (Inherited : 0x40)
struct UMaterialExpressionCustom : UMaterialExpression {
	struct FString Code; // 0x40(0x10)
	enum class ECustomMaterialOutputType OutputType; // 0x50(0x1)
	unsigned char UnknownData_51[0x0007]; // 0x51(0x7)
	struct FString Description; // 0x58(0x10)
	struct TArray<struct FCustomInput> Inputs; // 0x68(0x10)
	struct TArray<struct FCustomDefine> AdditionalDefines; // 0x78(0x10)
	struct TArray<struct FString> IncludeFilePaths; // 0x88(0x10)
};

// Class Engine.MaterialExpressionDDX
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionDDX : UMaterialExpression {
	struct FExpressionInput Value; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionDDY
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionDDY : UMaterialExpression {
	struct FExpressionInput Value; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionDecalDerivative
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionDecalDerivative : UMaterialExpression {
};

// Class Engine.MaterialExpressionDecalLifetimeOpacity
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionDecalLifetimeOpacity : UMaterialExpression {
};

// Class Engine.MaterialExpressionDecalMipmapLevel
// Size : 0x60 (Inherited : 0x40)
struct UMaterialExpressionDecalMipmapLevel : UMaterialExpression {
	struct FExpressionInput TextureSize; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float ConstWidth; // 0x54(0x4)
	float ConstHeight; // 0x58(0x4)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
};

// Class Engine.MaterialExpressionDeltaTime
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionDeltaTime : UMaterialExpression {
};

// Class Engine.MaterialExpressionDepthFade
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionDepthFade : UMaterialExpression {
	struct FExpressionInput InOpacity; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput FadeDistance; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float OpacityDefault; // 0x68(0x4)
	float FadeDistanceDefault; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionDepthOfFieldFunction
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionDepthOfFieldFunction : UMaterialExpression {
	enum class EDepthOfFieldFunctionValue FunctionValue; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	struct FExpressionInput Depth; // 0x44(0xC)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
};

// Class Engine.MaterialExpressionDeriveNormalZ
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionDeriveNormalZ : UMaterialExpression {
	struct FExpressionInput InXY; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionDesaturation
// Size : 0x78 (Inherited : 0x40)
struct UMaterialExpressionDesaturation : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Fraction; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FLinearColor LuminanceFactors; // 0x68(0x10)
};

// Class Engine.MaterialExpressionDistance
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionDistance : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionDistanceCullFade
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionDistanceCullFade : UMaterialExpression {
};

// Class Engine.MaterialExpressionDistanceFieldGradient
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionDistanceFieldGradient : UMaterialExpression {
	struct FExpressionInput Position; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionDistanceToNearestSurface
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionDistanceToNearestSurface : UMaterialExpression {
	struct FExpressionInput Position; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionDivide
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionDivide : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float ConstA; // 0x68(0x4)
	float ConstB; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionDotProduct
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionDotProduct : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionDynamicParameter
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionDynamicParameter : UMaterialExpression {
	struct TArray<struct FString> ParamNames; // 0x40(0x10)
	struct FLinearColor DefaultValue; // 0x50(0x10)
	uint32_t ParameterIndex; // 0x60(0x4)
	unsigned char UnknownData_64[0x0004]; // 0x64(0x4)
};

// Class Engine.MaterialExpressionEyeAdaptation
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionEyeAdaptation : UMaterialExpression {
};

// Class Engine.MaterialExpressionFeatureLevelSwitch
// Size : 0xA8 (Inherited : 0x40)
struct UMaterialExpressionFeatureLevelSwitch : UMaterialExpression {
	struct FExpressionInput Default; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Inputs[4]; // 0x54(0x30)
	unsigned char UnknownData_84[0x0024]; // 0x84(0x24)
};

// Class Engine.MaterialExpressionFloor
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionFloor : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionFmod
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionFmod : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionFontSample
// Size : 0x50 (Inherited : 0x40)
struct UMaterialExpressionFontSample : UMaterialExpression {
	struct UFont* Font; // 0x40(0x8)
	int32_t FontTexturePage; // 0x48(0x4)
	unsigned char UnknownData_4C[0x0004]; // 0x4C(0x4)
};

// Class Engine.MaterialExpressionFontSampleParameter
// Size : 0x70 (Inherited : 0x50)
struct UMaterialExpressionFontSampleParameter : UMaterialExpressionFontSample {
	struct FName ParameterName; // 0x50(0x8)
	struct FGuid ExpressionGUID; // 0x58(0x10)
	struct FName Group; // 0x68(0x8)
};

// Class Engine.MaterialExpressionFrac
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionFrac : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionFresnel
// Size : 0x88 (Inherited : 0x40)
struct UMaterialExpressionFresnel : UMaterialExpression {
	struct FExpressionInput ExponentIn; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float Exponent; // 0x54(0x4)
	struct FExpressionInput BaseReflectFractionIn; // 0x58(0xC)
	unsigned char UnknownData_64[0x0008]; // 0x64(0x8)
	float BaseReflectFraction; // 0x6C(0x4)
	struct FExpressionInput Normal; // 0x70(0xC)
	unsigned char UnknownData_7C[0x000C]; // 0x7C(0xC)
};

// Class Engine.MaterialExpressionFunctionInput
// Size : 0xC0 (Inherited : 0x40)
struct UMaterialExpressionFunctionInput : UMaterialExpression {
	struct FExpressionInput Preview; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FName InputName; // 0x54(0x8)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
	struct FString Description; // 0x60(0x10)
	struct FGuid ID; // 0x70(0x10)
	enum class EFunctionInputType InputType; // 0x80(0x1)
	unsigned char UnknownData_81[0x000F]; // 0x81(0xF)
	struct FVector4 PreviewValue; // 0x90(0x10)
	unsigned char bUsePreviewValueAsDefault : 1; // 0xA0(0x1)
	unsigned char UnknownData_A0_1 : 7; // 0xA0(0x1)
	unsigned char UnknownData_A1[0x0003]; // 0xA1(0x3)
	int32_t SortPriority; // 0xA4(0x4)
	unsigned char bCompilingFunctionPreview : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_1 : 7; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0017]; // 0xA9(0x17)
};

// Class Engine.MaterialExpressionFunctionOutput
// Size : 0x88 (Inherited : 0x40)
struct UMaterialExpressionFunctionOutput : UMaterialExpression {
	struct FName OutputName; // 0x40(0x8)
	struct FString Description; // 0x48(0x10)
	int32_t SortPriority; // 0x58(0x4)
	struct FExpressionInput A; // 0x5C(0xC)
	unsigned char UnknownData_68[0x0008]; // 0x68(0x8)
	unsigned char bLastPreviewed : 1; // 0x70(0x1)
	unsigned char UnknownData_70_1 : 7; // 0x70(0x1)
	unsigned char UnknownData_71[0x0003]; // 0x71(0x3)
	struct FGuid ID; // 0x74(0x10)
	unsigned char UnknownData_84[0x0004]; // 0x84(0x4)
};

// Class Engine.MaterialExpressionGetMaterialAttributes
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionGetMaterialAttributes : UMaterialExpression {
	struct FMaterialAttributesInput MaterialAttributes; // 0x40(0x10)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct TArray<struct FGuid> AttributeGetTypes; // 0x58(0x10)
};

// Class Engine.MaterialExpressionGIReplace
// Size : 0x80 (Inherited : 0x40)
struct UMaterialExpressionGIReplace : UMaterialExpression {
	struct FExpressionInput Default; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput StaticIndirect; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput DynamicIndirect; // 0x68(0xC)
	unsigned char UnknownData_74[0x000C]; // 0x74(0xC)
};

// Class Engine.MaterialExpressionHairAttributes
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionHairAttributes : UMaterialExpression {
};

// Class Engine.MaterialExpressionIf
// Size : 0xB0 (Inherited : 0x40)
struct UMaterialExpressionIf : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput AGreaterThanB; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	struct FExpressionInput AEqualsB; // 0x7C(0xC)
	unsigned char UnknownData_88[0x0008]; // 0x88(0x8)
	struct FExpressionInput ALessThanB; // 0x90(0xC)
	unsigned char UnknownData_9C[0x0008]; // 0x9C(0x8)
	float EqualsThreshold; // 0xA4(0x4)
	float ConstB; // 0xA8(0x4)
	float ConstAEqualsB; // 0xAC(0x4)
};

// Class Engine.MaterialExpressionLightmapUVs
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionLightmapUVs : UMaterialExpression {
};

// Class Engine.MaterialExpressionLightmassReplace
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionLightmassReplace : UMaterialExpression {
	struct FExpressionInput Realtime; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Lightmass; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionLightVector
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionLightVector : UMaterialExpression {
};

// Class Engine.MaterialExpressionLinearInterpolate
// Size : 0x88 (Inherited : 0x40)
struct UMaterialExpressionLinearInterpolate : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput Alpha; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	float ConstA; // 0x7C(0x4)
	float ConstB; // 0x80(0x4)
	float ConstAlpha; // 0x84(0x4)
};

// Class Engine.MaterialExpressionLogarithm10
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionLogarithm10 : UMaterialExpression {
	struct FExpressionInput X; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionLogarithm2
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionLogarithm2 : UMaterialExpression {
	struct FExpressionInput X; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionMakeMaterialAttributes
// Size : 0x270 (Inherited : 0x40)
struct UMaterialExpressionMakeMaterialAttributes : UMaterialExpression {
	struct FExpressionInput BaseColor; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Metallic; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput Specular; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	struct FExpressionInput Roughness; // 0x7C(0xC)
	unsigned char UnknownData_88[0x0008]; // 0x88(0x8)
	struct FExpressionInput Anisotropy; // 0x90(0xC)
	unsigned char UnknownData_9C[0x0008]; // 0x9C(0x8)
	struct FExpressionInput EmissiveColor; // 0xA4(0xC)
	unsigned char UnknownData_B0[0x0008]; // 0xB0(0x8)
	struct FExpressionInput Opacity; // 0xB8(0xC)
	unsigned char UnknownData_C4[0x0008]; // 0xC4(0x8)
	struct FExpressionInput OpacityMask; // 0xCC(0xC)
	unsigned char UnknownData_D8[0x0008]; // 0xD8(0x8)
	struct FExpressionInput Normal; // 0xE0(0xC)
	unsigned char UnknownData_EC[0x0008]; // 0xEC(0x8)
	struct FExpressionInput Tangent; // 0xF4(0xC)
	unsigned char UnknownData_100[0x0008]; // 0x100(0x8)
	struct FExpressionInput WorldPositionOffset; // 0x108(0xC)
	unsigned char UnknownData_114[0x0008]; // 0x114(0x8)
	struct FExpressionInput WorldDisplacement; // 0x11C(0xC)
	unsigned char UnknownData_128[0x0008]; // 0x128(0x8)
	struct FExpressionInput TessellationMultiplier; // 0x130(0xC)
	unsigned char UnknownData_13C[0x0008]; // 0x13C(0x8)
	struct FExpressionInput SubsurfaceColor; // 0x144(0xC)
	unsigned char UnknownData_150[0x0008]; // 0x150(0x8)
	struct FExpressionInput ClearCoat; // 0x158(0xC)
	unsigned char UnknownData_164[0x0008]; // 0x164(0x8)
	struct FExpressionInput ClearCoatRoughness; // 0x16C(0xC)
	unsigned char UnknownData_178[0x0008]; // 0x178(0x8)
	struct FExpressionInput AmbientOcclusion; // 0x180(0xC)
	unsigned char UnknownData_18C[0x0008]; // 0x18C(0x8)
	struct FExpressionInput Refraction; // 0x194(0xC)
	unsigned char UnknownData_1A0[0x0008]; // 0x1A0(0x8)
	struct FExpressionInput CustomizedUVs[8]; // 0x1A8(0x60)
	unsigned char UnknownData_208[0x0040]; // 0x208(0x40)
	struct FExpressionInput PixelDepthOffset; // 0x248(0xC)
	unsigned char UnknownData_254[0x0008]; // 0x254(0x8)
	struct FExpressionInput ShadingModel; // 0x25C(0xC)
	unsigned char UnknownData_268[0x0008]; // 0x268(0x8)
};

// Class Engine.MaterialExpressionMapARPassthroughCameraUV
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionMapARPassthroughCameraUV : UMaterialExpression {
	struct FExpressionInput Coordinates; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionMaterialAttributeLayers
// Size : 0xE8 (Inherited : 0x40)
struct UMaterialExpressionMaterialAttributeLayers : UMaterialExpression {
	struct FName ParameterName; // 0x40(0x8)
	struct FGuid ExpressionGUID; // 0x48(0x10)
	struct FMaterialAttributesInput Input; // 0x58(0x10)
	unsigned char UnknownData_68[0x0008]; // 0x68(0x8)
	struct FMaterialLayersFunctions DefaultLayers; // 0x70(0x40)
	struct TArray<struct UMaterialExpressionMaterialFunctionCall*> LayerCallers; // 0xB0(0x10)
	int32_t NumActiveLayerCallers; // 0xC0(0x4)
	unsigned char UnknownData_C4[0x0004]; // 0xC4(0x4)
	struct TArray<struct UMaterialExpressionMaterialFunctionCall*> BlendCallers; // 0xC8(0x10)
	int32_t NumActiveBlendCallers; // 0xD8(0x4)
	bool bIsLayerGraphBuilt; // 0xDC(0x1)
	unsigned char UnknownData_DD[0x000B]; // 0xDD(0xB)
};

// Class Engine.MaterialExpressionMaterialFunctionCall
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionMaterialFunctionCall : UMaterialExpression {
	struct UMaterialFunctionInterface* MaterialFunction; // 0x40(0x8)
	struct FMaterialParameterInfo FunctionParameterInfo; // 0x48(0x10)
};

// Class Engine.MaterialExpressionMaterialLayerOutput
// Size : 0x88 (Inherited : 0x88)
struct UMaterialExpressionMaterialLayerOutput : UMaterialExpressionFunctionOutput {
};

// Class Engine.MaterialExpressionMaterialProxyReplace
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionMaterialProxyReplace : UMaterialExpression {
	struct FExpressionInput Realtime; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput MaterialProxy; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionMax
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionMax : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float ConstA; // 0x68(0x4)
	float ConstB; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionMin
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionMin : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float ConstA; // 0x68(0x4)
	float ConstB; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionMultiply
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionMultiply : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float ConstA; // 0x68(0x4)
	float ConstB; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionNoise
// Size : 0x90 (Inherited : 0x40)
struct UMaterialExpressionNoise : UMaterialExpression {
	struct FExpressionInput Position; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput FilterWidth; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float Scale; // 0x68(0x4)
	int32_t Quality; // 0x6C(0x4)
	enum class ENoiseFunction NoiseFunction; // 0x70(0x1)
	unsigned char UnknownData_71[0x0003]; // 0x71(0x3)
	unsigned char bTurbulence : 1; // 0x74(0x1)
	unsigned char UnknownData_74_1 : 7; // 0x74(0x1)
	unsigned char UnknownData_75[0x0003]; // 0x75(0x3)
	int32_t Levels; // 0x78(0x4)
	float OutputMin; // 0x7C(0x4)
	float OutputMax; // 0x80(0x4)
	float LevelScale; // 0x84(0x4)
	unsigned char bTiling : 1; // 0x88(0x1)
	unsigned char UnknownData_88_1 : 7; // 0x88(0x1)
	unsigned char UnknownData_89[0x0003]; // 0x89(0x3)
	uint32_t RepeatSize; // 0x8C(0x4)
};

// Class Engine.MaterialExpressionNormalize
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionNormalize : UMaterialExpression {
	struct FExpressionInput VectorInput; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionObjectBounds
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionObjectBounds : UMaterialExpression {
};

// Class Engine.MaterialExpressionObjectOrientation
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionObjectOrientation : UMaterialExpression {
};

// Class Engine.MaterialExpressionObjectPositionWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionObjectPositionWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionObjectRadius
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionObjectRadius : UMaterialExpression {
};

// Class Engine.MaterialExpressionOneMinus
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionOneMinus : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionPanner
// Size : 0x90 (Inherited : 0x40)
struct UMaterialExpressionPanner : UMaterialExpression {
	struct FExpressionInput Coordinate; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Time; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput Speed; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	float SpeedX; // 0x7C(0x4)
	float SpeedY; // 0x80(0x4)
	uint32_t ConstCoordinate; // 0x84(0x4)
	bool bFractionalPart; // 0x88(0x1)
	unsigned char UnknownData_89[0x0007]; // 0x89(0x7)
};

// Class Engine.MaterialExpressionParticleColor
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleColor : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleDirection
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleDirection : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleMacroUV
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleMacroUV : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleMotionBlurFade
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleMotionBlurFade : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticlePositionWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticlePositionWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleRadius
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleRadius : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleRandom
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleRandom : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleRelativeTime
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleRelativeTime : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleSize
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleSize : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleSpeed
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleSpeed : UMaterialExpression {
};

// Class Engine.MaterialExpressionParticleSubUV
// Size : 0xD8 (Inherited : 0xD0)
struct UMaterialExpressionParticleSubUV : UMaterialExpressionTextureSample {
	unsigned char bBlend : 1; // 0xD0(0x1)
	unsigned char UnknownData_D0_1 : 7; // 0xD0(0x1)
	unsigned char UnknownData_D1[0x0007]; // 0xD1(0x7)
};

// Class Engine.MaterialExpressionParticleSubUVProperties
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionParticleSubUVProperties : UMaterialExpression {
};

// Class Engine.MaterialExpressionPerInstanceCustomData
// Size : 0x60 (Inherited : 0x40)
struct UMaterialExpressionPerInstanceCustomData : UMaterialExpression {
	struct FExpressionInput DefaultValue; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float ConstDefaultValue; // 0x54(0x4)
	uint32_t DataIndex; // 0x58(0x4)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
};

// Class Engine.MaterialExpressionPerInstanceFadeAmount
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPerInstanceFadeAmount : UMaterialExpression {
};

// Class Engine.MaterialExpressionPerInstanceRandom
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPerInstanceRandom : UMaterialExpression {
};

// Class Engine.MaterialExpressionPixelDepth
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPixelDepth : UMaterialExpression {
};

// Class Engine.MaterialExpressionPixelNormalWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPixelNormalWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionPower
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionPower : UMaterialExpression {
	struct FExpressionInput Base; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Exponent; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float ConstExponent; // 0x68(0x4)
	unsigned char UnknownData_6C[0x0004]; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionPrecomputedAOMask
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPrecomputedAOMask : UMaterialExpression {
};

// Class Engine.MaterialExpressionPreSkinnedLocalBounds
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPreSkinnedLocalBounds : UMaterialExpression {
};

// Class Engine.MaterialExpressionPreSkinnedNormal
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPreSkinnedNormal : UMaterialExpression {
};

// Class Engine.MaterialExpressionPreSkinnedPosition
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionPreSkinnedPosition : UMaterialExpression {
};

// Class Engine.MaterialExpressionPreviousFrameSwitch
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionPreviousFrameSwitch : UMaterialExpression {
	struct FExpressionInput CurrentFrame; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput PreviousFrame; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionQualitySwitch
// Size : 0x90 (Inherited : 0x40)
struct UMaterialExpressionQualitySwitch : UMaterialExpression {
	struct FExpressionInput Default; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Inputs[3]; // 0x54(0x24)
	unsigned char UnknownData_78[0x0018]; // 0x78(0x18)
};

// Class Engine.MaterialExpressionRayTracingQualitySwitch
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionRayTracingQualitySwitch : UMaterialExpression {
	struct FExpressionInput Normal; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput RayTraced; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionReflectionVectorWS
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionReflectionVectorWS : UMaterialExpression {
	struct FExpressionInput CustomWorldNormal; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	unsigned char bNormalizeCustomWorldNormal : 1; // 0x54(0x1)
	unsigned char UnknownData_54_1 : 7; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
};

// Class Engine.MaterialExpressionReroute
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionReroute : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionRotateAboutAxis
// Size : 0x98 (Inherited : 0x40)
struct UMaterialExpressionRotateAboutAxis : UMaterialExpression {
	struct FExpressionInput NormalizedRotationAxis; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput RotationAngle; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput PivotPoint; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	struct FExpressionInput Position; // 0x7C(0xC)
	unsigned char UnknownData_88[0x0008]; // 0x88(0x8)
	float Period; // 0x90(0x4)
	unsigned char UnknownData_94[0x0004]; // 0x94(0x4)
};

// Class Engine.MaterialExpressionRotator
// Size : 0x78 (Inherited : 0x40)
struct UMaterialExpressionRotator : UMaterialExpression {
	struct FExpressionInput Coordinate; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Time; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float CenterX; // 0x68(0x4)
	float CenterY; // 0x6C(0x4)
	float Speed; // 0x70(0x4)
	uint32_t ConstCoordinate; // 0x74(0x4)
};

// Class Engine.MaterialExpressionRound
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionRound : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionRuntimeVirtualTextureOutput
// Size : 0xD0 (Inherited : 0x40)
struct UMaterialExpressionRuntimeVirtualTextureOutput : UMaterialExpressionCustomOutput {
	struct FExpressionInput BaseColor; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Specular; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput Roughness; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	struct FExpressionInput Normal; // 0x7C(0xC)
	unsigned char UnknownData_88[0x0008]; // 0x88(0x8)
	struct FExpressionInput WorldHeight; // 0x90(0xC)
	unsigned char UnknownData_9C[0x0008]; // 0x9C(0x8)
	struct FExpressionInput Opacity; // 0xA4(0xC)
	unsigned char UnknownData_B0[0x0008]; // 0xB0(0x8)
	struct FExpressionInput Mask; // 0xB8(0xC)
	unsigned char UnknownData_C4[0x000C]; // 0xC4(0xC)
};

// Class Engine.MaterialExpressionRuntimeVirtualTextureReplace
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionRuntimeVirtualTextureReplace : UMaterialExpression {
	struct FExpressionInput Default; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput VirtualTextureOutput; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionRuntimeVirtualTextureSample
// Size : 0x90 (Inherited : 0x40)
struct UMaterialExpressionRuntimeVirtualTextureSample : UMaterialExpression {
	struct FExpressionInput Coordinates; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput WorldPosition; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput MipValue; // 0x68(0xC)
	unsigned char UnknownData_74[0x000C]; // 0x74(0xC)
	struct URuntimeVirtualTexture* VirtualTexture; // 0x80(0x8)
	enum class ERuntimeVirtualTextureMaterialType MaterialType; // 0x88(0x1)
	bool bSinglePhysicalSpace; // 0x89(0x1)
	enum class ERuntimeVirtualTextureMipValueMode MipValueMode; // 0x8A(0x1)
	unsigned char UnknownData_8B[0x0005]; // 0x8B(0x5)
};

// Class Engine.MaterialExpressionRuntimeVirtualTextureSampleParameter
// Size : 0xB0 (Inherited : 0x90)
struct UMaterialExpressionRuntimeVirtualTextureSampleParameter : UMaterialExpressionRuntimeVirtualTextureSample {
	struct FName ParameterName; // 0x90(0x8)
	struct FGuid ExpressionGUID; // 0x98(0x10)
	struct FName Group; // 0xA8(0x8)
};

// Class Engine.MaterialExpressionSaturate
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSaturate : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionSceneColor
// Size : 0x78 (Inherited : 0x40)
struct UMaterialExpressionSceneColor : UMaterialExpression {
	enum class EMaterialSceneAttributeInputMode InputMode; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	struct FExpressionInput Input; // 0x44(0xC)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct FExpressionInput OffsetFraction; // 0x58(0xC)
	unsigned char UnknownData_64[0x0008]; // 0x64(0x8)
	struct FVector2D ConstInput; // 0x6C(0x8)
	unsigned char UnknownData_74[0x0004]; // 0x74(0x4)
};

// Class Engine.MaterialExpressionSceneDepth
// Size : 0x78 (Inherited : 0x40)
struct UMaterialExpressionSceneDepth : UMaterialExpression {
	enum class EMaterialSceneAttributeInputMode InputMode; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	struct FExpressionInput Input; // 0x44(0xC)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct FExpressionInput Coordinates; // 0x58(0xC)
	unsigned char UnknownData_64[0x0008]; // 0x64(0x8)
	struct FVector2D ConstInput; // 0x6C(0x8)
	unsigned char UnknownData_74[0x0004]; // 0x74(0x4)
};

// Class Engine.MaterialExpressionSceneTexelSize
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionSceneTexelSize : UMaterialExpression {
};

// Class Engine.MaterialExpressionSceneTexture
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSceneTexture : UMaterialExpression {
	struct FExpressionInput Coordinates; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	enum class ESceneTextureId SceneTextureId; // 0x54(0x1)
	bool bFiltered; // 0x55(0x1)
	unsigned char UnknownData_56[0x0002]; // 0x56(0x2)
};

// Class Engine.MaterialExpressionScreenPosition
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionScreenPosition : UMaterialExpression {
};

// Class Engine.MaterialExpressionSetMaterialAttributes
// Size : 0x60 (Inherited : 0x40)
struct UMaterialExpressionSetMaterialAttributes : UMaterialExpression {
	struct TArray<struct FExpressionInput> Inputs; // 0x40(0x10)
	struct TArray<struct FGuid> AttributeSetTypes; // 0x50(0x10)
};

// Class Engine.MaterialExpressionShaderStageSwitch
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionShaderStageSwitch : UMaterialExpression {
	struct FExpressionInput PixelShader; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput VertexShader; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionShadingModel
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionShadingModel : UMaterialExpression {
	enum class EMaterialShadingModel ShadingModel; // 0x40(0x1)
	unsigned char UnknownData_41[0x0007]; // 0x41(0x7)
};

// Class Engine.MaterialExpressionShadingPathSwitch
// Size : 0x90 (Inherited : 0x40)
struct UMaterialExpressionShadingPathSwitch : UMaterialExpression {
	struct FExpressionInput Default; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Inputs[3]; // 0x54(0x24)
	unsigned char UnknownData_78[0x0018]; // 0x78(0x18)
};

// Class Engine.MaterialExpressionShadowReplace
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionShadowReplace : UMaterialExpression {
	struct FExpressionInput Default; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Shadow; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionSign
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSign : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionSine
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSine : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float Period; // 0x54(0x4)
};

// Class Engine.MaterialExpressionSingleLayerWaterMaterialOutput
// Size : 0x80 (Inherited : 0x40)
struct UMaterialExpressionSingleLayerWaterMaterialOutput : UMaterialExpressionCustomOutput {
	struct FExpressionInput ScatteringCoefficients; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput AbsorptionCoefficients; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput PhaseG; // 0x68(0xC)
	unsigned char UnknownData_74[0x000C]; // 0x74(0xC)
};

// Class Engine.MaterialExpressionSkyAtmosphereLightDirection
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionSkyAtmosphereLightDirection : UMaterialExpression {
	int32_t LightIndex; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
};

// Class Engine.MaterialExpressionSkyAtmosphereLightIlluminance
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSkyAtmosphereLightIlluminance : UMaterialExpression {
	int32_t LightIndex; // 0x40(0x4)
	struct FExpressionInput WorldPosition; // 0x44(0xC)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
};

// Class Engine.MaterialExpressionSkyAtmosphereLightDiskLuminance
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionSkyAtmosphereLightDiskLuminance : UMaterialExpression {
	int32_t LightIndex; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
};

// Class Engine.MaterialExpressionSkyAtmosphereAerialPerspective
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSkyAtmosphereAerialPerspective : UMaterialExpression {
	struct FExpressionInput WorldPosition; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance : UMaterialExpression {
};

// Class Engine.MaterialExpressionSkyAtmosphereViewLuminance
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionSkyAtmosphereViewLuminance : UMaterialExpression {
};

// Class Engine.MaterialExpressionSobol
// Size : 0x88 (Inherited : 0x40)
struct UMaterialExpressionSobol : UMaterialExpression {
	struct FExpressionInput Cell; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Index; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput Seed; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	uint32_t ConstIndex; // 0x7C(0x4)
	struct FVector2D ConstSeed; // 0x80(0x8)
};

// Class Engine.MaterialExpressionSpeedTree
// Size : 0xA0 (Inherited : 0x40)
struct UMaterialExpressionSpeedTree : UMaterialExpression {
	struct FExpressionInput GeometryInput; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput WindInput; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput LODInput; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	struct FExpressionInput ExtraBendWS; // 0x7C(0xC)
	unsigned char UnknownData_88[0x0008]; // 0x88(0x8)
	enum class ESpeedTreeGeometryType GeometryType; // 0x90(0x1)
	enum class ESpeedTreeWindType WindType; // 0x91(0x1)
	enum class ESpeedTreeLODType LODType; // 0x92(0x1)
	unsigned char UnknownData_93[0x0001]; // 0x93(0x1)
	float BillboardThreshold; // 0x94(0x4)
	bool bAccurateWindVelocities; // 0x98(0x1)
	unsigned char UnknownData_99[0x0007]; // 0x99(0x7)
};

// Class Engine.MaterialExpressionSphereMask
// Size : 0x98 (Inherited : 0x40)
struct UMaterialExpressionSphereMask : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	struct FExpressionInput Radius; // 0x68(0xC)
	unsigned char UnknownData_74[0x0008]; // 0x74(0x8)
	struct FExpressionInput Hardness; // 0x7C(0xC)
	unsigned char UnknownData_88[0x0008]; // 0x88(0x8)
	float AttenuationRadius; // 0x90(0x4)
	float HardnessPercent; // 0x94(0x4)
};

// Class Engine.MaterialExpressionSphericalParticleOpacity
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSphericalParticleOpacity : UMaterialExpression {
	struct FExpressionInput Density; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float ConstantDensity; // 0x54(0x4)
};

// Class Engine.MaterialExpressionSquareRoot
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionSquareRoot : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionStaticBool
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionStaticBool : UMaterialExpression {
	unsigned char Value : 1; // 0x40(0x1)
	unsigned char UnknownData_40_1 : 7; // 0x40(0x1)
	unsigned char UnknownData_41[0x0007]; // 0x41(0x7)
};

// Class Engine.MaterialExpressionStaticBoolParameter
// Size : 0x60 (Inherited : 0x58)
struct UMaterialExpressionStaticBoolParameter : UMaterialExpressionParameter {
	unsigned char DefaultValue : 1; // 0x58(0x1)
	unsigned char UnknownData_58_1 : 7; // 0x58(0x1)
	unsigned char UnknownData_59[0x0007]; // 0x59(0x7)
};

// Class Engine.MaterialExpressionStaticComponentMaskParameter
// Size : 0x70 (Inherited : 0x58)
struct UMaterialExpressionStaticComponentMaskParameter : UMaterialExpressionParameter {
	struct FExpressionInput Input; // 0x58(0xC)
	unsigned char UnknownData_64[0x0008]; // 0x64(0x8)
	unsigned char DefaultR : 1; // 0x6C(0x1)
	unsigned char DefaultG : 1; // 0x6C(0x1)
	unsigned char DefaultB : 1; // 0x6C(0x1)
	unsigned char DefaultA : 1; // 0x6C(0x1)
	unsigned char UnknownData_6C_4 : 4; // 0x6C(0x1)
	unsigned char UnknownData_6D[0x0003]; // 0x6D(0x3)
};

// Class Engine.MaterialExpressionStaticSwitch
// Size : 0x80 (Inherited : 0x40)
struct UMaterialExpressionStaticSwitch : UMaterialExpression {
	unsigned char DefaultValue : 1; // 0x40(0x1)
	unsigned char UnknownData_40_1 : 7; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	struct FExpressionInput A; // 0x44(0xC)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
	struct FExpressionInput B; // 0x58(0xC)
	unsigned char UnknownData_64[0x0008]; // 0x64(0x8)
	struct FExpressionInput Value; // 0x6C(0xC)
	unsigned char UnknownData_78[0x0008]; // 0x78(0x8)
};

// Class Engine.MaterialExpressionStaticSwitchParameter
// Size : 0x88 (Inherited : 0x60)
struct UMaterialExpressionStaticSwitchParameter : UMaterialExpressionStaticBoolParameter {
	struct FExpressionInput A; // 0x60(0xC)
	unsigned char UnknownData_6C[0x0008]; // 0x6C(0x8)
	struct FExpressionInput B; // 0x74(0xC)
	unsigned char UnknownData_80[0x0008]; // 0x80(0x8)
};

// Class Engine.MaterialExpressionSubtract
// Size : 0x70 (Inherited : 0x40)
struct UMaterialExpressionSubtract : UMaterialExpression {
	struct FExpressionInput A; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput B; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	float ConstA; // 0x68(0x4)
	float ConstB; // 0x6C(0x4)
};

// Class Engine.MaterialExpressionTangent
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionTangent : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	float Period; // 0x54(0x4)
};

// Class Engine.MaterialExpressionTangentOutput
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionTangentOutput : UMaterialExpressionCustomOutput {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionTemporalSobol
// Size : 0x78 (Inherited : 0x40)
struct UMaterialExpressionTemporalSobol : UMaterialExpression {
	struct FExpressionInput Index; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Seed; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
	uint32_t ConstIndex; // 0x68(0x4)
	struct FVector2D ConstSeed; // 0x6C(0x8)
	unsigned char UnknownData_74[0x0004]; // 0x74(0x4)
};

// Class Engine.MaterialExpressionTextureCoordinate
// Size : 0x50 (Inherited : 0x40)
struct UMaterialExpressionTextureCoordinate : UMaterialExpression {
	int32_t CoordinateIndex; // 0x40(0x4)
	float UTiling; // 0x44(0x4)
	float VTiling; // 0x48(0x4)
	unsigned char UnMirrorU : 1; // 0x4C(0x1)
	unsigned char UnMirrorV : 1; // 0x4C(0x1)
	unsigned char UnknownData_4C_2 : 6; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
};

// Class Engine.MaterialExpressionTextureObject
// Size : 0x50 (Inherited : 0x50)
struct UMaterialExpressionTextureObject : UMaterialExpressionTextureBase {
};

// Class Engine.MaterialExpressionTextureObjectParameter
// Size : 0xF0 (Inherited : 0xF0)
struct UMaterialExpressionTextureObjectParameter : UMaterialExpressionTextureSampleParameter {
};

// Class Engine.MaterialExpressionTextureProperty
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionTextureProperty : UMaterialExpression {
	struct FExpressionInput TextureObject; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	enum class EMaterialExposedTextureProperty Property; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
};

// Class Engine.MaterialExpressionTextureSampleParameter2DArray
// Size : 0xF0 (Inherited : 0xF0)
struct UMaterialExpressionTextureSampleParameter2DArray : UMaterialExpressionTextureSampleParameter {
};

// Class Engine.MaterialExpressionTextureSampleParameterCube
// Size : 0xF0 (Inherited : 0xF0)
struct UMaterialExpressionTextureSampleParameterCube : UMaterialExpressionTextureSampleParameter {
};

// Class Engine.MaterialExpressionTextureSampleParameterSubUV
// Size : 0xF8 (Inherited : 0xF0)
struct UMaterialExpressionTextureSampleParameterSubUV : UMaterialExpressionTextureSampleParameter2D {
	unsigned char bBlend : 1; // 0xF0(0x1)
	unsigned char UnknownData_F0_1 : 7; // 0xF0(0x1)
	unsigned char UnknownData_F1[0x0007]; // 0xF1(0x7)
};

// Class Engine.MaterialExpressionTextureSampleParameterVolume
// Size : 0xF0 (Inherited : 0xF0)
struct UMaterialExpressionTextureSampleParameterVolume : UMaterialExpressionTextureSampleParameter {
};

// Class Engine.MaterialExpressionThinTranslucentMaterialOutput
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionThinTranslucentMaterialOutput : UMaterialExpressionCustomOutput {
	struct FExpressionInput TransmittanceColor; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionTime
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionTime : UMaterialExpression {
	unsigned char bIgnorePause : 1; // 0x40(0x1)
	unsigned char bOverride_Period : 1; // 0x40(0x1)
	unsigned char UnknownData_40_2 : 6; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	float Period; // 0x44(0x4)
};

// Class Engine.MaterialExpressionTransform
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionTransform : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	enum class EMaterialVectorCoordTransformSource TransformSourceType; // 0x54(0x1)
	enum class EMaterialVectorCoordTransform TransformType; // 0x55(0x1)
	unsigned char UnknownData_56[0x0002]; // 0x56(0x2)
};

// Class Engine.MaterialExpressionTransformPosition
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionTransformPosition : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	enum class EMaterialPositionTransformSource TransformSourceType; // 0x54(0x1)
	enum class EMaterialPositionTransformSource TransformType; // 0x55(0x1)
	unsigned char UnknownData_56[0x0002]; // 0x56(0x2)
};

// Class Engine.MaterialExpressionTruncate
// Size : 0x58 (Inherited : 0x40)
struct UMaterialExpressionTruncate : UMaterialExpression {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x000C]; // 0x4C(0xC)
};

// Class Engine.MaterialExpressionTwoSidedSign
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionTwoSidedSign : UMaterialExpression {
};

// Class Engine.MaterialExpressionVectorNoise
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionVectorNoise : UMaterialExpression {
	struct FExpressionInput Position; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	enum class EVectorNoiseFunction NoiseFunction; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
	int32_t Quality; // 0x58(0x4)
	unsigned char bTiling : 1; // 0x5C(0x1)
	unsigned char UnknownData_5C_1 : 7; // 0x5C(0x1)
	unsigned char UnknownData_5D[0x0003]; // 0x5D(0x3)
	uint32_t TileSize; // 0x60(0x4)
	unsigned char UnknownData_64[0x0004]; // 0x64(0x4)
};

// Class Engine.MaterialExpressionVertexColor
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionVertexColor : UMaterialExpression {
};

// Class Engine.MaterialExpressionVertexInterpolator
// Size : 0x60 (Inherited : 0x40)
struct UMaterialExpressionVertexInterpolator : UMaterialExpressionCustomOutput {
	struct FExpressionInput Input; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0014]; // 0x4C(0x14)
};

// Class Engine.MaterialExpressionVertexNormalWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionVertexNormalWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionVertexTangentWS
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionVertexTangentWS : UMaterialExpression {
};

// Class Engine.MaterialExpressionViewProperty
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionViewProperty : UMaterialExpression {
	enum class EMaterialExposedViewProperty Property; // 0x40(0x1)
	unsigned char UnknownData_41[0x0007]; // 0x41(0x7)
};

// Class Engine.MaterialExpressionViewSize
// Size : 0x40 (Inherited : 0x40)
struct UMaterialExpressionViewSize : UMaterialExpression {
};

// Class Engine.MaterialExpressionVirtualTextureFeatureSwitch
// Size : 0x68 (Inherited : 0x40)
struct UMaterialExpressionVirtualTextureFeatureSwitch : UMaterialExpression {
	struct FExpressionInput No; // 0x40(0xC)
	unsigned char UnknownData_4C[0x0008]; // 0x4C(0x8)
	struct FExpressionInput Yes; // 0x54(0xC)
	unsigned char UnknownData_60[0x0008]; // 0x60(0x8)
};

// Class Engine.MaterialExpressionWorldPosition
// Size : 0x48 (Inherited : 0x40)
struct UMaterialExpressionWorldPosition : UMaterialExpression {
	enum class EWorldPositionIncludedOffsets WorldPositionShaderOffset; // 0x40(0x1)
	unsigned char UnknownData_41[0x0007]; // 0x41(0x7)
};

// Class Engine.MaterialFunctionInterface
// Size : 0x40 (Inherited : 0x28)
struct UMaterialFunctionInterface : UObject {
	struct FGuid StateId; // 0x28(0x10)
	enum class EMaterialFunctionUsage MaterialFunctionUsage; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
};

// Class Engine.MaterialFunction
// Size : 0x58 (Inherited : 0x40)
struct UMaterialFunction : UMaterialFunctionInterface {
	struct FString Description; // 0x40(0x10)
	unsigned char bExposeToLibrary : 1; // 0x50(0x1)
	unsigned char bPrefixParameterNames : 1; // 0x50(0x1)
	unsigned char bReentrantFlag : 1; // 0x50(0x1)
	unsigned char UnknownData_50_3 : 5; // 0x50(0x1)
	unsigned char UnknownData_51[0x0007]; // 0x51(0x7)
};

// Class Engine.MaterialFunctionInstance
// Size : 0xC0 (Inherited : 0x40)
struct UMaterialFunctionInstance : UMaterialFunctionInterface {
	struct UMaterialFunctionInterface* Parent; // 0x40(0x8)
	struct UMaterialFunctionInterface* Base; // 0x48(0x8)
	struct TArray<struct FScalarParameterValue> ScalarParameterValues; // 0x50(0x10)
	struct TArray<struct FVectorParameterValue> VectorParameterValues; // 0x60(0x10)
	struct TArray<struct FTextureParameterValue> TextureParameterValues; // 0x70(0x10)
	struct TArray<struct FFontParameterValue> FontParameterValues; // 0x80(0x10)
	struct TArray<struct FStaticSwitchParameter> StaticSwitchParameterValues; // 0x90(0x10)
	struct TArray<struct FStaticComponentMaskParameter> StaticComponentMaskParameterValues; // 0xA0(0x10)
	struct TArray<struct FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues; // 0xB0(0x10)
};

// Class Engine.MaterialFunctionMaterialLayer
// Size : 0x58 (Inherited : 0x58)
struct UMaterialFunctionMaterialLayer : UMaterialFunction {
};

// Class Engine.MaterialFunctionMaterialLayerInstance
// Size : 0xC0 (Inherited : 0xC0)
struct UMaterialFunctionMaterialLayerInstance : UMaterialFunctionInstance {
};

// Class Engine.MaterialFunctionMaterialLayerBlend
// Size : 0x58 (Inherited : 0x58)
struct UMaterialFunctionMaterialLayerBlend : UMaterialFunction {
};

// Class Engine.MaterialFunctionMaterialLayerBlendInstance
// Size : 0xC0 (Inherited : 0xC0)
struct UMaterialFunctionMaterialLayerBlendInstance : UMaterialFunctionInstance {
};

// Class Engine.MaterialInstanceActor
// Size : 0x230 (Inherited : 0x220)
struct AMaterialInstanceActor : AActor {
	struct TArray<struct AActor*> TargetActors; // 0x220(0x10)
};

// Class Engine.MaterialInstanceDynamic
// Size : 0x458 (Inherited : 0x408)
struct UMaterialInstanceDynamic : UMaterialInstance {
	unsigned char UnknownData_408[0x0050]; // 0x408(0x50)

	void SetVectorParameterValueByInfo(struct FMaterialParameterInfo ParameterInfo, struct FLinearColor Value); // Function Engine.MaterialInstanceDynamic.SetVectorParameterValueByInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF655790A90
	void SetVectorParameterValue(struct FName ParameterName, struct FLinearColor Value); // Function Engine.MaterialInstanceDynamic.SetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557909C0
	void SetTextureParameterValueByInfo(struct FMaterialParameterInfo ParameterInfo, struct UTexture* Value); // Function Engine.MaterialInstanceDynamic.SetTextureParameterValueByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF6557908D0
	void SetTextureParameterValue(struct FName ParameterName, struct UTexture* Value); // Function Engine.MaterialInstanceDynamic.SetTextureParameterValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655790810
	void SetScalarParameterValueByInfo(struct FMaterialParameterInfo ParameterInfo, float Value); // Function Engine.MaterialInstanceDynamic.SetScalarParameterValueByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x14, 0x7FF655790710
	void SetScalarParameterValue(struct FName ParameterName, float Value); // Function Engine.MaterialInstanceDynamic.SetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF655790640
	void K2_InterpolateMaterialInstanceParams(struct UMaterialInstance* SourceA, struct UMaterialInstance* SourceB, float Alpha); // Function Engine.MaterialInstanceDynamic.K2_InterpolateMaterialInstanceParams // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF655790390
	struct FLinearColor K2_GetVectorParameterValueByInfo(struct FMaterialParameterInfo ParameterInfo); // Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValueByInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557902D0
	struct FLinearColor K2_GetVectorParameterValue(struct FName ParameterName); // Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF655790230
	struct UTexture* K2_GetTextureParameterValueByInfo(struct FMaterialParameterInfo ParameterInfo); // Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValueByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF6557900E0
	struct UTexture* K2_GetTextureParameterValue(struct FName ParameterName); // Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655790050
	float K2_GetScalarParameterValueByInfo(struct FMaterialParameterInfo ParameterInfo); // Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValueByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x14, 0x7FF65578FF00
	float K2_GetScalarParameterValue(struct FName ParameterName); // Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF65578FE60
	void K2_CopyMaterialInstanceParameters(struct UMaterialInterface* Source, bool bQuickParametersOnly); // Function Engine.MaterialInstanceDynamic.K2_CopyMaterialInstanceParameters // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF65578FCF0
	void CopyParameterOverrides(struct UMaterialInstance* MaterialInstance); // Function Engine.MaterialInstanceDynamic.CopyParameterOverrides // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF65578FA90
	void CopyInterpParameters(struct UMaterialInstance* Source); // Function Engine.MaterialInstanceDynamic.CopyInterpParameters // (Final|Native|Public) // Param Size : 0x8, 0x7FF65578FA10
};

// Class Engine.MaterialParameterCollection
// Size : 0x78 (Inherited : 0x28)
struct UMaterialParameterCollection : UObject {
	struct FGuid StateId; // 0x28(0x10)
	struct TArray<struct FCollectionScalarParameter> ScalarParameters; // 0x38(0x10)
	struct TArray<struct FCollectionVectorParameter> VectorParameters; // 0x48(0x10)
	unsigned char UnknownData_58[0x0020]; // 0x58(0x20)
};

// Class Engine.MaterialParameterCollectionInstance
// Size : 0xF0 (Inherited : 0x28)
struct UMaterialParameterCollectionInstance : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct UMaterialParameterCollection* Collection; // 0x30(0x8)
	unsigned char UnknownData_38[0x00B8]; // 0x38(0xB8)
};

// Class Engine.MatineeActor
// Size : 0x2C8 (Inherited : 0x220)
struct AMatineeActor : AActor {
	struct UInterpData* MatineeData; // 0x220(0x8)
	struct FName MatineeControllerName; // 0x228(0x8)
	float PlayRate; // 0x230(0x4)
	unsigned char bPlayOnLevelLoad : 1; // 0x234(0x1)
	unsigned char bForceStartPos : 1; // 0x234(0x1)
	unsigned char UnknownData_234_2 : 6; // 0x234(0x1)
	unsigned char UnknownData_235[0x0003]; // 0x235(0x3)
	float ForceStartPosition; // 0x238(0x4)
	unsigned char bLooping : 1; // 0x23C(0x1)
	unsigned char bRewindOnPlay : 1; // 0x23C(0x1)
	unsigned char bNoResetOnRewind : 1; // 0x23C(0x1)
	unsigned char bRewindIfAlreadyPlaying : 1; // 0x23C(0x1)
	unsigned char bDisableRadioFilter : 1; // 0x23C(0x1)
	unsigned char bClientSideOnly : 1; // 0x23C(0x1)
	unsigned char bSkipUpdateIfNotVisible : 1; // 0x23C(0x1)
	unsigned char bIsSkippable : 1; // 0x23C(0x1)
	unsigned char UnknownData_23D[0x0003]; // 0x23D(0x3)
	int32_t PreferredSplitScreenNum; // 0x240(0x4)
	unsigned char bDisableMovementInput : 1; // 0x244(0x1)
	unsigned char bDisableLookAtInput : 1; // 0x244(0x1)
	unsigned char bHidePlayer : 1; // 0x244(0x1)
	unsigned char bHideHud : 1; // 0x244(0x1)
	unsigned char UnknownData_244_4 : 4; // 0x244(0x1)
	unsigned char UnknownData_245[0x0003]; // 0x245(0x3)
	struct TArray<struct FInterpGroupActorInfo> GroupActorInfos; // 0x248(0x10)
	unsigned char bShouldShowGore : 1; // 0x258(0x1)
	unsigned char UnknownData_258_1 : 7; // 0x258(0x1)
	unsigned char UnknownData_259[0x0007]; // 0x259(0x7)
	struct TArray<struct UInterpGroupInst*> GroupInst; // 0x260(0x10)
	struct TArray<struct FCameraCutInfo> CameraCuts; // 0x270(0x10)
	unsigned char bIsPlaying : 1; // 0x280(0x1)
	unsigned char bReversePlayback : 1; // 0x280(0x1)
	unsigned char bPaused : 1; // 0x280(0x1)
	unsigned char bPendingStop : 1; // 0x280(0x1)
	unsigned char UnknownData_280_4 : 4; // 0x280(0x1)
	unsigned char UnknownData_281[0x0003]; // 0x281(0x3)
	float InterpPosition; // 0x284(0x4)
	unsigned char UnknownData_288[0x0004]; // 0x288(0x4)
	enum class None ReplicationForceIsPlaying; // 0x28C(0x1)
	unsigned char UnknownData_28D[0x0003]; // 0x28D(0x3)
	struct FMulticastInlineDelegate OnPlay; // 0x290(0x10)
	struct FMulticastInlineDelegate OnStop; // 0x2A0(0x10)
	struct FMulticastInlineDelegate OnPause; // 0x2B0(0x10)
	unsigned char UnknownData_2C0[0x0008]; // 0x2C0(0x8)

	void Stop(); // Function Engine.MatineeActor.Stop // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655794230
	void SetPosition(float NewPosition, bool bJump); // Function Engine.MatineeActor.SetPosition // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF655793FC0
	void SetLoopingState(bool bNewLooping); // Function Engine.MatineeActor.SetLoopingState // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655793F30
	void Reverse(); // Function Engine.MatineeActor.Reverse // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655793F10
	void Play(); // Function Engine.MatineeActor.Play // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556F0750
	void Pause(); // Function Engine.MatineeActor.Pause // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF65320BC00
	void EnableGroupByName(struct FString GroupName, bool bEnable); // Function Engine.MatineeActor.EnableGroupByName // (Final|Native|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF655793A90
	void ChangePlaybackDirection(); // Function Engine.MatineeActor.ChangePlaybackDirection // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556C47B0
};

// Class Engine.MatineeActorCameraAnim
// Size : 0x2D0 (Inherited : 0x2C8)
struct AMatineeActorCameraAnim : AMatineeActor {
	struct UCameraAnim* CameraAnim; // 0x2C8(0x8)
};

// Class Engine.MatineeAnimInterface
// Size : 0x28 (Inherited : 0x28)
struct UMatineeAnimInterface : UInterface {
};

// Class Engine.MatineeInterface
// Size : 0x28 (Inherited : 0x28)
struct UMatineeInterface : UInterface {
};

// Class Engine.MeshMergeCullingVolume
// Size : 0x258 (Inherited : 0x258)
struct AMeshMergeCullingVolume : AVolume {
};

// Class Engine.MeshSimplificationSettings
// Size : 0x40 (Inherited : 0x38)
struct UMeshSimplificationSettings : UDeveloperSettings {
	struct FName MeshReductionModuleName; // 0x38(0x8)
};

// Class Engine.MeshVertexPainterKismetLibrary
// Size : 0x28 (Inherited : 0x28)
struct UMeshVertexPainterKismetLibrary : UBlueprintFunctionLibrary {

	void RemovePaintedVertices(struct UStaticMeshComponent* StaticMeshComponent); // Function Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655797AA0
	void PaintVerticesSingleColor(struct UStaticMeshComponent* StaticMeshComponent, struct FLinearColor FillColor, bool bConvertToSRGB); // Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesSingleColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x19, 0x7FF655797900
	void PaintVerticesLerpAlongAxis(struct UStaticMeshComponent* StaticMeshComponent, struct FLinearColor StartColor, struct FLinearColor EndColor, enum class EVertexPaintAxis Axis, bool bConvertToSRGB); // Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesLerpAlongAxis // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x2A, 0x7FF655797750
};

// Class Engine.MicroTransactionBase
// Size : 0x68 (Inherited : 0x38)
struct UMicroTransactionBase : UPlatformInterfaceBase {
	struct TArray<struct FPurchaseInfo> AvailableProducts; // 0x38(0x10)
	struct FString LastError; // 0x48(0x10)
	struct FString LastErrorSolution; // 0x58(0x10)
};

// Class Engine.ModelComponent
// Size : 0x450 (Inherited : 0x410)
struct UModelComponent : UPrimitiveComponent {
	unsigned char UnknownData_410[0x0010]; // 0x410(0x10)
	struct UBodySetup* ModelBodySetup; // 0x420(0x8)
	unsigned char UnknownData_428[0x0028]; // 0x428(0x28)
};

// Class Engine.MorphTarget
// Size : 0x40 (Inherited : 0x28)
struct UMorphTarget : UObject {
	struct USkeletalMesh* BaseSkelMesh; // 0x28(0x8)
	unsigned char UnknownData_30[0x0010]; // 0x30(0x10)
};

// Class Engine.NavAgentInterface
// Size : 0x28 (Inherited : 0x28)
struct UNavAgentInterface : UInterface {
};

// Class Engine.NavAreaBase
// Size : 0x30 (Inherited : 0x28)
struct UNavAreaBase : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
};

// Class Engine.NavCollisionBase
// Size : 0x70 (Inherited : 0x28)
struct UNavCollisionBase : UObject {
	unsigned char bIsDynamicObstacle : 1; // 0x28(0x1)
	unsigned char UnknownData_28_1 : 7; // 0x28(0x1)
	unsigned char UnknownData_29[0x0047]; // 0x29(0x47)
};

// Class Engine.NavEdgeProviderInterface
// Size : 0x28 (Inherited : 0x28)
struct UNavEdgeProviderInterface : UInterface {
};

// Class Engine.NavigationDataChunk
// Size : 0x30 (Inherited : 0x28)
struct UNavigationDataChunk : UObject {
	struct FName NavigationDataName; // 0x28(0x8)
};

// Class Engine.NavigationDataInterface
// Size : 0x28 (Inherited : 0x28)
struct UNavigationDataInterface : UInterface {
};

// Class Engine.NavigationObjectBase
// Size : 0x248 (Inherited : 0x220)
struct ANavigationObjectBase : AActor {
	unsigned char UnknownData_220[0x0008]; // 0x220(0x8)
	struct UCapsuleComponent* CapsuleComponent; // 0x228(0x8)
	struct UBillboardComponent* GoodSprite; // 0x230(0x8)
	struct UBillboardComponent* BadSprite; // 0x238(0x8)
	unsigned char bIsPIEPlayerStart : 1; // 0x240(0x1)
	unsigned char UnknownData_240_1 : 7; // 0x240(0x1)
	unsigned char UnknownData_241[0x0007]; // 0x241(0x7)
};

// Class Engine.NavigationSystemBase
// Size : 0x28 (Inherited : 0x28)
struct UNavigationSystemBase : UObject {
};

// Class Engine.NavigationSystemConfig
// Size : 0x50 (Inherited : 0x28)
struct UNavigationSystemConfig : UObject {
	struct FSoftClassPath NavigationSystemClass; // 0x28(0x18)
	struct FNavAgentSelector SupportedAgentsMask; // 0x40(0x4)
	struct FName DefaultAgentName; // 0x44(0x8)
	unsigned char bIsOverriden : 1; // 0x4C(0x1)
	unsigned char UnknownData_4C_1 : 7; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
};

// Class Engine.NullNavSysConfig
// Size : 0x50 (Inherited : 0x50)
struct UNullNavSysConfig : UNavigationSystemConfig {
};

// Class Engine.NavLinkDefinition
// Size : 0x50 (Inherited : 0x28)
struct UNavLinkDefinition : UObject {
	struct TArray<struct FNavigationLink> Links; // 0x28(0x10)
	struct TArray<struct FNavigationSegmentLink> SegmentLinks; // 0x38(0x10)
	unsigned char UnknownData_48[0x0008]; // 0x48(0x8)
};

// Class Engine.NavPathObserverInterface
// Size : 0x28 (Inherited : 0x28)
struct UNavPathObserverInterface : UInterface {
};

// Class Engine.NavRelevantInterface
// Size : 0x28 (Inherited : 0x28)
struct UNavRelevantInterface : UInterface {
};

// Class Engine.SimulatedClientNetConnection
// Size : 0x1A30 (Inherited : 0x1A30)
struct USimulatedClientNetConnection : UNetConnection {
};

// Class Engine.NetPushModelHelpers
// Size : 0x28 (Inherited : 0x28)
struct UNetPushModelHelpers : UBlueprintFunctionLibrary {

	void MarkPropertyDirtyFromRepIndex(struct UObject* Object, int32_t RepIndex, struct FName PropertyName); // Function Engine.NetPushModelHelpers.MarkPropertyDirtyFromRepIndex // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF65579C010
	void MarkPropertyDirty(struct UObject* Object, struct FName PropertyName); // Function Engine.NetPushModelHelpers.MarkPropertyDirty // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65579BF60
};

// Class Engine.NetworkPredictionInterface
// Size : 0x28 (Inherited : 0x28)
struct UNetworkPredictionInterface : UInterface {
};

// Class Engine.NetworkSettings
// Size : 0x58 (Inherited : 0x38)
struct UNetworkSettings : UDeveloperSettings {
	unsigned char bVerifyPeer : 1; // 0x38(0x1)
	unsigned char bEnableMultiplayerWorldOriginRebasing : 1; // 0x38(0x1)
	unsigned char UnknownData_38_2 : 6; // 0x38(0x1)
	unsigned char UnknownData_39[0x0003]; // 0x39(0x3)
	int32_t MaxRepArraySize; // 0x3C(0x4)
	int32_t MaxRepArrayMemory; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
	struct TArray<struct FNetworkEmulationProfileDescription> NetworkEmulationProfiles; // 0x48(0x10)
};

// Class Engine.NodeMappingContainer
// Size : 0x168 (Inherited : 0x28)
struct UNodeMappingContainer : UObject {
	struct TMap<struct FName, struct FNodeItem> SourceItems; // 0x28(0x50)
	struct TMap<struct FName, struct FNodeItem> TargetItems; // 0x78(0x50)
	struct TMap<struct FName, struct FName> SourceToTarget; // 0xC8(0x50)
	struct TSoftObjectPtr<struct UObject> SourceAsset; // 0x118(0x28)
	struct TSoftObjectPtr<struct UObject> TargetAsset; // 0x140(0x28)
};

// Class Engine.NodeMappingProviderInterface
// Size : 0x28 (Inherited : 0x28)
struct UNodeMappingProviderInterface : UInterface {
};

// Class Engine.Note
// Size : 0x220 (Inherited : 0x220)
struct ANote : AActor {
};

// Class Engine.ObjectLibrary
// Size : 0xA8 (Inherited : 0x28)
struct UObjectLibrary : UObject {
	class UObject* ObjectBaseClass; // 0x28(0x8)
	bool bHasBlueprintClasses; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
	struct TArray<struct UObject*> Objects; // 0x38(0x10)
	struct TArray<struct FWeakObjectPtr<struct UObject>> WeakObjects; // 0x48(0x10)
	bool bUseWeakReferences; // 0x58(0x1)
	bool bIsFullyLoaded; // 0x59(0x1)
	unsigned char UnknownData_5A[0x004E]; // 0x5A(0x4E)
};

// Class Engine.ObjectReferencer
// Size : 0x38 (Inherited : 0x28)
struct UObjectReferencer : UObject {
	struct TArray<struct UObject*> ReferencedObjects; // 0x28(0x10)
};

// Class Engine.ObjectTraceWorldSubsystem
// Size : 0x38 (Inherited : 0x30)
struct UObjectTraceWorldSubsystem : UWorldSubsystem {
	unsigned char UnknownData_30[0x0008]; // 0x30(0x8)
};

// Class Engine.PackageMapClient
// Size : 0x3F8 (Inherited : 0xE0)
struct UPackageMapClient : UPackageMap {
	unsigned char UnknownData_E0[0x0318]; // 0xE0(0x318)
};

// Class Engine.PainCausingVolume
// Size : 0x290 (Inherited : 0x268)
struct APainCausingVolume : APhysicsVolume {
	unsigned char bPainCausing : 1; // 0x268(0x1)
	unsigned char UnknownData_268_1 : 7; // 0x268(0x1)
	unsigned char UnknownData_269[0x0003]; // 0x269(0x3)
	float DamagePerSec; // 0x26C(0x4)
	class UDamageType* DamageType; // 0x270(0x8)
	float PainInterval; // 0x278(0x4)
	unsigned char bEntryPain : 1; // 0x27C(0x1)
	unsigned char BACKUP_bPainCausing : 1; // 0x27C(0x1)
	unsigned char UnknownData_27C_2 : 6; // 0x27C(0x1)
	unsigned char UnknownData_27D[0x0003]; // 0x27D(0x3)
	struct AController* DamageInstigator; // 0x280(0x8)
	unsigned char UnknownData_288[0x0008]; // 0x288(0x8)
};

// Class Engine.ParticleEmitter
// Size : 0x1B8 (Inherited : 0x28)
struct UParticleEmitter : UObject {
	struct FName EmitterName; // 0x28(0x8)
	int32_t SubUVDataOffset; // 0x30(0x4)
	enum class EEmitterRenderMode EmitterRenderMode; // 0x34(0x1)
	enum class EParticleSignificanceLevel SignificanceLevel; // 0x35(0x1)
	unsigned char UnknownData_36[0x0001]; // 0x36(0x1)
	unsigned char bUseLegacySpawningBehavior : 1; // 0x37(0x1)
	unsigned char UnknownData_37_1 : 3; // 0x37(0x1)
	unsigned char ConvertedModules : 1; // 0x37(0x1)
	unsigned char bIsSoloing : 1; // 0x37(0x1)
	unsigned char bCookedOut : 1; // 0x37(0x1)
	unsigned char bDisabledLODsKeepEmitterAlive : 1; // 0x37(0x1)
	unsigned char bDisableWhenInsignficant : 1; // 0x38(0x1)
	unsigned char UnknownData_38_1 : 7; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
	struct TArray<struct UParticleLODLevel*> LODLevels; // 0x40(0x10)
	int32_t PeakActiveParticles; // 0x50(0x4)
	int32_t InitialAllocationCount; // 0x54(0x4)
	float QualityLevelSpawnRateScale; // 0x58(0x4)
	uint32_t DetailModeBitmask; // 0x5C(0x4)
	unsigned char UnknownData_60[0x0158]; // 0x60(0x158)
};

// Class Engine.ParticleEventManager
// Size : 0x220 (Inherited : 0x220)
struct AParticleEventManager : AActor {
};

// Class Engine.ParticleLODLevel
// Size : 0xB8 (Inherited : 0x28)
struct UParticleLODLevel : UObject {
	int32_t Level; // 0x28(0x4)
	unsigned char bEnabled : 1; // 0x2C(0x1)
	unsigned char UnknownData_2C_1 : 7; // 0x2C(0x1)
	unsigned char UnknownData_2D[0x0003]; // 0x2D(0x3)
	struct UParticleModuleRequired* RequiredModule; // 0x30(0x8)
	struct TArray<struct UParticleModule*> Modules; // 0x38(0x10)
	struct UParticleModuleTypeDataBase* TypeDataModule; // 0x48(0x8)
	struct UParticleModuleSpawn* SpawnModule; // 0x50(0x8)
	struct UParticleModuleEventGenerator* EventGenerator; // 0x58(0x8)
	struct TArray<struct UParticleModuleSpawnBase*> SpawningModules; // 0x60(0x10)
	struct TArray<struct UParticleModule*> SpawnModules; // 0x70(0x10)
	struct TArray<struct UParticleModule*> UpdateModules; // 0x80(0x10)
	struct TArray<struct UParticleModuleOrbit*> OrbitModules; // 0x90(0x10)
	struct TArray<struct UParticleModuleEventReceiverBase*> EventReceiverModules; // 0xA0(0x10)
	unsigned char ConvertedModules : 1; // 0xB0(0x1)
	unsigned char UnknownData_B0_1 : 7; // 0xB0(0x1)
	unsigned char UnknownData_B1[0x0003]; // 0xB1(0x3)
	int32_t PeakActiveParticles; // 0xB4(0x4)
};

// Class Engine.ParticleModuleAccelerationBase
// Size : 0x38 (Inherited : 0x30)
struct UParticleModuleAccelerationBase : UParticleModule {
	unsigned char bAlwaysInWorldSpace : 1; // 0x30(0x1)
	unsigned char UnknownData_30_1 : 7; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.ParticleModuleAcceleration
// Size : 0x88 (Inherited : 0x38)
struct UParticleModuleAcceleration : UParticleModuleAccelerationBase {
	struct FRawDistributionVector Acceleration; // 0x38(0x48)
	unsigned char bApplyOwnerScale : 1; // 0x80(0x1)
	unsigned char UnknownData_80_1 : 7; // 0x80(0x1)
	unsigned char UnknownData_81[0x0007]; // 0x81(0x7)
};

// Class Engine.ParticleModuleAccelerationConstant
// Size : 0x48 (Inherited : 0x38)
struct UParticleModuleAccelerationConstant : UParticleModuleAccelerationBase {
	struct FVector Acceleration; // 0x38(0xC)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
};

// Class Engine.ParticleModuleAccelerationDrag
// Size : 0x70 (Inherited : 0x38)
struct UParticleModuleAccelerationDrag : UParticleModuleAccelerationBase {
	struct UDistributionFloat* DragCoefficient; // 0x38(0x8)
	struct FRawDistributionFloat DragCoefficientRaw; // 0x40(0x30)
};

// Class Engine.ParticleModuleAccelerationDragScaleOverLife
// Size : 0x70 (Inherited : 0x38)
struct UParticleModuleAccelerationDragScaleOverLife : UParticleModuleAccelerationBase {
	struct UDistributionFloat* DragScale; // 0x38(0x8)
	struct FRawDistributionFloat DragScaleRaw; // 0x40(0x30)
};

// Class Engine.ParticleModuleAccelerationOverLifetime
// Size : 0x80 (Inherited : 0x38)
struct UParticleModuleAccelerationOverLifetime : UParticleModuleAccelerationBase {
	struct FRawDistributionVector AccelOverLife; // 0x38(0x48)
};

// Class Engine.ParticleModuleAttractorBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleAttractorBase : UParticleModule {
};

// Class Engine.ParticleModuleAttractorLine
// Size : 0xA8 (Inherited : 0x30)
struct UParticleModuleAttractorLine : UParticleModuleAttractorBase {
	struct FVector EndPoint0; // 0x30(0xC)
	struct FVector EndPoint1; // 0x3C(0xC)
	struct FRawDistributionFloat Range; // 0x48(0x30)
	struct FRawDistributionFloat Strength; // 0x78(0x30)
};

// Class Engine.ParticleModuleAttractorParticle
// Size : 0xB0 (Inherited : 0x30)
struct UParticleModuleAttractorParticle : UParticleModuleAttractorBase {
	struct FName EmitterName; // 0x30(0x8)
	struct FRawDistributionFloat Range; // 0x38(0x30)
	unsigned char bStrengthByDistance : 1; // 0x68(0x1)
	unsigned char UnknownData_68_1 : 7; // 0x68(0x1)
	unsigned char UnknownData_69[0x0007]; // 0x69(0x7)
	struct FRawDistributionFloat Strength; // 0x70(0x30)
	unsigned char bAffectBaseVelocity : 1; // 0xA0(0x1)
	unsigned char UnknownData_A0_1 : 7; // 0xA0(0x1)
	unsigned char UnknownData_A1[0x0003]; // 0xA1(0x3)
	enum class EAttractorParticleSelectionMethod SelectionMethod; // 0xA4(0x1)
	unsigned char UnknownData_A5[0x0003]; // 0xA5(0x3)
	unsigned char bRenewSource : 1; // 0xA8(0x1)
	unsigned char bInheritSourceVel : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_2 : 6; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0003]; // 0xA9(0x3)
	int32_t LastSelIndex; // 0xAC(0x4)
};

// Class Engine.ParticleModuleAttractorPoint
// Size : 0xE0 (Inherited : 0x30)
struct UParticleModuleAttractorPoint : UParticleModuleAttractorBase {
	struct FRawDistributionVector Position; // 0x30(0x48)
	struct FRawDistributionFloat Range; // 0x78(0x30)
	struct FRawDistributionFloat Strength; // 0xA8(0x30)
	unsigned char StrengthByDistance : 1; // 0xD8(0x1)
	unsigned char bAffectBaseVelocity : 1; // 0xD8(0x1)
	unsigned char bOverrideVelocity : 1; // 0xD8(0x1)
	unsigned char bUseWorldSpacePosition : 1; // 0xD8(0x1)
	unsigned char Positive_X : 1; // 0xD8(0x1)
	unsigned char Positive_Y : 1; // 0xD8(0x1)
	unsigned char Positive_Z : 1; // 0xD8(0x1)
	unsigned char Negative_X : 1; // 0xD8(0x1)
	unsigned char Negative_Y : 1; // 0xD9(0x1)
	unsigned char Negative_Z : 1; // 0xD9(0x1)
	unsigned char UnknownData_D9_2 : 6; // 0xD9(0x1)
	unsigned char UnknownData_DA[0x0006]; // 0xDA(0x6)
};

// Class Engine.ParticleModuleAttractorPointGravity
// Size : 0x78 (Inherited : 0x30)
struct UParticleModuleAttractorPointGravity : UParticleModuleAttractorBase {
	struct FVector Position; // 0x30(0xC)
	float Radius; // 0x3C(0x4)
	struct UDistributionFloat* Strength; // 0x40(0x8)
	struct FRawDistributionFloat StrengthRaw; // 0x48(0x30)
};

// Class Engine.ParticleModuleBeamBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleBeamBase : UParticleModule {
};

// Class Engine.ParticleModuleBeamModifier
// Size : 0x108 (Inherited : 0x30)
struct UParticleModuleBeamModifier : UParticleModuleBeamBase {
	enum class BeamModifierType ModifierType; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	struct FBeamModifierOptions PositionOptions; // 0x34(0x4)
	struct FRawDistributionVector Position; // 0x38(0x48)
	struct FBeamModifierOptions TangentOptions; // 0x80(0x4)
	unsigned char UnknownData_84[0x0004]; // 0x84(0x4)
	struct FRawDistributionVector Tangent; // 0x88(0x48)
	unsigned char bAbsoluteTangent : 1; // 0xD0(0x1)
	unsigned char UnknownData_D0_1 : 7; // 0xD0(0x1)
	unsigned char UnknownData_D1[0x0003]; // 0xD1(0x3)
	struct FBeamModifierOptions StrengthOptions; // 0xD4(0x4)
	struct FRawDistributionFloat Strength; // 0xD8(0x30)
};

// Class Engine.ParticleModuleBeamNoise
// Size : 0x190 (Inherited : 0x30)
struct UParticleModuleBeamNoise : UParticleModuleBeamBase {
	unsigned char bLowFreq_Enabled : 1; // 0x30(0x1)
	unsigned char UnknownData_30_1 : 7; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	int32_t Frequency; // 0x34(0x4)
	int32_t Frequency_LowRange; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
	struct FRawDistributionVector NoiseRange; // 0x40(0x48)
	struct FRawDistributionFloat NoiseRangeScale; // 0x88(0x30)
	unsigned char bNRScaleEmitterTime : 1; // 0xB8(0x1)
	unsigned char UnknownData_B8_1 : 7; // 0xB8(0x1)
	unsigned char UnknownData_B9[0x0007]; // 0xB9(0x7)
	struct FRawDistributionVector NoiseSpeed; // 0xC0(0x48)
	unsigned char bSmooth : 1; // 0x108(0x1)
	unsigned char UnknownData_108_1 : 7; // 0x108(0x1)
	unsigned char UnknownData_109[0x0003]; // 0x109(0x3)
	float NoiseLockRadius; // 0x10C(0x4)
	unsigned char bNoiseLock : 1; // 0x110(0x1)
	unsigned char bOscillate : 1; // 0x110(0x1)
	unsigned char UnknownData_110_2 : 6; // 0x110(0x1)
	unsigned char UnknownData_111[0x0003]; // 0x111(0x3)
	float NoiseLockTime; // 0x114(0x4)
	float NoiseTension; // 0x118(0x4)
	unsigned char bUseNoiseTangents : 1; // 0x11C(0x1)
	unsigned char UnknownData_11C_1 : 7; // 0x11C(0x1)
	unsigned char UnknownData_11D[0x0003]; // 0x11D(0x3)
	struct FRawDistributionFloat NoiseTangentStrength; // 0x120(0x30)
	int32_t NoiseTessellation; // 0x150(0x4)
	unsigned char bTargetNoise : 1; // 0x154(0x1)
	unsigned char UnknownData_154_1 : 7; // 0x154(0x1)
	unsigned char UnknownData_155[0x0003]; // 0x155(0x3)
	float FrequencyDistance; // 0x158(0x4)
	unsigned char bApplyNoiseScale : 1; // 0x15C(0x1)
	unsigned char UnknownData_15C_1 : 7; // 0x15C(0x1)
	unsigned char UnknownData_15D[0x0003]; // 0x15D(0x3)
	struct FRawDistributionFloat NoiseScale; // 0x160(0x30)
};

// Class Engine.ParticleModuleBeamSource
// Size : 0x118 (Inherited : 0x30)
struct UParticleModuleBeamSource : UParticleModuleBeamBase {
	enum class Beam2SourceTargetMethod SourceMethod; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	struct FName SourceName; // 0x34(0x8)
	unsigned char bSourceAbsolute : 1; // 0x3C(0x1)
	unsigned char UnknownData_3C_1 : 7; // 0x3C(0x1)
	unsigned char UnknownData_3D[0x0003]; // 0x3D(0x3)
	struct FRawDistributionVector Source; // 0x40(0x48)
	unsigned char bLockSource : 1; // 0x88(0x1)
	unsigned char UnknownData_88_1 : 7; // 0x88(0x1)
	unsigned char UnknownData_89[0x0003]; // 0x89(0x3)
	enum class Beam2SourceTargetTangentMethod SourceTangentMethod; // 0x8C(0x1)
	unsigned char UnknownData_8D[0x0003]; // 0x8D(0x3)
	struct FRawDistributionVector SourceTangent; // 0x90(0x48)
	unsigned char bLockSourceTangent : 1; // 0xD8(0x1)
	unsigned char UnknownData_D8_1 : 7; // 0xD8(0x1)
	unsigned char UnknownData_D9[0x0007]; // 0xD9(0x7)
	struct FRawDistributionFloat SourceStrength; // 0xE0(0x30)
	unsigned char bLockSourceStength : 1; // 0x110(0x1)
	unsigned char UnknownData_110_1 : 7; // 0x110(0x1)
	unsigned char UnknownData_111[0x0007]; // 0x111(0x7)
};

// Class Engine.ParticleModuleBeamTarget
// Size : 0x120 (Inherited : 0x30)
struct UParticleModuleBeamTarget : UParticleModuleBeamBase {
	enum class Beam2SourceTargetMethod TargetMethod; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	struct FName TargetName; // 0x34(0x8)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
	struct FRawDistributionVector Target; // 0x40(0x48)
	unsigned char bTargetAbsolute : 1; // 0x88(0x1)
	unsigned char bLockTarget : 1; // 0x88(0x1)
	unsigned char UnknownData_88_2 : 6; // 0x88(0x1)
	unsigned char UnknownData_89[0x0003]; // 0x89(0x3)
	enum class Beam2SourceTargetTangentMethod TargetTangentMethod; // 0x8C(0x1)
	unsigned char UnknownData_8D[0x0003]; // 0x8D(0x3)
	struct FRawDistributionVector TargetTangent; // 0x90(0x48)
	unsigned char bLockTargetTangent : 1; // 0xD8(0x1)
	unsigned char UnknownData_D8_1 : 7; // 0xD8(0x1)
	unsigned char UnknownData_D9[0x0007]; // 0xD9(0x7)
	struct FRawDistributionFloat TargetStrength; // 0xE0(0x30)
	unsigned char bLockTargetStength : 1; // 0x110(0x1)
	unsigned char UnknownData_110_1 : 7; // 0x110(0x1)
	unsigned char UnknownData_111[0x0003]; // 0x111(0x3)
	float LockRadius; // 0x114(0x4)
	unsigned char UnknownData_118[0x0008]; // 0x118(0x8)
};

// Class Engine.ParticleModuleCameraBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleCameraBase : UParticleModule {
};

// Class Engine.ParticleModuleCameraOffset
// Size : 0x68 (Inherited : 0x30)
struct UParticleModuleCameraOffset : UParticleModuleCameraBase {
	struct FRawDistributionFloat CameraOffset; // 0x30(0x30)
	unsigned char bSpawnTimeOnly : 1; // 0x60(0x1)
	unsigned char UnknownData_60_1 : 7; // 0x60(0x1)
	unsigned char UnknownData_61[0x0003]; // 0x61(0x3)
	enum class EParticleCameraOffsetUpdateMethod UpdateMethod; // 0x64(0x1)
	unsigned char UnknownData_65[0x0003]; // 0x65(0x3)
};

// Class Engine.ParticleModuleCollisionGPU
// Size : 0xA8 (Inherited : 0x30)
struct UParticleModuleCollisionGPU : UParticleModuleCollisionBase {
	struct FRawDistributionFloat Resilience; // 0x30(0x30)
	struct FRawDistributionFloat ResilienceScaleOverLife; // 0x60(0x30)
	float Friction; // 0x90(0x4)
	float RandomSpread; // 0x94(0x4)
	float RandomDistribution; // 0x98(0x4)
	float RadiusScale; // 0x9C(0x4)
	float RadiusBias; // 0xA0(0x4)
	enum class EParticleCollisionResponse Response; // 0xA4(0x1)
	enum class EParticleCollisionMode CollisionMode; // 0xA5(0x1)
	unsigned char UnknownData_A6[0x0002]; // 0xA6(0x2)
};

// Class Engine.ParticleModuleColorBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleColorBase : UParticleModule {
};

// Class Engine.ParticleModuleColor
// Size : 0xB0 (Inherited : 0x30)
struct UParticleModuleColor : UParticleModuleColorBase {
	struct FRawDistributionVector StartColor; // 0x30(0x48)
	struct FRawDistributionFloat StartAlpha; // 0x78(0x30)
	unsigned char bClampAlpha : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_1 : 7; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0007]; // 0xA9(0x7)
};

// Class Engine.ParticleModuleColor_Seeded
// Size : 0xD0 (Inherited : 0xB0)
struct UParticleModuleColor_Seeded : UParticleModuleColor {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0xB0(0x20)
};

// Class Engine.ParticleModuleColorOverLife
// Size : 0xB0 (Inherited : 0x30)
struct UParticleModuleColorOverLife : UParticleModuleColorBase {
	struct FRawDistributionVector ColorOverLife; // 0x30(0x48)
	struct FRawDistributionFloat AlphaOverLife; // 0x78(0x30)
	unsigned char bClampAlpha : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_1 : 7; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0007]; // 0xA9(0x7)
};

// Class Engine.ParticleModuleColorScaleOverLife
// Size : 0xB0 (Inherited : 0x30)
struct UParticleModuleColorScaleOverLife : UParticleModuleColorBase {
	struct FRawDistributionVector ColorScaleOverLife; // 0x30(0x48)
	struct FRawDistributionFloat AlphaScaleOverLife; // 0x78(0x30)
	unsigned char bEmitterTime : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_1 : 7; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0007]; // 0xA9(0x7)
};

// Class Engine.ParticleModuleEventBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleEventBase : UParticleModule {
};

// Class Engine.ParticleModuleEventGenerator
// Size : 0x40 (Inherited : 0x30)
struct UParticleModuleEventGenerator : UParticleModuleEventBase {
	struct TArray<struct FParticleEvent_GenerateInfo> Events; // 0x30(0x10)
};

// Class Engine.ParticleModuleEventReceiverBase
// Size : 0x40 (Inherited : 0x30)
struct UParticleModuleEventReceiverBase : UParticleModuleEventBase {
	enum class EParticleEventType EventGeneratorType; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	struct FName EventName; // 0x34(0x8)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.ParticleModuleEventReceiverKillParticles
// Size : 0x48 (Inherited : 0x40)
struct UParticleModuleEventReceiverKillParticles : UParticleModuleEventReceiverBase {
	unsigned char bStopSpawning : 1; // 0x40(0x1)
	unsigned char UnknownData_40_1 : 7; // 0x40(0x1)
	unsigned char UnknownData_41[0x0007]; // 0x41(0x7)
};

// Class Engine.ParticleModuleEventReceiverSpawn
// Size : 0xD8 (Inherited : 0x40)
struct UParticleModuleEventReceiverSpawn : UParticleModuleEventReceiverBase {
	struct FRawDistributionFloat SpawnCount; // 0x40(0x30)
	unsigned char bUseParticleTime : 1; // 0x70(0x1)
	unsigned char bUsePSysLocation : 1; // 0x70(0x1)
	unsigned char bInheritVelocity : 1; // 0x70(0x1)
	unsigned char UnknownData_70_3 : 5; // 0x70(0x1)
	unsigned char UnknownData_71[0x0007]; // 0x71(0x7)
	struct FRawDistributionVector InheritVelocityScale; // 0x78(0x48)
	struct TArray<struct UPhysicalMaterial*> PhysicalMaterials; // 0xC0(0x10)
	unsigned char bBanPhysicalMaterials : 1; // 0xD0(0x1)
	unsigned char UnknownData_D0_1 : 7; // 0xD0(0x1)
	unsigned char UnknownData_D1[0x0007]; // 0xD1(0x7)
};

// Class Engine.ParticleModuleEventSendToGame
// Size : 0x28 (Inherited : 0x28)
struct UParticleModuleEventSendToGame : UObject {
};

// Class Engine.ParticleModuleKillBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleKillBase : UParticleModule {
};

// Class Engine.ParticleModuleKillBox
// Size : 0xC8 (Inherited : 0x30)
struct UParticleModuleKillBox : UParticleModuleKillBase {
	struct FRawDistributionVector LowerLeftCorner; // 0x30(0x48)
	struct FRawDistributionVector UpperRightCorner; // 0x78(0x48)
	unsigned char bAbsolute : 1; // 0xC0(0x1)
	unsigned char bKillInside : 1; // 0xC0(0x1)
	unsigned char bAxisAlignedAndFixedSize : 1; // 0xC0(0x1)
	unsigned char UnknownData_C0_3 : 5; // 0xC0(0x1)
	unsigned char UnknownData_C1[0x0007]; // 0xC1(0x7)
};

// Class Engine.ParticleModuleKillHeight
// Size : 0x68 (Inherited : 0x30)
struct UParticleModuleKillHeight : UParticleModuleKillBase {
	struct FRawDistributionFloat Height; // 0x30(0x30)
	unsigned char bAbsolute : 1; // 0x60(0x1)
	unsigned char bFloor : 1; // 0x60(0x1)
	unsigned char bApplyPSysScale : 1; // 0x60(0x1)
	unsigned char UnknownData_60_3 : 5; // 0x60(0x1)
	unsigned char UnknownData_61[0x0007]; // 0x61(0x7)
};

// Class Engine.ParticleModuleLifetimeBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleLifetimeBase : UParticleModule {
};

// Class Engine.ParticleModuleLifetime
// Size : 0x60 (Inherited : 0x30)
struct UParticleModuleLifetime : UParticleModuleLifetimeBase {
	struct FRawDistributionFloat LifeTime; // 0x30(0x30)
};

// Class Engine.ParticleModuleLifetime_Seeded
// Size : 0x80 (Inherited : 0x60)
struct UParticleModuleLifetime_Seeded : UParticleModuleLifetime {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x60(0x20)
};

// Class Engine.ParticleModuleLightBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleLightBase : UParticleModule {
};

// Class Engine.ParticleModuleLight
// Size : 0x120 (Inherited : 0x30)
struct UParticleModuleLight : UParticleModuleLightBase {
	bool bUseInverseSquaredFalloff; // 0x30(0x1)
	bool bAffectsTranslucency; // 0x31(0x1)
	bool bPreviewLightRadius; // 0x32(0x1)
	unsigned char UnknownData_33[0x0001]; // 0x33(0x1)
	float SpawnFraction; // 0x34(0x4)
	struct FRawDistributionVector ColorScaleOverLife; // 0x38(0x48)
	struct FRawDistributionFloat BrightnessOverLife; // 0x80(0x30)
	struct FRawDistributionFloat RadiusScale; // 0xB0(0x30)
	struct FRawDistributionFloat LightExponent; // 0xE0(0x30)
	struct FLightingChannels LightingChannels; // 0x110(0x1)
	unsigned char UnknownData_111[0x0003]; // 0x111(0x3)
	float VolumetricScatteringIntensity; // 0x114(0x4)
	bool bHighQualityLights; // 0x118(0x1)
	bool bShadowCastingLights; // 0x119(0x1)
	unsigned char UnknownData_11A[0x0006]; // 0x11A(0x6)
};

// Class Engine.ParticleModuleLight_Seeded
// Size : 0x140 (Inherited : 0x120)
struct UParticleModuleLight_Seeded : UParticleModuleLight {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x120(0x20)
};

// Class Engine.ParticleModuleLocationBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleLocationBase : UParticleModule {
};

// Class Engine.ParticleModuleLocation
// Size : 0x80 (Inherited : 0x30)
struct UParticleModuleLocation : UParticleModuleLocationBase {
	struct FRawDistributionVector StartLocation; // 0x30(0x48)
	float DistributeOverNPoints; // 0x78(0x4)
	float DistributeThreshold; // 0x7C(0x4)
};

// Class Engine.ParticleModuleLocation_Seeded
// Size : 0xA0 (Inherited : 0x80)
struct UParticleModuleLocation_Seeded : UParticleModuleLocation {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x80(0x20)
};

// Class Engine.ParticleModuleLocationBoneSocket
// Size : 0x70 (Inherited : 0x30)
struct UParticleModuleLocationBoneSocket : UParticleModuleLocationBase {
	enum class ELocationBoneSocketSource SourceType; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	struct FVector UniversalOffset; // 0x34(0xC)
	struct TArray<struct FLocationBoneSocketInfo> SourceLocations; // 0x40(0x10)
	enum class ELocationBoneSocketSelectionMethod SelectionMethod; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	unsigned char bUpdatePositionEachFrame : 1; // 0x54(0x1)
	unsigned char bOrientMeshEmitters : 1; // 0x54(0x1)
	unsigned char bInheritBoneVelocity : 1; // 0x54(0x1)
	unsigned char UnknownData_54_3 : 5; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
	float InheritVelocityScale; // 0x58(0x4)
	struct FName SkelMeshActorParamName; // 0x5C(0x8)
	int32_t NumPreSelectedIndices; // 0x64(0x4)
	unsigned char UnknownData_68[0x0008]; // 0x68(0x8)
};

// Class Engine.ParticleModuleLocationDirect
// Size : 0x150 (Inherited : 0x30)
struct UParticleModuleLocationDirect : UParticleModuleLocationBase {
	struct FRawDistributionVector Location; // 0x30(0x48)
	struct FRawDistributionVector LocationOffset; // 0x78(0x48)
	struct FRawDistributionVector ScaleFactor; // 0xC0(0x48)
	struct FRawDistributionVector Direction; // 0x108(0x48)
};

// Class Engine.ParticleModuleLocationEmitter
// Size : 0x50 (Inherited : 0x30)
struct UParticleModuleLocationEmitter : UParticleModuleLocationBase {
	struct FName EmitterName; // 0x30(0x8)
	enum class ELocationEmitterSelectionMethod SelectionMethod; // 0x38(0x1)
	unsigned char UnknownData_39[0x0003]; // 0x39(0x3)
	unsigned char InheritSourceVelocity : 1; // 0x3C(0x1)
	unsigned char UnknownData_3C_1 : 7; // 0x3C(0x1)
	unsigned char UnknownData_3D[0x0003]; // 0x3D(0x3)
	float InheritSourceVelocityScale; // 0x40(0x4)
	unsigned char bInheritSourceRotation : 1; // 0x44(0x1)
	unsigned char UnknownData_44_1 : 7; // 0x44(0x1)
	unsigned char UnknownData_45[0x0003]; // 0x45(0x3)
	float InheritSourceRotationScale; // 0x48(0x4)
	unsigned char UnknownData_4C[0x0004]; // 0x4C(0x4)
};

// Class Engine.ParticleModuleLocationEmitterDirect
// Size : 0x38 (Inherited : 0x30)
struct UParticleModuleLocationEmitterDirect : UParticleModuleLocationBase {
	struct FName EmitterName; // 0x30(0x8)
};

// Class Engine.ParticleModuleLocationPrimitiveBase
// Size : 0xB0 (Inherited : 0x30)
struct UParticleModuleLocationPrimitiveBase : UParticleModuleLocationBase {
	unsigned char Positive_X : 1; // 0x30(0x1)
	unsigned char Positive_Y : 1; // 0x30(0x1)
	unsigned char Positive_Z : 1; // 0x30(0x1)
	unsigned char Negative_X : 1; // 0x30(0x1)
	unsigned char Negative_Y : 1; // 0x30(0x1)
	unsigned char Negative_Z : 1; // 0x30(0x1)
	unsigned char SurfaceOnly : 1; // 0x30(0x1)
	unsigned char Velocity : 1; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
	struct FRawDistributionFloat VelocityScale; // 0x38(0x30)
	struct FRawDistributionVector StartLocation; // 0x68(0x48)
};

// Class Engine.ParticleModuleLocationPrimitiveCylinder
// Size : 0x120 (Inherited : 0xB0)
struct UParticleModuleLocationPrimitiveCylinder : UParticleModuleLocationPrimitiveBase {
	unsigned char RadialVelocity : 1; // 0xB0(0x1)
	unsigned char UnknownData_B0_1 : 7; // 0xB0(0x1)
	unsigned char UnknownData_B1[0x0007]; // 0xB1(0x7)
	struct FRawDistributionFloat StartRadius; // 0xB8(0x30)
	struct FRawDistributionFloat StartHeight; // 0xE8(0x30)
	enum class CylinderHeightAxis HeightAxis; // 0x118(0x1)
	unsigned char UnknownData_119[0x0007]; // 0x119(0x7)
};

// Class Engine.ParticleModuleLocationPrimitiveCylinder_Seeded
// Size : 0x140 (Inherited : 0x120)
struct UParticleModuleLocationPrimitiveCylinder_Seeded : UParticleModuleLocationPrimitiveCylinder {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x120(0x20)
};

// Class Engine.ParticleModuleLocationPrimitiveSphere
// Size : 0xE0 (Inherited : 0xB0)
struct UParticleModuleLocationPrimitiveSphere : UParticleModuleLocationPrimitiveBase {
	struct FRawDistributionFloat StartRadius; // 0xB0(0x30)
};

// Class Engine.ParticleModuleLocationPrimitiveSphere_Seeded
// Size : 0x100 (Inherited : 0xE0)
struct UParticleModuleLocationPrimitiveSphere_Seeded : UParticleModuleLocationPrimitiveSphere {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0xE0(0x20)
};

// Class Engine.ParticleModuleLocationPrimitiveTriangle
// Size : 0x108 (Inherited : 0x30)
struct UParticleModuleLocationPrimitiveTriangle : UParticleModuleLocationBase {
	struct FRawDistributionVector StartOffset; // 0x30(0x48)
	struct FRawDistributionFloat Height; // 0x78(0x30)
	struct FRawDistributionFloat Angle; // 0xA8(0x30)
	struct FRawDistributionFloat Thickness; // 0xD8(0x30)
};

// Class Engine.ParticleModuleLocationSkelVertSurface
// Size : 0x90 (Inherited : 0x30)
struct UParticleModuleLocationSkelVertSurface : UParticleModuleLocationBase {
	enum class ELocationSkelVertSurfaceSource SourceType; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	struct FVector UniversalOffset; // 0x34(0xC)
	unsigned char bUpdatePositionEachFrame : 1; // 0x40(0x1)
	unsigned char bOrientMeshEmitters : 1; // 0x40(0x1)
	unsigned char bInheritBoneVelocity : 1; // 0x40(0x1)
	unsigned char UnknownData_40_3 : 5; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	float InheritVelocityScale; // 0x44(0x4)
	struct FName SkelMeshActorParamName; // 0x48(0x8)
	struct TArray<struct FName> ValidAssociatedBones; // 0x50(0x10)
	unsigned char bEnforceNormalCheck : 1; // 0x60(0x1)
	unsigned char UnknownData_60_1 : 7; // 0x60(0x1)
	unsigned char UnknownData_61[0x0003]; // 0x61(0x3)
	struct FVector NormalToCompare; // 0x64(0xC)
	float NormalCheckToleranceDegrees; // 0x70(0x4)
	float NormalCheckTolerance; // 0x74(0x4)
	struct TArray<int32_t> ValidMaterialIndices; // 0x78(0x10)
	unsigned char bInheritVertexColor : 1; // 0x88(0x1)
	unsigned char bInheritUV : 1; // 0x88(0x1)
	unsigned char UnknownData_88_2 : 6; // 0x88(0x1)
	unsigned char UnknownData_89[0x0003]; // 0x89(0x3)
	uint32_t InheritUVChannel; // 0x8C(0x4)
};

// Class Engine.ParticleModuleLocationWorldOffset
// Size : 0x80 (Inherited : 0x80)
struct UParticleModuleLocationWorldOffset : UParticleModuleLocation {
};

// Class Engine.ParticleModuleLocationWorldOffset_Seeded
// Size : 0xA0 (Inherited : 0x80)
struct UParticleModuleLocationWorldOffset_Seeded : UParticleModuleLocationWorldOffset {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x80(0x20)
};

// Class Engine.ParticleModuleMaterialBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleMaterialBase : UParticleModule {
};

// Class Engine.ParticleModuleMeshMaterial
// Size : 0x40 (Inherited : 0x30)
struct UParticleModuleMeshMaterial : UParticleModuleMaterialBase {
	struct TArray<struct UMaterialInterface*> MeshMaterials; // 0x30(0x10)
};

// Class Engine.ParticleModuleRotationBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleRotationBase : UParticleModule {
};

// Class Engine.ParticleModuleMeshRotation
// Size : 0x80 (Inherited : 0x30)
struct UParticleModuleMeshRotation : UParticleModuleRotationBase {
	struct FRawDistributionVector StartRotation; // 0x30(0x48)
	unsigned char bInheritParent : 1; // 0x78(0x1)
	unsigned char UnknownData_78_1 : 7; // 0x78(0x1)
	unsigned char UnknownData_79[0x0007]; // 0x79(0x7)
};

// Class Engine.ParticleModuleMeshRotation_Seeded
// Size : 0xA0 (Inherited : 0x80)
struct UParticleModuleMeshRotation_Seeded : UParticleModuleMeshRotation {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x80(0x20)
};

// Class Engine.ParticleModuleRotationRateBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleRotationRateBase : UParticleModule {
};

// Class Engine.ParticleModuleMeshRotationRate
// Size : 0x78 (Inherited : 0x30)
struct UParticleModuleMeshRotationRate : UParticleModuleRotationRateBase {
	struct FRawDistributionVector StartRotationRate; // 0x30(0x48)
};

// Class Engine.ParticleModuleMeshRotationRate_Seeded
// Size : 0x98 (Inherited : 0x78)
struct UParticleModuleMeshRotationRate_Seeded : UParticleModuleMeshRotationRate {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x78(0x20)
};

// Class Engine.ParticleModuleMeshRotationRateMultiplyLife
// Size : 0x78 (Inherited : 0x30)
struct UParticleModuleMeshRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	struct FRawDistributionVector LifeMultiplier; // 0x30(0x48)
};

// Class Engine.ParticleModuleMeshRotationRateOverLife
// Size : 0x80 (Inherited : 0x30)
struct UParticleModuleMeshRotationRateOverLife : UParticleModuleRotationRateBase {
	struct FRawDistributionVector RotRate; // 0x30(0x48)
	unsigned char bScaleRotRate : 1; // 0x78(0x1)
	unsigned char UnknownData_78_1 : 7; // 0x78(0x1)
	unsigned char UnknownData_79[0x0007]; // 0x79(0x7)
};

// Class Engine.ParticleModuleOrbitBase
// Size : 0x38 (Inherited : 0x30)
struct UParticleModuleOrbitBase : UParticleModule {
	unsigned char bUseEmitterTime : 1; // 0x30(0x1)
	unsigned char UnknownData_30_1 : 7; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.ParticleModuleOrbit
// Size : 0x130 (Inherited : 0x38)
struct UParticleModuleOrbit : UParticleModuleOrbitBase {
	enum class EOrbitChainMode ChainMode; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
	struct FRawDistributionVector OffsetAmount; // 0x40(0x48)
	struct FOrbitOptions OffsetOptions; // 0x88(0x4)
	unsigned char UnknownData_8C[0x0004]; // 0x8C(0x4)
	struct FRawDistributionVector RotationAmount; // 0x90(0x48)
	struct FOrbitOptions RotationOptions; // 0xD8(0x4)
	unsigned char UnknownData_DC[0x0004]; // 0xDC(0x4)
	struct FRawDistributionVector RotationRateAmount; // 0xE0(0x48)
	struct FOrbitOptions RotationRateOptions; // 0x128(0x4)
	unsigned char UnknownData_12C[0x0004]; // 0x12C(0x4)
};

// Class Engine.ParticleModuleOrientationBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleOrientationBase : UParticleModule {
};

// Class Engine.ParticleModuleOrientationAxisLock
// Size : 0x38 (Inherited : 0x30)
struct UParticleModuleOrientationAxisLock : UParticleModuleOrientationBase {
	enum class EParticleAxisLock LockAxisFlags; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.ParticleModuleParameterBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleParameterBase : UParticleModule {
};

// Class Engine.ParticleModuleParameterDynamic
// Size : 0x48 (Inherited : 0x30)
struct UParticleModuleParameterDynamic : UParticleModuleParameterBase {
	struct TArray<struct FEmitterDynamicParameter> DynamicParams; // 0x30(0x10)
	int32_t UpdateFlags; // 0x40(0x4)
	unsigned char bUsesVelocity : 1; // 0x44(0x1)
	unsigned char UnknownData_44_1 : 7; // 0x44(0x1)
	unsigned char UnknownData_45[0x0003]; // 0x45(0x3)
};

// Class Engine.ParticleModuleParameterDynamic_Seeded
// Size : 0x68 (Inherited : 0x48)
struct UParticleModuleParameterDynamic_Seeded : UParticleModuleParameterDynamic {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x48(0x20)
};

// Class Engine.ParticleModulePivotOffset
// Size : 0x38 (Inherited : 0x30)
struct UParticleModulePivotOffset : UParticleModuleLocationBase {
	struct FVector2D PivotOffset; // 0x30(0x8)
};

// Class Engine.ParticleModuleRequired
// Size : 0x140 (Inherited : 0x30)
struct UParticleModuleRequired : UParticleModule {
	struct UMaterialInterface* Material; // 0x30(0x8)
	float MinFacingCameraBlendDistance; // 0x38(0x4)
	float MaxFacingCameraBlendDistance; // 0x3C(0x4)
	struct FVector EmitterOrigin; // 0x40(0xC)
	struct FRotator EmitterRotation; // 0x4C(0xC)
	enum class EParticleScreenAlignment ScreenAlignment; // 0x58(0x1)
	unsigned char bUseLocalSpace : 1; // 0x59(0x1)
	unsigned char bKillOnDeactivate : 1; // 0x59(0x1)
	unsigned char bKillOnCompleted : 1; // 0x59(0x1)
	unsigned char UnknownData_59_3 : 5; // 0x59(0x1)
	enum class EParticleSortMode SortMode; // 0x5A(0x1)
	unsigned char bUseLegacyEmitterTime : 1; // 0x5B(0x1)
	unsigned char bRemoveHMDRoll : 1; // 0x5B(0x1)
	unsigned char bEmitterDurationUseRange : 1; // 0x5B(0x1)
	unsigned char UnknownData_5B_3 : 5; // 0x5B(0x1)
	float EmitterDuration; // 0x5C(0x4)
	struct FRawDistributionFloat SpawnRate; // 0x60(0x30)
	struct TArray<struct FParticleBurst> BurstList; // 0x90(0x10)
	float EmitterDelay; // 0xA0(0x4)
	float EmitterDelayLow; // 0xA4(0x4)
	unsigned char bDelayFirstLoopOnly : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_1 : 7; // 0xA8(0x1)
	enum class EParticleSubUVInterpMethod InterpolationMethod; // 0xA9(0x1)
	unsigned char bScaleUV : 1; // 0xAA(0x1)
	unsigned char bEmitterDelayUseRange : 1; // 0xAA(0x1)
	unsigned char UnknownData_AA_2 : 6; // 0xAA(0x1)
	enum class EParticleBurstMethod ParticleBurstMethod; // 0xAB(0x1)
	unsigned char bOverrideSystemMacroUV : 1; // 0xAC(0x1)
	unsigned char bUseMaxDrawCount : 1; // 0xAC(0x1)
	unsigned char UnknownData_AC_2 : 6; // 0xAC(0x1)
	enum class EOpacitySourceMode OpacitySourceMode; // 0xAD(0x1)
	enum class EEmitterNormalsMode EmitterNormalsMode; // 0xAE(0x1)
	unsigned char bOrbitModuleAffectsVelocityAlignment : 1; // 0xAF(0x1)
	unsigned char UnknownData_AF_1 : 7; // 0xAF(0x1)
	int32_t SubImages_Horizontal; // 0xB0(0x4)
	int32_t SubImages_Vertical; // 0xB4(0x4)
	float RandomImageTime; // 0xB8(0x4)
	int32_t RandomImageChanges; // 0xBC(0x4)
	struct FVector MacroUVPosition; // 0xC0(0xC)
	float MacroUVRadius; // 0xCC(0x4)
	enum class EParticleUVFlipMode UVFlippingMode; // 0xD0(0x1)
	enum class ESubUVBoundingVertexCount BoundingMode; // 0xD1(0x1)
	unsigned char bDurationRecalcEachLoop : 1; // 0xD2(0x1)
	unsigned char UnknownData_D2_1 : 7; // 0xD2(0x1)
	unsigned char UnknownData_D3[0x0001]; // 0xD3(0x1)
	struct FVector NormalsSphereCenter; // 0xD4(0xC)
	float AlphaThreshold; // 0xE0(0x4)
	int32_t EmitterLoops; // 0xE4(0x4)
	struct UTexture2D* CutoutTexture; // 0xE8(0x8)
	int32_t MaxDrawCount; // 0xF0(0x4)
	float EmitterDurationLow; // 0xF4(0x4)
	struct FVector NormalsCylinderDirection; // 0xF8(0xC)
	unsigned char UnknownData_104[0x0004]; // 0x104(0x4)
	struct TArray<struct FName> NamedMaterialOverrides; // 0x108(0x10)
	unsigned char UnknownData_118[0x0028]; // 0x118(0x28)
};

// Class Engine.ParticleModuleRotation
// Size : 0x60 (Inherited : 0x30)
struct UParticleModuleRotation : UParticleModuleRotationBase {
	struct FRawDistributionFloat StartRotation; // 0x30(0x30)
};

// Class Engine.ParticleModuleRotation_Seeded
// Size : 0x80 (Inherited : 0x60)
struct UParticleModuleRotation_Seeded : UParticleModuleRotation {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x60(0x20)
};

// Class Engine.ParticleModuleRotationOverLifetime
// Size : 0x68 (Inherited : 0x30)
struct UParticleModuleRotationOverLifetime : UParticleModuleRotationBase {
	struct FRawDistributionFloat RotationOverLife; // 0x30(0x30)
	unsigned char Scale : 1; // 0x60(0x1)
	unsigned char UnknownData_60_1 : 7; // 0x60(0x1)
	unsigned char UnknownData_61[0x0007]; // 0x61(0x7)
};

// Class Engine.ParticleModuleRotationRate
// Size : 0x60 (Inherited : 0x30)
struct UParticleModuleRotationRate : UParticleModuleRotationRateBase {
	struct FRawDistributionFloat StartRotationRate; // 0x30(0x30)
};

// Class Engine.ParticleModuleRotationRate_Seeded
// Size : 0x80 (Inherited : 0x60)
struct UParticleModuleRotationRate_Seeded : UParticleModuleRotationRate {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x60(0x20)
};

// Class Engine.ParticleModuleRotationRateMultiplyLife
// Size : 0x60 (Inherited : 0x30)
struct UParticleModuleRotationRateMultiplyLife : UParticleModuleRotationRateBase {
	struct FRawDistributionFloat LifeMultiplier; // 0x30(0x30)
};

// Class Engine.ParticleModuleSizeBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleSizeBase : UParticleModule {
};

// Class Engine.ParticleModuleSize
// Size : 0x78 (Inherited : 0x30)
struct UParticleModuleSize : UParticleModuleSizeBase {
	struct FRawDistributionVector StartSize; // 0x30(0x48)
};

// Class Engine.ParticleModuleSize_Seeded
// Size : 0x98 (Inherited : 0x78)
struct UParticleModuleSize_Seeded : UParticleModuleSize {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0x78(0x20)
};

// Class Engine.ParticleModuleSizeMultiplyLife
// Size : 0x80 (Inherited : 0x30)
struct UParticleModuleSizeMultiplyLife : UParticleModuleSizeBase {
	struct FRawDistributionVector LifeMultiplier; // 0x30(0x48)
	unsigned char MultiplyX : 1; // 0x78(0x1)
	unsigned char MultiplyY : 1; // 0x78(0x1)
	unsigned char MultiplyZ : 1; // 0x78(0x1)
	unsigned char UnknownData_78_3 : 5; // 0x78(0x1)
	unsigned char UnknownData_79[0x0007]; // 0x79(0x7)
};

// Class Engine.ParticleModuleSizeScale
// Size : 0x80 (Inherited : 0x30)
struct UParticleModuleSizeScale : UParticleModuleSizeBase {
	struct FRawDistributionVector SizeScale; // 0x30(0x48)
	unsigned char EnableX : 1; // 0x78(0x1)
	unsigned char EnableY : 1; // 0x78(0x1)
	unsigned char EnableZ : 1; // 0x78(0x1)
	unsigned char UnknownData_78_3 : 5; // 0x78(0x1)
	unsigned char UnknownData_79[0x0007]; // 0x79(0x7)
};

// Class Engine.ParticleModuleSizeScaleBySpeed
// Size : 0x40 (Inherited : 0x30)
struct UParticleModuleSizeScaleBySpeed : UParticleModuleSizeBase {
	struct FVector2D SpeedScale; // 0x30(0x8)
	struct FVector2D MaxScale; // 0x38(0x8)
};

// Class Engine.ParticleModuleSourceMovement
// Size : 0x78 (Inherited : 0x30)
struct UParticleModuleSourceMovement : UParticleModuleLocationBase {
	struct FRawDistributionVector SourceMovementScale; // 0x30(0x48)
};

// Class Engine.ParticleModuleSpawnBase
// Size : 0x38 (Inherited : 0x30)
struct UParticleModuleSpawnBase : UParticleModule {
	unsigned char bProcessSpawnRate : 1; // 0x30(0x1)
	unsigned char bProcessBurstList : 1; // 0x30(0x1)
	unsigned char UnknownData_30_2 : 6; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.ParticleModuleSpawn
// Size : 0xE8 (Inherited : 0x38)
struct UParticleModuleSpawn : UParticleModuleSpawnBase {
	struct FRawDistributionFloat Rate; // 0x38(0x30)
	struct FRawDistributionFloat RateScale; // 0x68(0x30)
	enum class EParticleBurstMethod ParticleBurstMethod; // 0x98(0x1)
	unsigned char UnknownData_99[0x0007]; // 0x99(0x7)
	struct TArray<struct FParticleBurst> BurstList; // 0xA0(0x10)
	struct FRawDistributionFloat BurstScale; // 0xB0(0x30)
	unsigned char bApplyGlobalSpawnRateScale : 1; // 0xE0(0x1)
	unsigned char UnknownData_E0_1 : 7; // 0xE0(0x1)
	unsigned char UnknownData_E1[0x0007]; // 0xE1(0x7)
};

// Class Engine.ParticleModuleSpawnPerUnit
// Size : 0x78 (Inherited : 0x38)
struct UParticleModuleSpawnPerUnit : UParticleModuleSpawnBase {
	float UnitScalar; // 0x38(0x4)
	float MovementTolerance; // 0x3C(0x4)
	struct FRawDistributionFloat SpawnPerUnit; // 0x40(0x30)
	float MaxFrameDistance; // 0x70(0x4)
	unsigned char bIgnoreSpawnRateWhenMoving : 1; // 0x74(0x1)
	unsigned char bIgnoreMovementAlongX : 1; // 0x74(0x1)
	unsigned char bIgnoreMovementAlongY : 1; // 0x74(0x1)
	unsigned char bIgnoreMovementAlongZ : 1; // 0x74(0x1)
	unsigned char UnknownData_74_4 : 4; // 0x74(0x1)
	unsigned char UnknownData_75[0x0003]; // 0x75(0x3)
};

// Class Engine.ParticleModuleSubUVBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleSubUVBase : UParticleModule {
};

// Class Engine.ParticleModuleSubUV
// Size : 0x70 (Inherited : 0x30)
struct UParticleModuleSubUV : UParticleModuleSubUVBase {
	struct USubUVAnimation* Animation; // 0x30(0x8)
	struct FRawDistributionFloat SubImageIndex; // 0x38(0x30)
	unsigned char bUseRealTime : 1; // 0x68(0x1)
	unsigned char UnknownData_68_1 : 7; // 0x68(0x1)
	unsigned char UnknownData_69[0x0007]; // 0x69(0x7)
};

// Class Engine.ParticleModuleSubUVMovie
// Size : 0xB0 (Inherited : 0x70)
struct UParticleModuleSubUVMovie : UParticleModuleSubUV {
	unsigned char bUseEmitterTime : 1; // 0x70(0x1)
	unsigned char UnknownData_70_1 : 7; // 0x70(0x1)
	unsigned char UnknownData_71[0x0007]; // 0x71(0x7)
	struct FRawDistributionFloat FrameRate; // 0x78(0x30)
	int32_t StartingFrame; // 0xA8(0x4)
	unsigned char UnknownData_AC[0x0004]; // 0xAC(0x4)
};

// Class Engine.ParticleModuleTrailBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleTrailBase : UParticleModule {
};

// Class Engine.ParticleModuleTrailSource
// Size : 0x90 (Inherited : 0x30)
struct UParticleModuleTrailSource : UParticleModuleTrailBase {
	enum class ETrail2SourceMethod SourceMethod; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	struct FName SourceName; // 0x34(0x8)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
	struct FRawDistributionFloat SourceStrength; // 0x40(0x30)
	unsigned char bLockSourceStength : 1; // 0x70(0x1)
	unsigned char UnknownData_70_1 : 7; // 0x70(0x1)
	unsigned char UnknownData_71[0x0003]; // 0x71(0x3)
	int32_t SourceOffsetCount; // 0x74(0x4)
	struct TArray<struct FVector> SourceOffsetDefaults; // 0x78(0x10)
	enum class EParticleSourceSelectionMethod SelectionMethod; // 0x88(0x1)
	unsigned char UnknownData_89[0x0003]; // 0x89(0x3)
	unsigned char bInheritRotation : 1; // 0x8C(0x1)
	unsigned char UnknownData_8C_1 : 7; // 0x8C(0x1)
	unsigned char UnknownData_8D[0x0003]; // 0x8D(0x3)
};

// Class Engine.ParticleModuleTypeDataBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleTypeDataBase : UParticleModule {
};

// Class Engine.ParticleModuleTypeDataAnimTrail
// Size : 0x48 (Inherited : 0x30)
struct UParticleModuleTypeDataAnimTrail : UParticleModuleTypeDataBase {
	unsigned char bDeadTrailsOnDeactivate : 1; // 0x30(0x1)
	unsigned char bEnablePreviousTangentRecalculation : 1; // 0x30(0x1)
	unsigned char bTangentRecalculationEveryFrame : 1; // 0x30(0x1)
	unsigned char UnknownData_30_3 : 5; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	float TilingDistance; // 0x34(0x4)
	float DistanceTessellationStepSize; // 0x38(0x4)
	float TangentTessellationStepSize; // 0x3C(0x4)
	float WidthTessellationStepSize; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
};

// Class Engine.ParticleModuleTypeDataBeam2
// Size : 0x150 (Inherited : 0x30)
struct UParticleModuleTypeDataBeam2 : UParticleModuleTypeDataBase {
	enum class EBeam2Method BeamMethod; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	int32_t TextureTile; // 0x34(0x4)
	float TextureTileDistance; // 0x38(0x4)
	int32_t Sheets; // 0x3C(0x4)
	int32_t MaxBeamCount; // 0x40(0x4)
	float Speed; // 0x44(0x4)
	int32_t InterpolationPoints; // 0x48(0x4)
	unsigned char bAlwaysOn : 1; // 0x4C(0x1)
	unsigned char UnknownData_4C_1 : 7; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
	int32_t UpVectorStepSize; // 0x50(0x4)
	struct FName BranchParentName; // 0x54(0x8)
	unsigned char UnknownData_5C[0x0004]; // 0x5C(0x4)
	struct FRawDistributionFloat Distance; // 0x60(0x30)
	enum class EBeamTaperMethod TaperMethod; // 0x90(0x1)
	unsigned char UnknownData_91[0x0007]; // 0x91(0x7)
	struct FRawDistributionFloat TaperFactor; // 0x98(0x30)
	struct FRawDistributionFloat TaperScale; // 0xC8(0x30)
	unsigned char RenderGeometry : 1; // 0xF8(0x1)
	unsigned char RenderDirectLine : 1; // 0xF8(0x1)
	unsigned char RenderLines : 1; // 0xF8(0x1)
	unsigned char RenderTessellation : 1; // 0xF8(0x1)
	unsigned char UnknownData_F8_4 : 4; // 0xF8(0x1)
	unsigned char UnknownData_F9[0x0057]; // 0xF9(0x57)
};

// Class Engine.ParticleModuleTypeDataGpu
// Size : 0x420 (Inherited : 0x30)
struct UParticleModuleTypeDataGpu : UParticleModuleTypeDataBase {
	struct FGPUSpriteEmitterInfo EmitterInfo; // 0x30(0x280)
	struct FGPUSpriteResourceData ResourceData; // 0x2B0(0x160)
	float CameraMotionBlurAmount; // 0x410(0x4)
	unsigned char bClearExistingParticlesOnInit : 1; // 0x414(0x1)
	unsigned char UnknownData_414_1 : 7; // 0x414(0x1)
	unsigned char UnknownData_415[0x000B]; // 0x415(0xB)
};

// Class Engine.ParticleModuleTypeDataMesh
// Size : 0x98 (Inherited : 0x30)
struct UParticleModuleTypeDataMesh : UParticleModuleTypeDataBase {
	struct UStaticMesh* Mesh; // 0x30(0x8)
	unsigned char UnknownData_38[0x0008]; // 0x38(0x8)
	float LODSizeScale; // 0x40(0x4)
	unsigned char bUseStaticMeshLODs : 1; // 0x44(0x1)
	unsigned char CastShadows : 1; // 0x44(0x1)
	unsigned char DoCollisions : 1; // 0x44(0x1)
	unsigned char UnknownData_44_3 : 5; // 0x44(0x1)
	enum class EMeshScreenAlignment MeshAlignment; // 0x45(0x1)
	unsigned char bOverrideMaterial : 1; // 0x46(0x1)
	unsigned char bOverrideDefaultMotionBlurSettings : 1; // 0x46(0x1)
	unsigned char bEnableMotionBlur : 1; // 0x46(0x1)
	unsigned char UnknownData_46_3 : 5; // 0x46(0x1)
	unsigned char UnknownData_47[0x0001]; // 0x47(0x1)
	struct FRawDistributionVector RollPitchYawRange; // 0x48(0x48)
	enum class EParticleAxisLock AxisLockOption; // 0x90(0x1)
	unsigned char bCameraFacing : 1; // 0x91(0x1)
	unsigned char UnknownData_91_1 : 7; // 0x91(0x1)
	enum class EMeshCameraFacingUpAxis CameraFacingUpAxisOption; // 0x92(0x1)
	enum class EMeshCameraFacingOptions CameraFacingOption; // 0x93(0x1)
	unsigned char bApplyParticleRotationAsSpin : 1; // 0x94(0x1)
	unsigned char bFaceCameraDirectionRatherThanPosition : 1; // 0x94(0x1)
	unsigned char bCollisionsConsiderPartilceSize : 1; // 0x94(0x1)
	unsigned char UnknownData_94_3 : 5; // 0x94(0x1)
	unsigned char UnknownData_95[0x0003]; // 0x95(0x3)
};

// Class Engine.ParticleModuleTypeDataRibbon
// Size : 0x60 (Inherited : 0x30)
struct UParticleModuleTypeDataRibbon : UParticleModuleTypeDataBase {
	int32_t MaxTessellationBetweenParticles; // 0x30(0x4)
	int32_t SheetsPerTrail; // 0x34(0x4)
	int32_t MaxTrailCount; // 0x38(0x4)
	int32_t MaxParticleInTrailCount; // 0x3C(0x4)
	unsigned char bDeadTrailsOnDeactivate : 1; // 0x40(0x1)
	unsigned char bDeadTrailsOnSourceLoss : 1; // 0x40(0x1)
	unsigned char bClipSourceSegement : 1; // 0x40(0x1)
	unsigned char bEnablePreviousTangentRecalculation : 1; // 0x40(0x1)
	unsigned char bTangentRecalculationEveryFrame : 1; // 0x40(0x1)
	unsigned char bSpawnInitialParticle : 1; // 0x40(0x1)
	unsigned char UnknownData_40_6 : 2; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	enum class ETrailsRenderAxisOption RenderAxis; // 0x44(0x1)
	unsigned char UnknownData_45[0x0003]; // 0x45(0x3)
	float TangentSpawningScalar; // 0x48(0x4)
	unsigned char bRenderGeometry : 1; // 0x4C(0x1)
	unsigned char bRenderSpawnPoints : 1; // 0x4C(0x1)
	unsigned char bRenderTangents : 1; // 0x4C(0x1)
	unsigned char bRenderTessellation : 1; // 0x4C(0x1)
	unsigned char UnknownData_4C_4 : 4; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
	float TilingDistance; // 0x50(0x4)
	float DistanceTessellationStepSize; // 0x54(0x4)
	unsigned char bEnableTangentDiffInterpScale : 1; // 0x58(0x1)
	unsigned char UnknownData_58_1 : 7; // 0x58(0x1)
	unsigned char UnknownData_59[0x0003]; // 0x59(0x3)
	float TangentTessellationScalar; // 0x5C(0x4)
};

// Class Engine.ParticleModuleVectorFieldBase
// Size : 0x30 (Inherited : 0x30)
struct UParticleModuleVectorFieldBase : UParticleModule {
};

// Class Engine.ParticleModuleVectorFieldGlobal
// Size : 0x40 (Inherited : 0x30)
struct UParticleModuleVectorFieldGlobal : UParticleModuleVectorFieldBase {
	unsigned char bOverrideGlobalVectorFieldTightness : 1; // 0x30(0x1)
	unsigned char UnknownData_30_1 : 7; // 0x30(0x1)
	unsigned char UnknownData_31[0x0003]; // 0x31(0x3)
	float GlobalVectorFieldScale; // 0x34(0x4)
	float GlobalVectorFieldTightness; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.ParticleModuleVectorFieldLocal
// Size : 0x68 (Inherited : 0x30)
struct UParticleModuleVectorFieldLocal : UParticleModuleVectorFieldBase {
	struct UVectorField* VectorField; // 0x30(0x8)
	struct FVector RelativeTranslation; // 0x38(0xC)
	struct FRotator RelativeRotation; // 0x44(0xC)
	struct FVector RelativeScale3D; // 0x50(0xC)
	float Intensity; // 0x5C(0x4)
	float Tightness; // 0x60(0x4)
	unsigned char bIgnoreComponentTransform : 1; // 0x64(0x1)
	unsigned char bTileX : 1; // 0x64(0x1)
	unsigned char bTileY : 1; // 0x64(0x1)
	unsigned char bTileZ : 1; // 0x64(0x1)
	unsigned char bUseFixDT : 1; // 0x64(0x1)
	unsigned char UnknownData_64_5 : 3; // 0x64(0x1)
	unsigned char UnknownData_65[0x0003]; // 0x65(0x3)
};

// Class Engine.ParticleModuleVectorFieldRotation
// Size : 0x48 (Inherited : 0x30)
struct UParticleModuleVectorFieldRotation : UParticleModuleVectorFieldBase {
	struct FVector MinInitialRotation; // 0x30(0xC)
	struct FVector MaxInitialRotation; // 0x3C(0xC)
};

// Class Engine.ParticleModuleVectorFieldRotationRate
// Size : 0x40 (Inherited : 0x30)
struct UParticleModuleVectorFieldRotationRate : UParticleModuleVectorFieldBase {
	struct FVector RotationRate; // 0x30(0xC)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.ParticleModuleVectorFieldScale
// Size : 0x68 (Inherited : 0x30)
struct UParticleModuleVectorFieldScale : UParticleModuleVectorFieldBase {
	struct UDistributionFloat* VectorFieldScale; // 0x30(0x8)
	struct FRawDistributionFloat VectorFieldScaleRaw; // 0x38(0x30)
};

// Class Engine.ParticleModuleVectorFieldScaleOverLife
// Size : 0x68 (Inherited : 0x30)
struct UParticleModuleVectorFieldScaleOverLife : UParticleModuleVectorFieldBase {
	struct UDistributionFloat* VectorFieldScaleOverLife; // 0x30(0x8)
	struct FRawDistributionFloat VectorFieldScaleOverLifeRaw; // 0x38(0x30)
};

// Class Engine.ParticleModuleVelocityBase
// Size : 0x38 (Inherited : 0x30)
struct UParticleModuleVelocityBase : UParticleModule {
	unsigned char bInWorldSpace : 1; // 0x30(0x1)
	unsigned char bApplyOwnerScale : 1; // 0x30(0x1)
	unsigned char UnknownData_30_2 : 6; // 0x30(0x1)
	unsigned char UnknownData_31[0x0007]; // 0x31(0x7)
};

// Class Engine.ParticleModuleVelocity
// Size : 0xB0 (Inherited : 0x38)
struct UParticleModuleVelocity : UParticleModuleVelocityBase {
	struct FRawDistributionVector StartVelocity; // 0x38(0x48)
	struct FRawDistributionFloat StartVelocityRadial; // 0x80(0x30)
};

// Class Engine.ParticleModuleVelocity_Seeded
// Size : 0xD0 (Inherited : 0xB0)
struct UParticleModuleVelocity_Seeded : UParticleModuleVelocity {
	struct FParticleRandomSeedInfo RandomSeedInfo; // 0xB0(0x20)
};

// Class Engine.ParticleModuleVelocityCone
// Size : 0xA8 (Inherited : 0x38)
struct UParticleModuleVelocityCone : UParticleModuleVelocityBase {
	struct FRawDistributionFloat Angle; // 0x38(0x30)
	struct FRawDistributionFloat Velocity; // 0x68(0x30)
	struct FVector Direction; // 0x98(0xC)
	unsigned char UnknownData_A4[0x0004]; // 0xA4(0x4)
};

// Class Engine.ParticleModuleVelocityInheritParent
// Size : 0x80 (Inherited : 0x38)
struct UParticleModuleVelocityInheritParent : UParticleModuleVelocityBase {
	struct FRawDistributionVector Scale; // 0x38(0x48)
};

// Class Engine.ParticleModuleVelocityOverLifetime
// Size : 0x88 (Inherited : 0x38)
struct UParticleModuleVelocityOverLifetime : UParticleModuleVelocityBase {
	struct FRawDistributionVector VelOverLife; // 0x38(0x48)
	unsigned char Absolute : 1; // 0x80(0x1)
	unsigned char UnknownData_80_1 : 7; // 0x80(0x1)
	unsigned char UnknownData_81[0x0007]; // 0x81(0x7)
};

// Class Engine.ParticleSpriteEmitter
// Size : 0x1B8 (Inherited : 0x1B8)
struct UParticleSpriteEmitter : UParticleEmitter {
};

// Class Engine.ParticleSystem
// Size : 0x110 (Inherited : 0x30)
struct UParticleSystem : UFXSystemAsset {
	float UpdateTime_FPS; // 0x30(0x4)
	float UpdateTime_Delta; // 0x34(0x4)
	float WarmupTime; // 0x38(0x4)
	float WarmupTickRate; // 0x3C(0x4)
	struct TArray<struct UParticleEmitter*> Emitters; // 0x40(0x10)
	struct UParticleSystemComponent* PreviewComponent; // 0x50(0x8)
	struct UInterpCurveEdSetup* CurveEdSetup; // 0x58(0x8)
	float LODDistanceCheckTime; // 0x60(0x4)
	float MacroUVRadius; // 0x64(0x4)
	struct TArray<float> LODDistances; // 0x68(0x10)
	struct TArray<struct FParticleSystemLOD> LODSettings; // 0x78(0x10)
	struct FBox FixedRelativeBoundingBox; // 0x88(0x1C)
	float SecondsBeforeInactive; // 0xA4(0x4)
	float Delay; // 0xA8(0x4)
	float DelayLow; // 0xAC(0x4)
	unsigned char bOrientZAxisTowardCamera : 1; // 0xB0(0x1)
	unsigned char bUseFixedRelativeBoundingBox : 1; // 0xB0(0x1)
	unsigned char bShouldResetPeakCounts : 1; // 0xB0(0x1)
	unsigned char bHasPhysics : 1; // 0xB0(0x1)
	unsigned char bUseRealtimeThumbnail : 1; // 0xB0(0x1)
	unsigned char ThumbnailImageOutOfDate : 1; // 0xB0(0x1)
	unsigned char UnknownData_B0_6 : 2; // 0xB0(0x1)
	unsigned char bUseDelayRange : 1; // 0xB1(0x1)
	unsigned char bAllowManagedTicking : 1; // 0xB1(0x1)
	unsigned char bAutoDeactivate : 1; // 0xB1(0x1)
	unsigned char bRegenerateLODDuplicate : 1; // 0xB1(0x1)
	unsigned char UnknownData_B1_4 : 4; // 0xB1(0x1)
	enum class EParticleSystemUpdateMode SystemUpdateMode; // 0xB2(0x1)
	enum class ParticleSystemLODMethod LODMethod; // 0xB3(0x1)
	enum class EParticleSystemInsignificanceReaction InsignificantReaction; // 0xB4(0x1)
	enum class EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod; // 0xB5(0x1)
	unsigned char UnknownData_B6[0x0001]; // 0xB6(0x1)
	enum class EParticleSignificanceLevel MaxSignificanceLevel; // 0xB7(0x1)
	uint32_t MinTimeBetweenTicks; // 0xB8(0x4)
	float InsignificanceDelay; // 0xBC(0x4)
	struct FVector MacroUVPosition; // 0xC0(0xC)
	struct FBox CustomOcclusionBounds; // 0xCC(0x1C)
	struct TArray<struct FLODSoloTrack> SoloTracking; // 0xE8(0x10)
	struct TArray<struct FNamedEmitterMaterial> NamedMaterialSlots; // 0xF8(0x10)
	unsigned char UnknownData_108[0x0008]; // 0x108(0x8)

	bool ContainsEmitterType(class UObject* TypeData); // Function Engine.ParticleSystem.ContainsEmitterType // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557A7210
};

// Class Engine.ParticleSystemComponent
// Size : 0x670 (Inherited : 0x410)
struct UParticleSystemComponent : UFXSystemComponent {
	struct UParticleSystem* Template; // 0x408(0x8)
	struct TArray<struct UMaterialInterface*> EmitterMaterials; // 0x410(0x10)
	struct TArray<struct USkeletalMeshComponent*> SkelMeshComponents; // 0x420(0x10)
	unsigned char bResetOnDetach : 1; // 0x431(0x1)
	unsigned char bUpdateOnDedicatedServer : 1; // 0x431(0x1)
	unsigned char UnknownData_438_2 : 2; // 0x438(0x1)
	unsigned char bAllowRecycling : 1; // 0x431(0x1)
	unsigned char bAutoManageAttachment : 1; // 0x431(0x1)
	unsigned char bAutoAttachWeldSimulatedBodies : 1; // 0x431(0x1)
	unsigned char bWarmingUp : 1; // 0x432(0x1)
	unsigned char bOverrideLODMethod : 1; // 0x432(0x1)
	unsigned char bSkipUpdateDynamicDataDuringTick : 1; // 0x432(0x1)
	unsigned char UnknownData_439[0x0004]; // 0x439(0x4)
	enum class ParticleSystemLODMethod LODMethod; // 0x43D(0x1)
	enum class EParticleSignificanceLevel RequiredSignificance; // 0x43E(0x1)
	unsigned char UnknownData_43F[0x0001]; // 0x43F(0x1)
	struct TArray<struct FParticleSysParam> InstanceParameters; // 0x440(0x10)
	struct FMulticastInlineDelegate OnParticleSpawn; // 0x450(0x10)
	struct FMulticastInlineDelegate OnParticleBurst; // 0x460(0x10)
	struct FMulticastInlineDelegate OnParticleDeath; // 0x470(0x10)
	struct FMulticastInlineDelegate OnParticleCollide; // 0x480(0x10)
	bool bOldPositionValid; // 0x490(0x1)
	unsigned char UnknownData_491[0x0003]; // 0x491(0x3)
	struct FVector OldPosition; // 0x494(0xC)
	struct FVector PartSysVelocity; // 0x4A0(0xC)
	float WarmupTime; // 0x4AC(0x4)
	float WarmupTickRate; // 0x4B0(0x4)
	unsigned char UnknownData_4B4[0x0004]; // 0x4B4(0x4)
	float SecondsBeforeInactive; // 0x4B8(0x4)
	unsigned char UnknownData_4BC[0x0004]; // 0x4BC(0x4)
	float MaxTimeBeforeForceUpdateTransform; // 0x4C0(0x4)
	unsigned char UnknownData_4C4[0x001C]; // 0x4C4(0x1C)
	struct TArray<struct UParticleSystemReplay*> ReplayClips; // 0x4E0(0x10)
	unsigned char UnknownData_4F0[0x0008]; // 0x4F0(0x8)
	float CustomTimeDilation; // 0x4F8(0x4)
	unsigned char UnknownData_4FC[0x0054]; // 0x4FC(0x54)
	struct FWeakObjectPtr<struct USceneComponent> AutoAttachParent; // 0x550(0x8)
	struct FName AutoAttachSocketName; // 0x558(0x8)
	enum class EAttachmentRule AutoAttachLocationRule; // 0x560(0x1)
	enum class EAttachmentRule AutoAttachRotationRule; // 0x561(0x1)
	enum class EAttachmentRule AutoAttachScaleRule; // 0x562(0x1)
	unsigned char UnknownData_563[0x002D]; // 0x563(0x2D)
	struct FMulticastInlineDelegate OnSystemFinished; // 0x590(0x10)
	unsigned char UnknownData_5A0[0x00D0]; // 0x5A0(0xD0)

	void SetTrailSourceData(struct FName InFirstSocketName, struct FName InSecondSocketName, enum class ETrailWidthMode InWidthMode, float InWidth); // Function Engine.ParticleSystemComponent.SetTrailSourceData // (Final|Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6557AB230
	void SetTemplate(struct UParticleSystem* NewTemplate); // Function Engine.ParticleSystemComponent.SetTemplate // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AB1B0
	void SetMaterialParameter(struct FName ParameterName, struct UMaterialInterface* Param); // Function Engine.ParticleSystemComponent.SetMaterialParameter // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557AB0F0
	void SetBeamTargetTangent(int32_t EmitterIndex, struct FVector NewTangentPoint, int32_t TargetIndex); // Function Engine.ParticleSystemComponent.SetBeamTargetTangent // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557AABD0
	void SetBeamTargetStrength(int32_t EmitterIndex, float NewTargetStrength, int32_t TargetIndex); // Function Engine.ParticleSystemComponent.SetBeamTargetStrength // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AAAD0
	void SetBeamTargetPoint(int32_t EmitterIndex, struct FVector NewTargetPoint, int32_t TargetIndex); // Function Engine.ParticleSystemComponent.SetBeamTargetPoint // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557AA9C0
	void SetBeamSourceTangent(int32_t EmitterIndex, struct FVector NewTangentPoint, int32_t SourceIndex); // Function Engine.ParticleSystemComponent.SetBeamSourceTangent // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557AA8B0
	void SetBeamSourceStrength(int32_t EmitterIndex, float NewSourceStrength, int32_t SourceIndex); // Function Engine.ParticleSystemComponent.SetBeamSourceStrength // (Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AA7B0
	void SetBeamSourcePoint(int32_t EmitterIndex, struct FVector NewSourcePoint, int32_t SourceIndex); // Function Engine.ParticleSystemComponent.SetBeamSourcePoint // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557AA6A0
	void SetBeamEndPoint(int32_t EmitterIndex, struct FVector NewEndPoint); // Function Engine.ParticleSystemComponent.SetBeamEndPoint // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557AA5D0
	void SetAutoAttachParams(struct USceneComponent* Parent, struct FName SocketName, enum class EAttachLocation LocationType); // Function Engine.ParticleSystemComponent.SetAutoAttachParams // (Final|Native|Public|BlueprintCallable) // Param Size : 0x11, 0x7FF6557AA330
	int32_t GetNumActiveParticles(); // Function Engine.ParticleSystemComponent.GetNumActiveParticles // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557A9E30
	struct UMaterialInterface* GetNamedMaterial(struct FName InName); // Function Engine.ParticleSystemComponent.GetNamedMaterial // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557A9D40
	bool GetBeamTargetTangent(int32_t EmitterIndex, int32_t TargetIndex, struct FVector OutTangentPoint); // Function Engine.ParticleSystemComponent.GetBeamTargetTangent // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x15, 0x7FF6557A9AE0
	bool GetBeamTargetStrength(int32_t EmitterIndex, int32_t TargetIndex, float OutTargetStrength); // Function Engine.ParticleSystemComponent.GetBeamTargetStrength // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xD, 0x7FF6557A99C0
	bool GetBeamTargetPoint(int32_t EmitterIndex, int32_t TargetIndex, struct FVector OutTargetPoint); // Function Engine.ParticleSystemComponent.GetBeamTargetPoint // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x15, 0x7FF6557A98B0
	bool GetBeamSourceTangent(int32_t EmitterIndex, int32_t SourceIndex, struct FVector OutTangentPoint); // Function Engine.ParticleSystemComponent.GetBeamSourceTangent // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x15, 0x7FF6557A97A0
	bool GetBeamSourceStrength(int32_t EmitterIndex, int32_t SourceIndex, float OutSourceStrength); // Function Engine.ParticleSystemComponent.GetBeamSourceStrength // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xD, 0x7FF6557A9680
	bool GetBeamSourcePoint(int32_t EmitterIndex, int32_t SourceIndex, struct FVector OutSourcePoint); // Function Engine.ParticleSystemComponent.GetBeamSourcePoint // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x15, 0x7FF6557A9570
	bool GetBeamEndPoint(int32_t EmitterIndex, struct FVector OutEndPoint); // Function Engine.ParticleSystemComponent.GetBeamEndPoint // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x11, 0x7FF6557A9490
	void GenerateParticleEvent(struct FName InEventName, float InEmitterTime, struct FVector InLocation, struct FVector InDirection, struct FVector InVelocity); // Function Engine.ParticleSystemComponent.GenerateParticleEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x30, 0x7FF6557A92A0
	void EndTrails(); // Function Engine.ParticleSystemComponent.EndTrails // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557A9280
	struct UMaterialInstanceDynamic* CreateNamedDynamicMaterialInstance(struct FName InName, struct UMaterialInterface* SourceMaterial); // Function Engine.ParticleSystemComponent.CreateNamedDynamicMaterialInstance // (Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6557A9190
	void BeginTrails(struct FName InFirstSocketName, struct FName InSecondSocketName, enum class ETrailWidthMode InWidthMode, float InWidth); // Function Engine.ParticleSystemComponent.BeginTrails // (Final|Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6557A9000
};

// Class Engine.ParticleSystemReplay
// Size : 0x40 (Inherited : 0x28)
struct UParticleSystemReplay : UObject {
	int32_t ClipIDNumber; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0014]; // 0x2C(0x14)
};

// Class Engine.PathFollowingAgentInterface
// Size : 0x28 (Inherited : 0x28)
struct UPathFollowingAgentInterface : UInterface {
};

// Class Engine.PawnNoiseEmitterComponent
// Size : 0xD8 (Inherited : 0xB0)
struct UPawnNoiseEmitterComponent : UActorComponent {
	unsigned char bAIPerceptionSystemCompatibilityMode : 1; // 0xB0(0x1)
	unsigned char UnknownData_B0_1 : 7; // 0xB0(0x1)
	unsigned char UnknownData_B1[0x0003]; // 0xB1(0x3)
	struct FVector LastRemoteNoisePosition; // 0xB4(0xC)
	float NoiseLifetime; // 0xC0(0x4)
	float LastRemoteNoiseVolume; // 0xC4(0x4)
	float LastRemoteNoiseTime; // 0xC8(0x4)
	float LastLocalNoiseVolume; // 0xCC(0x4)
	float LastLocalNoiseTime; // 0xD0(0x4)
	unsigned char UnknownData_D4[0x0004]; // 0xD4(0x4)

	void MakeNoise(struct AActor* NoiseMaker, float Loudness, struct FVector NoiseLocation); // Function Engine.PawnNoiseEmitterComponent.MakeNoise // (BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557ADE90
};

// Class Engine.PhysicalAnimationComponent
// Size : 0xF0 (Inherited : 0xB0)
struct UPhysicalAnimationComponent : UActorComponent {
	float StrengthMultiplyer; // 0xB0(0x4)
	unsigned char UnknownData_B4[0x0004]; // 0xB4(0x4)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0xB8(0x8)
	unsigned char UnknownData_C0[0x0030]; // 0xC0(0x30)

	void SetStrengthMultiplyer(float InStrengthMultiplyer); // Function Engine.PhysicalAnimationComponent.SetStrengthMultiplyer // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557AF6C0
	void SetSkeletalMeshComponent(struct USkeletalMeshComponent* InSkeletalMeshComponent); // Function Engine.PhysicalAnimationComponent.SetSkeletalMeshComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AF640
	struct FTransform GetBodyTargetTransform(struct FName BodyName); // Function Engine.PhysicalAnimationComponent.GetBodyTargetTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x40, 0x7FF6557ADB50
	void ApplyPhysicalAnimationSettingsBelow(struct FName BodyName, struct FPhysicalAnimationData PhysicalAnimationData, bool bIncludeSelf); // Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettingsBelow // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x2D, 0x7FF6557AD9C0
	void ApplyPhysicalAnimationSettings(struct FName BodyName, struct FPhysicalAnimationData PhysicalAnimationData); // Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x2C, 0x7FF6557AD8E0
	void ApplyPhysicalAnimationProfileBelow(struct FName BodyName, struct FName ProfileName, bool bIncludeSelf, bool bClearNotFound); // Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationProfileBelow // (Final|Native|Public|BlueprintCallable) // Param Size : 0x12, 0x7FF6557AD790
};

// Class Engine.PhysicalMaterial
// Size : 0x80 (Inherited : 0x28)
struct UPhysicalMaterial : UObject {
	float Friction; // 0x28(0x4)
	enum class EFrictionCombineMode FrictionCombineMode; // 0x2C(0x1)
	bool bOverrideFrictionCombineMode; // 0x2D(0x1)
	unsigned char UnknownData_2E[0x0002]; // 0x2E(0x2)
	float Restitution; // 0x30(0x4)
	enum class EFrictionCombineMode RestitutionCombineMode; // 0x34(0x1)
	bool bOverrideRestitutionCombineMode; // 0x35(0x1)
	unsigned char UnknownData_36[0x0002]; // 0x36(0x2)
	float Density; // 0x38(0x4)
	float RaiseMassToPower; // 0x3C(0x4)
	float DestructibleDamageThresholdScale; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
	struct UPhysicalMaterialPropertyBase* PhysicalMaterialProperty; // 0x48(0x8)
	enum class EPhysicalSurface SurfaceType; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	float TireFrictionScale; // 0x54(0x4)
	struct TArray<struct FTireFrictionScalePair> TireFrictionScales; // 0x58(0x10)
	unsigned char UnknownData_68[0x0018]; // 0x68(0x18)
};

// Class Engine.PhysicalMaterialMask
// Size : 0x30 (Inherited : 0x28)
struct UPhysicalMaterialMask : UObject {
	int32_t UVChannelIndex; // 0x28(0x4)
	enum class TextureAddress AddressX; // 0x2C(0x1)
	enum class TextureAddress AddressY; // 0x2D(0x1)
	unsigned char UnknownData_2E[0x0002]; // 0x2E(0x2)
};

// Class Engine.PhysicalMaterialPropertyBase
// Size : 0x28 (Inherited : 0x28)
struct UPhysicalMaterialPropertyBase : UObject {
};

// Class Engine.PhysicsAsset
// Size : 0x138 (Inherited : 0x28)
struct UPhysicsAsset : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct TArray<int32_t> BoundsBodies; // 0x30(0x10)
	struct TArray<struct USkeletalBodySetup*> SkeletalBodySetups; // 0x40(0x10)
	struct TArray<struct UPhysicsConstraintTemplate*> ConstraintSetup; // 0x50(0x10)
	struct FSolverIterations SolverIterations; // 0x60(0x18)
	unsigned char bNotForDedicatedServer : 1; // 0x78(0x1)
	unsigned char UnknownData_78_1 : 7; // 0x78(0x1)
	unsigned char UnknownData_79[0x00A7]; // 0x79(0xA7)
	struct UThumbnailInfo* ThumbnailInfo; // 0x120(0x8)
	struct TArray<struct UBodySetup*> BodySetup; // 0x128(0x10)
};

// Class Engine.SkeletalBodySetup
// Size : 0x288 (Inherited : 0x270)
struct USkeletalBodySetup : UBodySetup {
	bool bSkipScaleFromAnimation; // 0x270(0x1)
	unsigned char UnknownData_271[0x0007]; // 0x271(0x7)
	struct TArray<struct FPhysicalAnimationProfile> PhysicalAnimationData; // 0x278(0x10)
};

// Class Engine.PhysicsCollisionHandler
// Size : 0x40 (Inherited : 0x28)
struct UPhysicsCollisionHandler : UObject {
	float ImpactThreshold; // 0x28(0x4)
	float ImpactReFireDelay; // 0x2C(0x4)
	struct USoundBase* DefaultImpactSound; // 0x30(0x8)
	float LastImpactSoundTime; // 0x38(0x4)
	unsigned char UnknownData_3C[0x0004]; // 0x3C(0x4)
};

// Class Engine.RigidBodyBase
// Size : 0x220 (Inherited : 0x220)
struct ARigidBodyBase : AActor {
};

// Class Engine.PhysicsConstraintActor
// Size : 0x240 (Inherited : 0x220)
struct APhysicsConstraintActor : ARigidBodyBase {
	struct UPhysicsConstraintComponent* ConstraintComp; // 0x220(0x8)
	struct AActor* ConstraintActor1; // 0x228(0x8)
	struct AActor* ConstraintActor2; // 0x230(0x8)
	unsigned char bDisableCollision : 1; // 0x238(0x1)
	unsigned char UnknownData_238_1 : 7; // 0x238(0x1)
	unsigned char UnknownData_239[0x0007]; // 0x239(0x7)
};

// Class Engine.PhysicsConstraintComponent
// Size : 0x3F0 (Inherited : 0x1F0)
struct UPhysicsConstraintComponent : USceneComponent {
	struct AActor* ConstraintActor1; // 0x1F0(0x8)
	struct FConstrainComponentPropName ComponentName1; // 0x1F8(0x8)
	struct AActor* ConstraintActor2; // 0x200(0x8)
	struct FConstrainComponentPropName ComponentName2; // 0x208(0x8)
	unsigned char UnknownData_210[0x0010]; // 0x210(0x10)
	struct UPhysicsConstraintTemplate* ConstraintSetup; // 0x220(0x8)
	struct FMulticastInlineDelegate OnConstraintBroken; // 0x228(0x10)
	struct FConstraintInstance ConstraintInstance; // 0x238(0x1B8)

	void SetOrientationDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive); // Function Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557AF570
	void SetOrientationDriveSLERP(bool bEnableSLERP); // Function Engine.PhysicsConstraintComponent.SetOrientationDriveSLERP // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557AF4E0
	void SetLinearZLimit(enum class ELinearConstraintMotion ConstraintType, float LimitSize); // Function Engine.PhysicsConstraintComponent.SetLinearZLimit // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AF420
	void SetLinearYLimit(enum class ELinearConstraintMotion ConstraintType, float LimitSize); // Function Engine.PhysicsConstraintComponent.SetLinearYLimit // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AF360
	void SetLinearXLimit(enum class ELinearConstraintMotion ConstraintType, float LimitSize); // Function Engine.PhysicsConstraintComponent.SetLinearXLimit // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AF2A0
	void SetLinearVelocityTarget(struct FVector InVelTarget); // Function Engine.PhysicsConstraintComponent.SetLinearVelocityTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AF210
	void SetLinearVelocityDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ); // Function Engine.PhysicsConstraintComponent.SetLinearVelocityDrive // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF6557AF0F0
	void SetLinearPositionTarget(struct FVector InPosTarget); // Function Engine.PhysicsConstraintComponent.SetLinearPositionTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AF060
	void SetLinearPositionDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ); // Function Engine.PhysicsConstraintComponent.SetLinearPositionDrive // (Final|Native|Public|BlueprintCallable) // Param Size : 0x3, 0x7FF6557AEF40
	void SetLinearDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit); // Function Engine.PhysicsConstraintComponent.SetLinearDriveParams // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AEE30
	void SetLinearBreakable(bool bLinearBreakable, float LinearBreakThreshold); // Function Engine.PhysicsConstraintComponent.SetLinearBreakable // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AED60
	void SetDisableCollision(bool bDisableCollision); // Function Engine.PhysicsConstraintComponent.SetDisableCollision // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557AECD0
	void SetConstraintReferencePosition(enum class EConstraintFrame Frame, struct FVector RefPosition); // Function Engine.PhysicsConstraintComponent.SetConstraintReferencePosition // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557AEC00
	void SetConstraintReferenceOrientation(enum class EConstraintFrame Frame, struct FVector PriAxis, struct FVector SecAxis); // Function Engine.PhysicsConstraintComponent.SetConstraintReferenceOrientation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF6557AEAE0
	void SetConstraintReferenceFrame(enum class EConstraintFrame Frame, struct FTransform RefFrame); // Function Engine.PhysicsConstraintComponent.SetConstraintReferenceFrame // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF6557AE9C0
	void SetConstrainedComponents(struct UPrimitiveComponent* Component1, struct FName BoneName1, struct UPrimitiveComponent* Component2, struct FName BoneName2); // Function Engine.PhysicsConstraintComponent.SetConstrainedComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x20, 0x7FF6557AE870
	void SetAngularVelocityTarget(struct FVector InVelTarget); // Function Engine.PhysicsConstraintComponent.SetAngularVelocityTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AE7E0
	void SetAngularVelocityDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive); // Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveTwistAndSwing // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557AE710
	void SetAngularVelocityDriveSLERP(bool bEnableSLERP); // Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveSLERP // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557AE680
	void SetAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive); // Function Engine.PhysicsConstraintComponent.SetAngularVelocityDrive // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557AE5B0
	void SetAngularTwistLimit(enum class EAngularConstraintMotion ConstraintType, float TwistLimitAngle); // Function Engine.PhysicsConstraintComponent.SetAngularTwistLimit // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AE4F0
	void SetAngularSwing2Limit(enum class EAngularConstraintMotion MotionType, float Swing2LimitAngle); // Function Engine.PhysicsConstraintComponent.SetAngularSwing2Limit // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AE430
	void SetAngularSwing1Limit(enum class EAngularConstraintMotion MotionType, float Swing1LimitAngle); // Function Engine.PhysicsConstraintComponent.SetAngularSwing1Limit // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557AE370
	void SetAngularOrientationTarget(struct FRotator InPosTarget); // Function Engine.PhysicsConstraintComponent.SetAngularOrientationTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AE2E0
	void SetAngularOrientationDrive(bool bEnableSwingDrive, bool bEnableTwistDrive); // Function Engine.PhysicsConstraintComponent.SetAngularOrientationDrive // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557AE210
	void SetAngularDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit); // Function Engine.PhysicsConstraintComponent.SetAngularDriveParams // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557AE100
	void SetAngularDriveMode(enum class EAngularDriveMode DriveMode); // Function Engine.PhysicsConstraintComponent.SetAngularDriveMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557AE080
	void SetAngularBreakable(bool bAngularBreakable, float AngularBreakThreshold); // Function Engine.PhysicsConstraintComponent.SetAngularBreakable // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557ADFB0
	bool IsBroken(); // Function Engine.PhysicsConstraintComponent.IsBroken // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557ADE30
	float GetCurrentTwist(); // Function Engine.PhysicsConstraintComponent.GetCurrentTwist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557ADD50
	float GetCurrentSwing2(); // Function Engine.PhysicsConstraintComponent.GetCurrentSwing2 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557ADD20
	float GetCurrentSwing1(); // Function Engine.PhysicsConstraintComponent.GetCurrentSwing1 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557ADCF0
	void GetConstraintForce(struct FVector OutLinearForce, struct FVector OutAngularForce); // Function Engine.PhysicsConstraintComponent.GetConstraintForce // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557ADC10
	void BreakConstraint(); // Function Engine.PhysicsConstraintComponent.BreakConstraint // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557ADAF0
};

// Class Engine.PhysicsConstraintTemplate
// Size : 0x2F8 (Inherited : 0x28)
struct UPhysicsConstraintTemplate : UObject {
	struct FConstraintInstance DefaultInstance; // 0x28(0x1B8)
	struct TArray<struct FPhysicsConstraintProfileHandle> ProfileHandles; // 0x1E0(0x10)
	struct FConstraintProfileProperties DefaultProfile; // 0x1F0(0x104)
	unsigned char UnknownData_2F4[0x0004]; // 0x2F4(0x4)
};

// Class Engine.PhysicsHandleComponent
// Size : 0x160 (Inherited : 0xB0)
struct UPhysicsHandleComponent : UActorComponent {
	struct UPrimitiveComponent* GrabbedComponent; // 0xB0(0x8)
	unsigned char UnknownData_B8[0x0008]; // 0xB8(0x8)
	unsigned char UnknownData_C0_0 : 1; // 0xC0(0x1)
	unsigned char bSoftAngularConstraint : 1; // 0xC0(0x1)
	unsigned char bSoftLinearConstraint : 1; // 0xC0(0x1)
	unsigned char bInterpolateTarget : 1; // 0xC0(0x1)
	unsigned char UnknownData_C0_4 : 4; // 0xC0(0x1)
	unsigned char UnknownData_C1[0x0003]; // 0xC1(0x3)
	float LinearDamping; // 0xC4(0x4)
	float LinearStiffness; // 0xC8(0x4)
	float AngularDamping; // 0xCC(0x4)
	float AngularStiffness; // 0xD0(0x4)
	unsigned char UnknownData_D4[0x006C]; // 0xD4(0x6C)
	float InterpolationSpeed; // 0x140(0x4)
	unsigned char UnknownData_144[0x001C]; // 0x144(0x1C)

	void SetTargetRotation(struct FRotator NewRotation); // Function Engine.PhysicsHandleComponent.SetTargetRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557B2050
	void SetTargetLocationAndRotation(struct FVector NewLocation, struct FRotator NewRotation); // Function Engine.PhysicsHandleComponent.SetTargetLocationAndRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557B1F70
	void SetTargetLocation(struct FVector NewLocation); // Function Engine.PhysicsHandleComponent.SetTargetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557B1EE0
	void SetLinearStiffness(float NewLinearStiffness); // Function Engine.PhysicsHandleComponent.SetLinearStiffness // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B1E60
	void SetLinearDamping(float NewLinearDamping); // Function Engine.PhysicsHandleComponent.SetLinearDamping // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B1DE0
	void SetInterpolationSpeed(float NewInterpolationSpeed); // Function Engine.PhysicsHandleComponent.SetInterpolationSpeed // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B1D60
	void SetAngularStiffness(float NewAngularStiffness); // Function Engine.PhysicsHandleComponent.SetAngularStiffness // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B1CE0
	void SetAngularDamping(float NewAngularDamping); // Function Engine.PhysicsHandleComponent.SetAngularDamping // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557B1C60
	void ReleaseComponent(); // Function Engine.PhysicsHandleComponent.ReleaseComponent // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557B1C40
	void GrabComponentAtLocationWithRotation(struct UPrimitiveComponent* Component, struct FName InBoneName, struct FVector Location, struct FRotator Rotation); // Function Engine.PhysicsHandleComponent.GrabComponentAtLocationWithRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF6557B19D0
	void GrabComponentAtLocation(struct UPrimitiveComponent* Component, struct FName InBoneName, struct FVector GrabLocation); // Function Engine.PhysicsHandleComponent.GrabComponentAtLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x1C, 0x7FF6557B18C0
	void GrabComponent(struct UPrimitiveComponent* Component, struct FName InBoneName, struct FVector GrabLocation, bool bConstrainRotation); // Function Engine.PhysicsHandleComponent.GrabComponent // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x1D, 0x7FF6557B1770
	void GetTargetLocationAndRotation(struct FVector TargetLocation, struct FRotator TargetRotation); // Function Engine.PhysicsHandleComponent.GetTargetLocationAndRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557B1690
	struct UPrimitiveComponent* GetGrabbedComponent(); // Function Engine.PhysicsHandleComponent.GetGrabbedComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF654A28390
};

// Class Engine.PhysicsSettings
// Size : 0x138 (Inherited : 0x38)
struct UPhysicsSettings : UDeveloperSettings {
	float DefaultGravityZ; // 0x38(0x4)
	float DefaultTerminalVelocity; // 0x3C(0x4)
	float DefaultFluidFriction; // 0x40(0x4)
	int32_t SimulateScratchMemorySize; // 0x44(0x4)
	int32_t RagdollAggregateThreshold; // 0x48(0x4)
	float TriangleMeshTriangleMinAreaThreshold; // 0x4C(0x4)
	bool bEnableShapeSharing; // 0x50(0x1)
	bool bEnablePCM; // 0x51(0x1)
	bool bEnableStabilization; // 0x52(0x1)
	bool bWarnMissingLocks; // 0x53(0x1)
	bool bEnable2DPhysics; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
	struct FRigidBodyErrorCorrection PhysicErrorCorrection; // 0x58(0x34)
	enum class ESettingsLockedAxis LockedAxis; // 0x8C(0x1)
	enum class ESettingsDOF DefaultDegreesOfFreedom; // 0x8D(0x1)
	unsigned char UnknownData_8E[0x0002]; // 0x8E(0x2)
	float BounceThresholdVelocity; // 0x90(0x4)
	enum class EFrictionCombineMode FrictionCombineMode; // 0x94(0x1)
	enum class EFrictionCombineMode RestitutionCombineMode; // 0x95(0x1)
	unsigned char UnknownData_96[0x0002]; // 0x96(0x2)
	float MaxAngularVelocity; // 0x98(0x4)
	float MaxDepenetrationVelocity; // 0x9C(0x4)
	float ContactOffsetMultiplier; // 0xA0(0x4)
	float MinContactOffset; // 0xA4(0x4)
	float MaxContactOffset; // 0xA8(0x4)
	bool bSimulateSkeletalMeshOnDedicatedServer; // 0xAC(0x1)
	enum class ECollisionTraceFlag DefaultShapeComplexity; // 0xAD(0x1)
	bool bDefaultHasComplexCollision; // 0xAE(0x1)
	bool bSuppressFaceRemapTable; // 0xAF(0x1)
	bool bSupportUVFromHitResults; // 0xB0(0x1)
	bool bDisableActiveActors; // 0xB1(0x1)
	bool bDisableKinematicStaticPairs; // 0xB2(0x1)
	bool bDisableKinematicKinematicPairs; // 0xB3(0x1)
	bool bDisableCCD; // 0xB4(0x1)
	bool bEnableEnhancedDeterminism; // 0xB5(0x1)
	unsigned char UnknownData_B6[0x0002]; // 0xB6(0x2)
	float AnimPhysicsMinDeltaTime; // 0xB8(0x4)
	bool bSimulateAnimPhysicsAfterReset; // 0xBC(0x1)
	unsigned char UnknownData_BD[0x0003]; // 0xBD(0x3)
	float MaxPhysicsDeltaTime; // 0xC0(0x4)
	bool bSubstepping; // 0xC4(0x1)
	bool bSubsteppingAsync; // 0xC5(0x1)
	unsigned char UnknownData_C6[0x0002]; // 0xC6(0x2)
	float MaxSubstepDeltaTime; // 0xC8(0x4)
	int32_t MaxSubsteps; // 0xCC(0x4)
	float SyncSceneSmoothingFactor; // 0xD0(0x4)
	float InitialAverageFrameRate; // 0xD4(0x4)
	int32_t PhysXTreeRebuildRate; // 0xD8(0x4)
	unsigned char UnknownData_DC[0x0004]; // 0xDC(0x4)
	struct TArray<struct FPhysicalSurfaceName> PhysicalSurfaces; // 0xE0(0x10)
	struct FBroadphaseSettings DefaultBroadphaseSettings; // 0xF0(0x40)
	struct FChaosPhysicsSettings ChaosSettings; // 0x130(0x3)
	unsigned char UnknownData_133[0x0005]; // 0x133(0x5)
};

// Class Engine.PhysicsSpringComponent
// Size : 0x220 (Inherited : 0x1F0)
struct UPhysicsSpringComponent : USceneComponent {
	float SpringStiffness; // 0x1F0(0x4)
	float SpringDamping; // 0x1F4(0x4)
	float SpringLengthAtRest; // 0x1F8(0x4)
	float SpringRadius; // 0x1FC(0x4)
	enum class ECollisionChannel SpringChannel; // 0x200(0x1)
	bool bIgnoreSelf; // 0x201(0x1)
	unsigned char UnknownData_202[0x0002]; // 0x202(0x2)
	float SpringCompression; // 0x204(0x4)
	unsigned char UnknownData_208[0x0018]; // 0x208(0x18)

	struct FVector GetSpringRestingPoint(); // Function Engine.PhysicsSpringComponent.GetSpringRestingPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557B1650
	struct FVector GetSpringDirection(); // Function Engine.PhysicsSpringComponent.GetSpringDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557B1610
	struct FVector GetSpringCurrentEndPoint(); // Function Engine.PhysicsSpringComponent.GetSpringCurrentEndPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557B15D0
	float GetNormalizedCompressionScalar(); // Function Engine.PhysicsSpringComponent.GetNormalizedCompressionScalar // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557B15A0
};

// Class Engine.PhysicsThruster
// Size : 0x228 (Inherited : 0x220)
struct APhysicsThruster : ARigidBodyBase {
	struct UPhysicsThrusterComponent* ThrusterComponent; // 0x220(0x8)
};

// Class Engine.PhysicsThrusterComponent
// Size : 0x200 (Inherited : 0x1F0)
struct UPhysicsThrusterComponent : USceneComponent {
	float ThrustStrength; // 0x1F0(0x4)
	unsigned char UnknownData_1F4[0x000C]; // 0x1F4(0xC)
};

// Class Engine.SceneCapture
// Size : 0x230 (Inherited : 0x220)
struct ASceneCapture : AActor {
	struct UStaticMeshComponent* MeshComp; // 0x220(0x8)
	struct USceneComponent* SceneComponent; // 0x228(0x8)
};

// Class Engine.PlanarReflection
// Size : 0x240 (Inherited : 0x230)
struct APlanarReflection : ASceneCapture {
	struct UPlanarReflectionComponent* PlanarReflectionComponent; // 0x230(0x8)
	bool bShowPreviewPlane; // 0x238(0x1)
	unsigned char UnknownData_239[0x0007]; // 0x239(0x7)

	void OnInterpToggle(bool bEnable); // Function Engine.PlanarReflection.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557B1BB0
};

// Class Engine.SceneCaptureComponent
// Size : 0x290 (Inherited : 0x1F0)
struct USceneCaptureComponent : USceneComponent {
	enum class ESceneCapturePrimitiveRenderMode PrimitiveRenderMode; // 0x1F0(0x1)
	enum class ESceneCaptureSource CaptureSource; // 0x1F1(0x1)
	unsigned char bCaptureEveryFrame : 1; // 0x1F2(0x1)
	unsigned char bCaptureOnMovement : 1; // 0x1F2(0x1)
	unsigned char UnknownData_1F2_2 : 6; // 0x1F2(0x1)
	bool bAlwaysPersistRenderingState; // 0x1F3(0x1)
	unsigned char UnknownData_1F4[0x0004]; // 0x1F4(0x4)
	struct TArray<struct FWeakObjectPtr<struct UPrimitiveComponent>> HiddenComponents; // 0x1F8(0x10)
	struct TArray<struct AActor*> HiddenActors; // 0x208(0x10)
	struct TArray<struct FWeakObjectPtr<struct UPrimitiveComponent>> ShowOnlyComponents; // 0x218(0x10)
	struct TArray<struct AActor*> ShowOnlyActors; // 0x228(0x10)
	float LODDistanceFactor; // 0x238(0x4)
	float MaxViewDistanceOverride; // 0x23C(0x4)
	int32_t CaptureSortPriority; // 0x240(0x4)
	bool bUseRayTracingIfEnabled; // 0x244(0x1)
	unsigned char UnknownData_245[0x0003]; // 0x245(0x3)
	struct TArray<struct FEngineShowFlagsSetting> ShowFlagSettings; // 0x248(0x10)
	unsigned char UnknownData_258[0x0010]; // 0x258(0x10)
	struct FString ProfilingEventName; // 0x268(0x10)
	unsigned char UnknownData_278[0x0018]; // 0x278(0x18)

	void ShowOnlyComponent(struct UPrimitiveComponent* InComponent); // Function Engine.SceneCaptureComponent.ShowOnlyComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557D7C00
	void ShowOnlyActorComponents(struct AActor* InActor, bool bIncludeFromChildActors); // Function Engine.SceneCaptureComponent.ShowOnlyActorComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557D7B30
	void SetCaptureSortPriority(int32_t NewCaptureSortPriority); // Function Engine.SceneCaptureComponent.SetCaptureSortPriority // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557D76E0
	void RemoveShowOnlyComponent(struct UPrimitiveComponent* InComponent); // Function Engine.SceneCaptureComponent.RemoveShowOnlyComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557D7520
	void RemoveShowOnlyActorComponents(struct AActor* InActor, bool bIncludeFromChildActors); // Function Engine.SceneCaptureComponent.RemoveShowOnlyActorComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557D7450
	void HideComponent(struct UPrimitiveComponent* InComponent); // Function Engine.SceneCaptureComponent.HideComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557D5010
	void HideActorComponents(struct AActor* InActor, bool bIncludeFromChildActors); // Function Engine.SceneCaptureComponent.HideActorComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557D4F40
	void ClearShowOnlyComponents(); // Function Engine.SceneCaptureComponent.ClearShowOnlyComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557D4620
	void ClearHiddenComponents(); // Function Engine.SceneCaptureComponent.ClearHiddenComponents // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557D4600
};

// Class Engine.PlanarReflectionComponent
// Size : 0x370 (Inherited : 0x290)
struct UPlanarReflectionComponent : USceneCaptureComponent {
	struct UBoxComponent* PreviewBox; // 0x288(0x8)
	float NormalDistortionStrength; // 0x290(0x4)
	float PrefilterRoughness; // 0x294(0x4)
	float PrefilterRoughnessDistance; // 0x298(0x4)
	int32_t ScreenPercentage; // 0x29C(0x4)
	float ExtraFOV; // 0x2A0(0x4)
	float DistanceFromPlaneFadeStart; // 0x2A4(0x4)
	float DistanceFromPlaneFadeEnd; // 0x2A8(0x4)
	float DistanceFromPlaneFadeoutStart; // 0x2AC(0x4)
	float DistanceFromPlaneFadeoutEnd; // 0x2B0(0x4)
	float AngleFromPlaneFadeStart; // 0x2B4(0x4)
	float AngleFromPlaneFadeEnd; // 0x2B8(0x4)
	bool bShowPreviewPlane; // 0x2BC(0x1)
	bool bRenderSceneTwoSided; // 0x2BD(0x1)
	unsigned char UnknownData_2C6[0x00AA]; // 0x2C6(0xAA)
};

// Class Engine.PlaneReflectionCapture
// Size : 0x228 (Inherited : 0x228)
struct APlaneReflectionCapture : AReflectionCapture {
};

// Class Engine.PlaneReflectionCaptureComponent
// Size : 0x280 (Inherited : 0x270)
struct UPlaneReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadiusScale; // 0x268(0x4)
	struct UDrawSphereComponent* PreviewInfluenceRadius; // 0x270(0x8)
	struct UBoxComponent* PreviewCaptureBox; // 0x278(0x8)
};

// Class Engine.PlatformEventsComponent
// Size : 0xD0 (Inherited : 0xB0)
struct UPlatformEventsComponent : UActorComponent {
	struct FMulticastInlineDelegate PlatformChangedToLaptopModeDelegate; // 0xB0(0x10)
	struct FMulticastInlineDelegate PlatformChangedToTabletModeDelegate; // 0xC0(0x10)

	bool SupportsConvertibleLaptops(); // Function Engine.PlatformEventsComponent.SupportsConvertibleLaptops // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557B20E0
	void PlatformEventDelegate__DelegateSignature(); // DelegateFunction Engine.PlatformEventsComponent.PlatformEventDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // Param Size : 0x0, 0x7FF653FAFDF0
	bool IsInTabletMode(); // Function Engine.PlatformEventsComponent.IsInTabletMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557B1B80
	bool IsInLaptopMode(); // Function Engine.PlatformEventsComponent.IsInLaptopMode // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557B1B50
};

// Class Engine.PlatformInterfaceWebResponse
// Size : 0xB0 (Inherited : 0x28)
struct UPlatformInterfaceWebResponse : UObject {
	struct FString OriginalURL; // 0x28(0x10)
	int32_t ResponseCode; // 0x38(0x4)
	int32_t Tag; // 0x3C(0x4)
	struct FString StringResponse; // 0x40(0x10)
	struct TArray<enum class None> BinaryResponse; // 0x50(0x10)
	unsigned char UnknownData_60[0x0050]; // 0x60(0x50)

	int32_t GetNumHeaders(); // Function Engine.PlatformInterfaceWebResponse.GetNumHeaders // (Native|Public) // Param Size : 0x4, 0x7FF6535A9FD0
	struct FString GetHeaderValue(struct FString HeaderName); // Function Engine.PlatformInterfaceWebResponse.GetHeaderValue // (Native|Public) // Param Size : 0x20, 0x7FF6557B97D0
	void GetHeader(int32_t HeaderIndex, struct FString Header, struct FString Value); // Function Engine.PlatformInterfaceWebResponse.GetHeader // (Native|Public|HasOutParms) // Param Size : 0x28, 0x7FF6557B9670
};

// Class Engine.PlayerCameraManager
// Size : 0x2800 (Inherited : 0x220)
struct APlayerCameraManager : AActor {
	struct APlayerController* PCOwner; // 0x220(0x8)
	struct USceneComponent* TransformComponent; // 0x228(0x8)
	unsigned char UnknownData_230[0x0008]; // 0x230(0x8)
	float DefaultFOV; // 0x238(0x4)
	unsigned char UnknownData_23C[0x0004]; // 0x23C(0x4)
	float DefaultOrthoWidth; // 0x240(0x4)
	unsigned char UnknownData_244[0x0004]; // 0x244(0x4)
	float DefaultAspectRatio; // 0x248(0x4)
	unsigned char UnknownData_24C[0x0044]; // 0x24C(0x44)
	struct FCameraCacheEntry CameraCache; // 0x290(0x600)
	struct FCameraCacheEntry LastFrameCameraCache; // 0x890(0x600)
	struct FTViewTarget ViewTarget; // 0xE90(0x610)
	struct FTViewTarget PendingViewTarget; // 0x14A0(0x610)
	unsigned char UnknownData_1AB0[0x0030]; // 0x1AB0(0x30)
	struct FCameraCacheEntry CameraCachePrivate; // 0x1AE0(0x600)
	struct FCameraCacheEntry LastFrameCameraCachePrivate; // 0x20E0(0x600)
	struct TArray<struct UCameraModifier*> ModifierList; // 0x26E0(0x10)
	struct TArray<class UCameraModifier*> DefaultModifiers; // 0x26F0(0x10)
	float FreeCamDistance; // 0x2700(0x4)
	struct FVector FreeCamOffset; // 0x2704(0xC)
	struct FVector ViewTargetOffset; // 0x2710(0xC)
	unsigned char UnknownData_271C[0x0014]; // 0x271C(0x14)
	struct TArray<struct AEmitterCameraLensEffectBase*> CameraLensEffects; // 0x2730(0x10)
	struct UCameraModifier_CameraShake* CachedCameraShakeMod; // 0x2740(0x8)
	struct UCameraAnimInst* AnimInstPool[8]; // 0x2748(0x40)
	struct TArray<struct FPostProcessSettings> PostProcessBlendCache; // 0x2788(0x10)
	unsigned char UnknownData_2798[0x0010]; // 0x2798(0x10)
	struct TArray<struct UCameraAnimInst*> ActiveAnims; // 0x27A8(0x10)
	struct TArray<struct UCameraAnimInst*> FreeAnims; // 0x27B8(0x10)
	struct ACameraActor* AnimCameraActor; // 0x27C8(0x8)
	unsigned char bIsOrthographic : 1; // 0x27D0(0x1)
	unsigned char bDefaultConstrainAspectRatio : 1; // 0x27D0(0x1)
	unsigned char UnknownData_27D0_2 : 4; // 0x27D0(0x1)
	unsigned char bClientSimulatingViewTarget : 1; // 0x27D0(0x1)
	unsigned char bUseClientSideCameraUpdates : 1; // 0x27D0(0x1)
	unsigned char UnknownData_27D1_0 : 2; // 0x27D1(0x1)
	unsigned char bGameCameraCutThisFrame : 1; // 0x27D1(0x1)
	unsigned char UnknownData_27D1_3 : 5; // 0x27D1(0x1)
	unsigned char UnknownData_27D2[0x0002]; // 0x27D2(0x2)
	float ViewPitchMin; // 0x27D4(0x4)
	float ViewPitchMax; // 0x27D8(0x4)
	float ViewYawMin; // 0x27DC(0x4)
	float ViewYawMax; // 0x27E0(0x4)
	float ViewRollMin; // 0x27E4(0x4)
	float ViewRollMax; // 0x27E8(0x4)
	unsigned char UnknownData_27EC[0x0004]; // 0x27EC(0x4)
	float ServerUpdateCameraTimeout; // 0x27F0(0x4)
	unsigned char UnknownData_27F4[0x000C]; // 0x27F4(0xC)

	void StopCameraShake(struct UCameraShake* ShakeInstance, bool bImmediately); // Function Engine.PlayerCameraManager.StopCameraShake // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557BDE70
	void StopCameraFade(); // Function Engine.PlayerCameraManager.StopCameraFade // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557BDE50
	void StopCameraAnimInst(struct UCameraAnimInst* AnimInst, bool bImmediate); // Function Engine.PlayerCameraManager.StopCameraAnimInst // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557BDD80
	void StopAllInstancesOfCameraShakeFromSource(struct UCameraShakeSourceComponent* SourceComponent, bool bImmediately); // Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShakeFromSource // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557BDCB0
	void StopAllInstancesOfCameraShake(class UCameraShake* Shake, bool bImmediately); // Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShake // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557BDBE0
	void StopAllInstancesOfCameraAnim(struct UCameraAnim* Anim, bool bImmediate); // Function Engine.PlayerCameraManager.StopAllInstancesOfCameraAnim // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557BDB10
	void StopAllCameraShakes(bool bImmediately); // Function Engine.PlayerCameraManager.StopAllCameraShakes // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557BDA80
	void StopAllCameraAnims(bool bImmediate); // Function Engine.PlayerCameraManager.StopAllCameraAnims // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557BD9F0
	void StartCameraFade(float FromAlpha, float ToAlpha, float Duration, struct FLinearColor Color, bool bShouldFadeAudio, bool bHoldWhenFinished); // Function Engine.PlayerCameraManager.StartCameraFade // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x1E, 0x7FF6557BD7A0
	void SetManualCameraFade(float InFadeAmount, struct FLinearColor Color, bool bInFadeAudio); // Function Engine.PlayerCameraManager.SetManualCameraFade // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557BD250
	void SetGameCameraCutThisFrame(); // Function Engine.PlayerCameraManager.SetGameCameraCutThisFrame // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557BD130
	bool RemoveCameraModifier(struct UCameraModifier* ModifierToRemove); // Function Engine.PlayerCameraManager.RemoveCameraModifier // (Native|Public|BlueprintCallable) // Param Size : 0x9, 0x7FF6557BBBA0
	void RemoveCameraLensEffect(struct AEmitterCameraLensEffectBase* Emitter); // Function Engine.PlayerCameraManager.RemoveCameraLensEffect // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557064E0
	struct UCameraShake* PlayCameraShakeFromSource(class UCameraShake* ShakeClass, struct UCameraShakeSourceComponent* SourceComponent); // Function Engine.PlayerCameraManager.PlayCameraShakeFromSource // (Native|Public|BlueprintCallable) // Param Size : 0x18, 0x7FF6557BB5D0
	struct UCameraShake* PlayCameraShake(class UCameraShake* ShakeClass, float Scale, enum class ECameraAnimPlaySpace PlaySpace, struct FRotator UserPlaySpaceRot); // Function Engine.PlayerCameraManager.PlayCameraShake // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x28, 0x7FF6557BB460
	struct UCameraAnimInst* PlayCameraAnim(struct UCameraAnim* Anim, float Rate, float Scale, float BlendInTime, float BlendOutTime, bool bLoop, bool bRandomStartTime, float Duration, enum class ECameraAnimPlaySpace PlaySpace, struct FRotator UserPlaySpaceRot); // Function Engine.PlayerCameraManager.PlayCameraAnim // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x38, 0x7FF6557BB180
	void PhotographyCameraModify(struct FVector NewCameraLocation, struct FVector PreviousCameraLocation, struct FVector OriginalCameraLocation, struct FVector ResultCameraLocation); // Function Engine.PlayerCameraManager.PhotographyCameraModify // (BlueprintCosmetic|Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0x30, 0x7FF6557BB000
	void OnPhotographySessionStart(); // Function Engine.PlayerCameraManager.OnPhotographySessionStart // (BlueprintCosmetic|Native|Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF655793F10
	void OnPhotographySessionEnd(); // Function Engine.PlayerCameraManager.OnPhotographySessionEnd // (BlueprintCosmetic|Native|Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF655794230
	void OnPhotographyMultiPartCaptureStart(); // Function Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureStart // (BlueprintCosmetic|Native|Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF6556F0750
	void OnPhotographyMultiPartCaptureEnd(); // Function Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureEnd // (BlueprintCosmetic|Native|Event|Public|BlueprintEvent) // Param Size : 0x0, 0x7FF6556FB1C0
	struct APlayerController* GetOwningPlayerController(); // Function Engine.PlayerCameraManager.GetOwningPlayerController // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557BAAE0
	float GetFOVAngle(); // Function Engine.PlayerCameraManager.GetFOVAngle // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557B95C0
	struct FRotator GetCameraRotation(); // Function Engine.PlayerCameraManager.GetCameraRotation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557B9580
	struct FVector GetCameraLocation(); // Function Engine.PlayerCameraManager.GetCameraLocation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557B9540
	struct UCameraModifier* FindCameraModifierByClass(class UCameraModifier* ModifierClass); // Function Engine.PlayerCameraManager.FindCameraModifierByClass // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557B94A0
	void ClearCameraLensEffects(); // Function Engine.PlayerCameraManager.ClearCameraLensEffects // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556DA460
	bool BlueprintUpdateCamera(struct AActor* CameraTarget, struct FVector NewCameraLocation, struct FRotator NewCameraRotation, float NewCameraFOV); // Function Engine.PlayerCameraManager.BlueprintUpdateCamera // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // Param Size : 0x25, 0x7FF653FAFDF0
	struct UCameraModifier* AddNewCameraModifier(class UCameraModifier* ModifierClass); // Function Engine.PlayerCameraManager.AddNewCameraModifier // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557B6460
	struct AEmitterCameraLensEffectBase* AddCameraLensEffect(class AEmitterCameraLensEffectBase* LensEffectEmitterClass); // Function Engine.PlayerCameraManager.AddCameraLensEffect // (Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557B63C0
};

// Class Engine.PlayerInput
// Size : 0x3A8 (Inherited : 0x28)
struct UPlayerInput : UObject {
	unsigned char UnknownData_28[0x00F8]; // 0x28(0xF8)
	struct TArray<struct FKeyBind> DebugExecBindings; // 0x120(0x10)
	unsigned char UnknownData_130[0x0030]; // 0x130(0x30)
	struct TArray<struct FName> InvertedAxis; // 0x160(0x10)
	unsigned char UnknownData_170[0x0238]; // 0x170(0x238)

	void SetMouseSensitivity(float Sensitivity); // Function Engine.PlayerInput.SetMouseSensitivity // (Final|Exec|Native|Public) // Param Size : 0x4, 0x7FF6557C9770
	void SetBind(struct FName BindName, struct FString Command); // Function Engine.PlayerInput.SetBind // (Final|Exec|Native|Public) // Param Size : 0x18, 0x7FF6557C7F90
	void InvertAxisKey(struct FKey AxisKey); // Function Engine.PlayerInput.InvertAxisKey // (Final|Exec|Native|Public) // Param Size : 0x18, 0x7FF6557C6980
	void InvertAxis(struct FName AxisName); // Function Engine.PlayerInput.InvertAxis // (Final|Exec|Native|Public) // Param Size : 0x8, 0x7FF6557C6900
	void ClearSmoothing(); // Function Engine.PlayerInput.ClearSmoothing // (Final|Exec|Native|Public) // Param Size : 0x0, 0x7FF6557C53B0
};

// Class Engine.PlayerStart
// Size : 0x250 (Inherited : 0x248)
struct APlayerStart : ANavigationObjectBase {
	struct FName PlayerStartTag; // 0x248(0x8)
};

// Class Engine.PlayerStartPIE
// Size : 0x250 (Inherited : 0x250)
struct APlayerStartPIE : APlayerStart {
};

// Class Engine.PlayerState
// Size : 0x320 (Inherited : 0x220)
struct APlayerState : AInfo {
	float Score; // 0x220(0x4)
	int32_t PlayerId; // 0x224(0x4)
	enum class None Ping; // 0x228(0x1)
	unsigned char UnknownData_229[0x0001]; // 0x229(0x1)
	unsigned char bShouldUpdateReplicatedPing : 1; // 0x22A(0x1)
	unsigned char bIsSpectator : 1; // 0x22A(0x1)
	unsigned char bOnlySpectator : 1; // 0x22A(0x1)
	unsigned char bIsABot : 1; // 0x22A(0x1)
	unsigned char UnknownData_22A_4 : 1; // 0x22A(0x1)
	unsigned char bIsInactive : 1; // 0x22A(0x1)
	unsigned char bFromPreviousLevel : 1; // 0x22A(0x1)
	unsigned char UnknownData_22B[0x0001]; // 0x22B(0x1)
	int32_t StartTime; // 0x22C(0x4)
	class ULocalMessage* EngineMessageClass; // 0x230(0x8)
	unsigned char UnknownData_238[0x0008]; // 0x238(0x8)
	struct FString SavedNetworkAddress; // 0x240(0x10)
	struct FUniqueNetIdRepl UniqueId; // 0x250(0x28)
	unsigned char UnknownData_278[0x0008]; // 0x278(0x8)
	struct APawn* PawnPrivate; // 0x280(0x8)
	unsigned char UnknownData_288[0x0078]; // 0x288(0x78)
	struct FString PlayerNamePrivate; // 0x300(0x10)
	unsigned char UnknownData_310[0x0010]; // 0x310(0x10)

	void ReceiveOverrideWith(struct APlayerState* OldPlayerState); // Function Engine.PlayerState.ReceiveOverrideWith // (Event|Protected|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void ReceiveCopyProperties(struct APlayerState* NewPlayerState); // Function Engine.PlayerState.ReceiveCopyProperties // (Event|Protected|BlueprintEvent) // Param Size : 0x8, 0x7FF653FAFDF0
	void OnRep_UniqueId(); // Function Engine.PlayerState.OnRep_UniqueId // (Native|Public) // Param Size : 0x0, 0x7FF65320BC00
	void OnRep_Score(); // Function Engine.PlayerState.OnRep_Score // (Native|Public) // Param Size : 0x0, 0x7FF6556FB1C0
	void OnRep_PlayerName(); // Function Engine.PlayerState.OnRep_PlayerName // (Native|Public) // Param Size : 0x0, 0x7FF6556F0750
	void OnRep_PlayerId(); // Function Engine.PlayerState.OnRep_PlayerId // (Native|Public) // Param Size : 0x0, 0x7FF655793F10
	void OnRep_bIsInactive(); // Function Engine.PlayerState.OnRep_bIsInactive // (Native|Public) // Param Size : 0x0, 0x7FF655794230
	struct FString GetPlayerName(); // Function Engine.PlayerState.GetPlayerName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557C66B0
};

// Class Engine.PluginCommandlet
// Size : 0xA0 (Inherited : 0x80)
struct UPluginCommandlet : UCommandlet {
	unsigned char UnknownData_80[0x0020]; // 0x80(0x20)
};

// Class Engine.PointLight
// Size : 0x238 (Inherited : 0x230)
struct APointLight : ALight {
	struct UPointLightComponent* PointLightComponent; // 0x230(0x8)

	void SetRadius(float NewRadius); // Function Engine.PointLight.SetRadius // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C9FE0
	void SetLightFalloffExponent(float NewLightFalloffExponent); // Function Engine.PointLight.SetLightFalloffExponent // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C9160
};

// Class Engine.PointLightComponent
// Size : 0x350 (Inherited : 0x340)
struct UPointLightComponent : ULocalLightComponent {
	unsigned char bUseInverseSquaredFalloff : 1; // 0x338(0x1)
	float LightFalloffExponent; // 0x33C(0x4)
	float SourceRadius; // 0x340(0x4)
	float SoftSourceRadius; // 0x344(0x4)
	float SourceLength; // 0x348(0x4)

	void SetSourceRadius(float bNewValue); // Function Engine.PointLightComponent.SetSourceRadius // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557CA4C0
	void SetSourceLength(float NewValue); // Function Engine.PointLightComponent.SetSourceLength // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557CA440
	void SetSoftSourceRadius(float bNewValue); // Function Engine.PointLightComponent.SetSoftSourceRadius // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557CA3C0
	void SetLightFalloffExponent(float NewLightFalloffExponent); // Function Engine.PointLightComponent.SetLightFalloffExponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C91E0
};

// Class Engine.Polys
// Size : 0x38 (Inherited : 0x28)
struct UPolys : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
};

// Class Engine.PoseableMeshComponent
// Size : 0x7A0 (Inherited : 0x640)
struct UPoseableMeshComponent : USkinnedMeshComponent {
	unsigned char UnknownData_640[0x0160]; // 0x640(0x160)

	void SetBoneTransformByName(struct FName BoneName, struct FTransform InTransform, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.SetBoneTransformByName // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x41, 0x7FF6557C83A0
	void SetBoneScaleByName(struct FName BoneName, struct FVector InScale3D, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.SetBoneScaleByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C8290
	void SetBoneRotationByName(struct FName BoneName, struct FRotator InRotation, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.SetBoneRotationByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C8180
	void SetBoneLocationByName(struct FName BoneName, struct FVector InLocation, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.SetBoneLocationByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x15, 0x7FF6557C8070
	void ResetBoneTransformByName(struct FName BoneName); // Function Engine.PoseableMeshComponent.ResetBoneTransformByName // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557C7A30
	struct FTransform GetBoneTransformByName(struct FName BoneName, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.GetBoneTransformByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x40, 0x7FF6557C5A80
	struct FVector GetBoneScaleByName(struct FName BoneName, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.GetBoneScaleByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C59B0
	struct FRotator GetBoneRotationByName(struct FName BoneName, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.GetBoneRotationByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C58E0
	struct FVector GetBoneLocationByName(struct FName BoneName, enum class EBoneSpaces BoneSpace); // Function Engine.PoseableMeshComponent.GetBoneLocationByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557C5810
	void CopyPoseFromSkeletalComponent(struct USkeletalMeshComponent* InComponentToCopy); // Function Engine.PoseableMeshComponent.CopyPoseFromSkeletalComponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557C54D0
};

// Class Engine.PoseAsset
// Size : 0x120 (Inherited : 0x80)
struct UPoseAsset : UAnimationAsset {
	struct FPoseDataContainer PoseContainer; // 0x80(0x90)
	bool bAdditivePose; // 0x110(0x1)
	unsigned char UnknownData_111[0x0003]; // 0x111(0x3)
	int32_t BasePoseIndex; // 0x114(0x4)
	struct FName RetargetSource; // 0x118(0x8)
};

// Class Engine.PoseWatch
// Size : 0x38 (Inherited : 0x28)
struct UPoseWatch : UObject {
	struct UEdGraphNode* Node; // 0x28(0x8)
	struct FColor PoseWatchColour; // 0x30(0x4)
	unsigned char UnknownData_34[0x0004]; // 0x34(0x4)
};

// Class Engine.PostProcessComponent
// Size : 0x770 (Inherited : 0x1F0)
struct UPostProcessComponent : USceneComponent {
	unsigned char UnknownData_1F0[0x0010]; // 0x1F0(0x10)
	struct FPostProcessSettings Settings; // 0x200(0x560)
	float Priority; // 0x760(0x4)
	float BlendRadius; // 0x764(0x4)
	float BlendWeight; // 0x768(0x4)
	unsigned char bEnabled : 1; // 0x76C(0x1)
	unsigned char bUnbound : 1; // 0x76C(0x1)
	unsigned char UnknownData_76C_2 : 6; // 0x76C(0x1)
	unsigned char UnknownData_76D[0x0003]; // 0x76D(0x3)

	void AddOrUpdateBlendable(struct TScriptInterface<None> InBlendableObject, float InWeight); // Function Engine.PostProcessComponent.AddOrUpdateBlendable // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6557C4BE0
};

// Class Engine.PostProcessVolume
// Size : 0x7D0 (Inherited : 0x258)
struct APostProcessVolume : AVolume {
	unsigned char UnknownData_258[0x0008]; // 0x258(0x8)
	struct FPostProcessSettings Settings; // 0x260(0x560)
	float Priority; // 0x7C0(0x4)
	float BlendRadius; // 0x7C4(0x4)
	float BlendWeight; // 0x7C8(0x4)
	unsigned char bEnabled : 1; // 0x7CC(0x1)
	unsigned char bUnbound : 1; // 0x7CC(0x1)
	unsigned char UnknownData_7CC_2 : 6; // 0x7CC(0x1)
	unsigned char UnknownData_7CD[0x0003]; // 0x7CD(0x3)

	void AddOrUpdateBlendable(struct TScriptInterface<None> InBlendableObject, float InWeight); // Function Engine.PostProcessVolume.AddOrUpdateBlendable // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6557C4AF0
};

// Class Engine.PrecomputedVisibilityOverrideVolume
// Size : 0x288 (Inherited : 0x258)
struct APrecomputedVisibilityOverrideVolume : AVolume {
	struct TArray<struct AActor*> OverrideVisibleActors; // 0x258(0x10)
	struct TArray<struct AActor*> OverrideInvisibleActors; // 0x268(0x10)
	struct TArray<struct FName> OverrideInvisibleLevels; // 0x278(0x10)
};

// Class Engine.PrecomputedVisibilityVolume
// Size : 0x258 (Inherited : 0x258)
struct APrecomputedVisibilityVolume : AVolume {
};

// Class Engine.PreviewCollectionInterface
// Size : 0x28 (Inherited : 0x28)
struct UPreviewCollectionInterface : UInterface {
};

// Class Engine.PreviewMeshCollection
// Size : 0x50 (Inherited : 0x30)
struct UPreviewMeshCollection : UDataAsset {
	unsigned char UnknownData_30[0x0008]; // 0x30(0x8)
	struct USkeleton* Skeleton; // 0x38(0x8)
	struct TArray<struct FPreviewMeshCollectionEntry> SkeletalMeshes; // 0x40(0x10)
};

// Class Engine.PrimaryAssetLabel
// Size : 0x68 (Inherited : 0x30)
struct UPrimaryAssetLabel : UPrimaryDataAsset {
	struct FPrimaryAssetRules Rules; // 0x30(0xC)
	unsigned char bLabelAssetsInMyDirectory : 1; // 0x3C(0x1)
	unsigned char bIsRuntimeLabel : 1; // 0x3C(0x1)
	unsigned char UnknownData_3C_2 : 6; // 0x3C(0x1)
	unsigned char UnknownData_3D[0x0003]; // 0x3D(0x3)
	struct TArray<struct TSoftObjectPtr<struct UObject>> ExplicitAssets; // 0x40(0x10)
	struct TArray<SoftClassProperty> ExplicitBlueprints; // 0x50(0x10)
	struct FCollectionReference AssetCollection; // 0x60(0x8)
};

// Class Engine.ProjectileMovementComponent
// Size : 0x1D0 (Inherited : 0xF0)
struct UProjectileMovementComponent : UMovementComponent {
	float InitialSpeed; // 0xF0(0x4)
	float MaxSpeed; // 0xF4(0x4)
	unsigned char bRotationFollowsVelocity : 1; // 0xF8(0x1)
	unsigned char bRotationRemainsVertical : 1; // 0xF8(0x1)
	unsigned char bShouldBounce : 1; // 0xF8(0x1)
	unsigned char bInitialVelocityInLocalSpace : 1; // 0xF8(0x1)
	unsigned char bForceSubStepping : 1; // 0xF8(0x1)
	unsigned char bSimulationEnabled : 1; // 0xF8(0x1)
	unsigned char bSweepCollision : 1; // 0xF8(0x1)
	unsigned char bIsHomingProjectile : 1; // 0xF8(0x1)
	unsigned char bBounceAngleAffectsFriction : 1; // 0xF9(0x1)
	unsigned char bIsSliding : 1; // 0xF9(0x1)
	unsigned char bInterpMovement : 1; // 0xF9(0x1)
	unsigned char bInterpRotation : 1; // 0xF9(0x1)
	unsigned char UnknownData_F9_4 : 4; // 0xF9(0x1)
	unsigned char UnknownData_FA[0x0002]; // 0xFA(0x2)
	float PreviousHitTime; // 0xFC(0x4)
	struct FVector PreviousHitNormal; // 0x100(0xC)
	float ProjectileGravityScale; // 0x10C(0x4)
	float Buoyancy; // 0x110(0x4)
	float Bounciness; // 0x114(0x4)
	float Friction; // 0x118(0x4)
	float BounceVelocityStopSimulatingThreshold; // 0x11C(0x4)
	float MinFrictionFraction; // 0x120(0x4)
	unsigned char UnknownData_124[0x0004]; // 0x124(0x4)
	struct FMulticastInlineDelegate OnProjectileBounce; // 0x128(0x10)
	struct FMulticastInlineDelegate OnProjectileStop; // 0x138(0x10)
	float HomingAccelerationMagnitude; // 0x148(0x4)
	struct FWeakObjectPtr<struct USceneComponent> HomingTargetComponent; // 0x14C(0x8)
	float MaxSimulationTimeStep; // 0x154(0x4)
	int32_t MaxSimulationIterations; // 0x158(0x4)
	int32_t BounceAdditionalIterations; // 0x15C(0x4)
	float InterpLocationTime; // 0x160(0x4)
	float InterpRotationTime; // 0x164(0x4)
	float InterpLocationMaxLagDistance; // 0x168(0x4)
	float InterpLocationSnapToTargetDistance; // 0x16C(0x4)
	unsigned char UnknownData_170[0x0060]; // 0x170(0x60)

	void StopSimulating(struct FHitResult HitResult); // Function Engine.ProjectileMovementComponent.StopSimulating // (Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x88, 0x7FF6557CC910
	void SetVelocityInLocalSpace(struct FVector NewVelocity); // Function Engine.ProjectileMovementComponent.SetVelocityInLocalSpace // (Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xC, 0x7FF6557CC880
	void SetInterpolatedComponent(struct USceneComponent* Component); // Function Engine.ProjectileMovementComponent.SetInterpolatedComponent // (Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557CC6F0
	void ResetInterpolation(); // Function Engine.ProjectileMovementComponent.ResetInterpolation // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557CC5D0
	void OnProjectileStopDelegate__DelegateSignature(struct FHitResult ImpactResult); // DelegateFunction Engine.ProjectileMovementComponent.OnProjectileStopDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // Param Size : 0x88, 0x7FF653FAFDF0
	void OnProjectileBounceDelegate__DelegateSignature(struct FHitResult ImpactResult, struct FVector ImpactVelocity); // DelegateFunction Engine.ProjectileMovementComponent.OnProjectileBounceDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // Param Size : 0x94, 0x7FF653FAFDF0
	void MoveInterpolationTarget(struct FVector NewLocation, struct FRotator NewRotation); // Function Engine.ProjectileMovementComponent.MoveInterpolationTarget // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x18, 0x7FF6557CC460
	struct FVector LimitVelocity(struct FVector NewVelocity); // Function Engine.ProjectileMovementComponent.LimitVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x18, 0x7FF6557CC3B0
	bool IsVelocityUnderSimulationThreshold(); // Function Engine.ProjectileMovementComponent.IsVelocityUnderSimulationThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557CC350
	bool IsInterpolationComplete(); // Function Engine.ProjectileMovementComponent.IsInterpolationComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557CC320
};

// Class Engine.ProxyLODMeshSimplificationSettings
// Size : 0x40 (Inherited : 0x38)
struct UProxyLODMeshSimplificationSettings : UDeveloperSettings {
	struct FName ProxyLODMeshReductionModuleName; // 0x38(0x8)
};

// Class Engine.RadialForceActor
// Size : 0x228 (Inherited : 0x220)
struct ARadialForceActor : ARigidBodyBase {
	struct URadialForceComponent* ForceComponent; // 0x220(0x8)

	void ToggleForce(); // Function Engine.RadialForceActor.ToggleForce // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655793F10
	void FireImpulse(); // Function Engine.RadialForceActor.FireImpulse // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556FB1C0
	void EnableForce(); // Function Engine.RadialForceActor.EnableForce // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6556F0750
	void DisableForce(); // Function Engine.RadialForceActor.DisableForce // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655794230
};

// Class Engine.RadialForceComponent
// Size : 0x220 (Inherited : 0x1F0)
struct URadialForceComponent : USceneComponent {
	float Radius; // 0x1F0(0x4)
	enum class ERadialImpulseFalloff Falloff; // 0x1F4(0x1)
	unsigned char UnknownData_1F5[0x0003]; // 0x1F5(0x3)
	float ImpulseStrength; // 0x1F8(0x4)
	unsigned char bImpulseVelChange : 1; // 0x1FC(0x1)
	unsigned char bIgnoreOwningActor : 1; // 0x1FC(0x1)
	unsigned char UnknownData_1FC_2 : 6; // 0x1FC(0x1)
	unsigned char UnknownData_1FD[0x0003]; // 0x1FD(0x3)
	float ForceStrength; // 0x200(0x4)
	float DestructibleDamage; // 0x204(0x4)
	struct TArray<enum class EObjectTypeQuery> ObjectTypesToAffect; // 0x208(0x10)
	unsigned char UnknownData_218[0x0008]; // 0x218(0x8)

	void RemoveObjectTypeToAffect(enum class EObjectTypeQuery ObjectType); // Function Engine.RadialForceComponent.RemoveObjectTypeToAffect // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CC550
	void FireImpulse(); // Function Engine.RadialForceComponent.FireImpulse // (Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557CC300
	void AddObjectTypeToAffect(enum class EObjectTypeQuery ObjectType); // Function Engine.RadialForceComponent.AddObjectTypeToAffect // (Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557CC280
};

// Class Engine.RectLight
// Size : 0x238 (Inherited : 0x230)
struct ARectLight : ALight {
	struct URectLightComponent* RectLightComponent; // 0x230(0x8)
};

// Class Engine.RectLightComponent
// Size : 0x360 (Inherited : 0x340)
struct URectLightComponent : ULocalLightComponent {
	float SourceWidth; // 0x338(0x4)
	float SourceHeight; // 0x33C(0x4)
	float BarnDoorAngle; // 0x340(0x4)
	float BarnDoorLength; // 0x344(0x4)
	struct UTexture* SourceTexture; // 0x348(0x8)
	unsigned char UnknownData_358[0x0008]; // 0x358(0x8)

	void SetSourceWidth(float bNewValue); // Function Engine.RectLightComponent.SetSourceWidth // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557CC800
	void SetSourceTexture(struct UTexture* bNewValue); // Function Engine.RectLightComponent.SetSourceTexture // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557CC780
	void SetSourceHeight(float NewValue); // Function Engine.RectLightComponent.SetSourceHeight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557C91E0
	void SetBarnDoorLength(float NewValue); // Function Engine.RectLightComponent.SetBarnDoorLength // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557CC670
	void SetBarnDoorAngle(float NewValue); // Function Engine.RectLightComponent.SetBarnDoorAngle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557CC5F0
};

// Class Engine.RendererSettings
// Size : 0xF0 (Inherited : 0x38)
struct URendererSettings : UDeveloperSettings {
	unsigned char bMobileDisableVertexFog : 1; // 0x38(0x1)
	unsigned char UnknownData_38_1 : 7; // 0x38(0x1)
	unsigned char UnknownData_39[0x0003]; // 0x39(0x3)
	int32_t MaxMobileCascades; // 0x3C(0x4)
	enum class EMobileMSAASampleCount MobileMSAASampleCount; // 0x40(0x1)
	unsigned char UnknownData_41[0x0003]; // 0x41(0x3)
	unsigned char bMobileUseLegacyShadingModel : 1; // 0x44(0x1)
	unsigned char bMobileAllowDitheredLODTransition : 1; // 0x44(0x1)
	unsigned char bMobileAllowSoftwareOcclusionCulling : 1; // 0x44(0x1)
	unsigned char bMobileVirtualTextures : 1; // 0x44(0x1)
	unsigned char bDiscardUnusedQualityLevels : 1; // 0x44(0x1)
	unsigned char bOcclusionCulling : 1; // 0x44(0x1)
	unsigned char UnknownData_44_6 : 2; // 0x44(0x1)
	unsigned char UnknownData_45[0x0003]; // 0x45(0x3)
	float MinScreenRadiusForLights; // 0x48(0x4)
	float MinScreenRadiusForEarlyZPass; // 0x4C(0x4)
	float MinScreenRadiusForCSMdepth; // 0x50(0x4)
	unsigned char bPrecomputedVisibilityWarning : 1; // 0x54(0x1)
	unsigned char bTextureStreaming : 1; // 0x54(0x1)
	unsigned char bUseDXT5NormalMaps : 1; // 0x54(0x1)
	unsigned char bVirtualTextures : 1; // 0x54(0x1)
	unsigned char bVirtualTexturedLightmaps : 1; // 0x54(0x1)
	unsigned char UnknownData_54_5 : 3; // 0x54(0x1)
	unsigned char UnknownData_55[0x0003]; // 0x55(0x3)
	uint32_t VirtualTextureTileSize; // 0x58(0x4)
	uint32_t VirtualTextureTileBorderSize; // 0x5C(0x4)
	uint32_t VirtualTextureFeedbackFactor; // 0x60(0x4)
	unsigned char bVirtualTextureEnableCompressZlib : 1; // 0x64(0x1)
	unsigned char bVirtualTextureEnableCompressCrunch : 1; // 0x64(0x1)
	unsigned char bClearCoatEnableSecondNormal : 1; // 0x64(0x1)
	unsigned char bAnisotropicBRDF : 1; // 0x64(0x1)
	unsigned char UnknownData_64_4 : 4; // 0x64(0x1)
	unsigned char UnknownData_65[0x0003]; // 0x65(0x3)
	int32_t ReflectionCaptureResolution; // 0x68(0x4)
	unsigned char ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // 0x6C(0x1)
	unsigned char bForwardShading : 1; // 0x6C(0x1)
	unsigned char bVertexFoggingForOpaque : 1; // 0x6C(0x1)
	unsigned char bAllowStaticLighting : 1; // 0x6C(0x1)
	unsigned char bUseNormalMapsForStaticLighting : 1; // 0x6C(0x1)
	unsigned char bGenerateMeshDistanceFields : 1; // 0x6C(0x1)
	unsigned char bEightBitMeshDistanceFields : 1; // 0x6C(0x1)
	unsigned char bGenerateLandscapeGIData : 1; // 0x6C(0x1)
	unsigned char bCompressMeshDistanceFields : 1; // 0x6D(0x1)
	unsigned char UnknownData_6D_1 : 7; // 0x6D(0x1)
	unsigned char UnknownData_6E[0x0002]; // 0x6E(0x2)
	float TessellationAdaptivePixelsPerTriangle; // 0x70(0x4)
	unsigned char bSeparateTranslucency : 1; // 0x74(0x1)
	unsigned char UnknownData_74_1 : 7; // 0x74(0x1)
	unsigned char UnknownData_75[0x0003]; // 0x75(0x3)
	enum class ETranslucentSortPolicy TranslucentSortPolicy; // 0x78(0x1)
	unsigned char UnknownData_79[0x0003]; // 0x79(0x3)
	struct FVector TranslucentSortAxis; // 0x7C(0xC)
	enum class ECustomDepthStencil CustomDepthStencil; // 0x88(0x1)
	unsigned char UnknownData_89[0x0003]; // 0x89(0x3)
	unsigned char bCustomDepthTaaJitter : 1; // 0x8C(0x1)
	unsigned char UnknownData_8C_1 : 7; // 0x8C(0x1)
	unsigned char UnknownData_8D[0x0003]; // 0x8D(0x3)
	enum class EAlphaChannelMode bEnableAlphaChannelInPostProcessing; // 0x90(0x1)
	unsigned char UnknownData_91[0x0003]; // 0x91(0x3)
	unsigned char bDefaultFeatureBloom : 1; // 0x94(0x1)
	unsigned char bDefaultFeatureAmbientOcclusion : 1; // 0x94(0x1)
	unsigned char bDefaultFeatureAmbientOcclusionStaticFraction : 1; // 0x94(0x1)
	unsigned char bDefaultFeatureAutoExposure : 1; // 0x94(0x1)
	unsigned char UnknownData_94_4 : 4; // 0x94(0x1)
	unsigned char UnknownData_95[0x0003]; // 0x95(0x3)
	enum class EAutoExposureMethodUI DefaultFeatureAutoExposure; // 0x98(0x1)
	unsigned char UnknownData_99[0x0003]; // 0x99(0x3)
	float DefaultFeatureAutoExposureBias; // 0x9C(0x4)
	unsigned char bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // 0xA0(0x1)
	unsigned char bUsePreExposure : 1; // 0xA0(0x1)
	unsigned char bEnablePreExposureOnlyInTheEditor : 1; // 0xA0(0x1)
	unsigned char bDefaultFeatureMotionBlur : 1; // 0xA0(0x1)
	unsigned char bDefaultFeatureLensFlare : 1; // 0xA0(0x1)
	unsigned char bTemporalUpsampling : 1; // 0xA0(0x1)
	unsigned char bSSGI : 1; // 0xA0(0x1)
	unsigned char UnknownData_A1[0x0003]; // 0xA1(0x3)
	enum class EAntiAliasingMethod DefaultFeatureAntiAliasing; // 0xA4(0x1)
	enum class ELightUnits DefaultLightUnits; // 0xA5(0x1)
	enum class EDefaultBackBufferPixelFormat DefaultBackBufferPixelFormat; // 0xA6(0x1)
	unsigned char UnknownData_A7[0x0001]; // 0xA7(0x1)
	unsigned char bRenderUnbuiltPreviewShadowsInGame : 1; // 0xA8(0x1)
	unsigned char bStencilForLODDither : 1; // 0xA8(0x1)
	unsigned char UnknownData_A8_2 : 6; // 0xA8(0x1)
	unsigned char UnknownData_A9[0x0003]; // 0xA9(0x3)
	enum class EEarlyZPass EarlyZPass; // 0xAC(0x1)
	unsigned char UnknownData_AD[0x0003]; // 0xAD(0x3)
	unsigned char bEarlyZPassOnlyMaterialMasking : 1; // 0xB0(0x1)
	unsigned char bDBuffer : 1; // 0xB0(0x1)
	unsigned char UnknownData_B0_2 : 6; // 0xB0(0x1)
	unsigned char UnknownData_B1[0x0003]; // 0xB1(0x3)
	enum class EClearSceneOptions ClearSceneMethod; // 0xB4(0x1)
	unsigned char UnknownData_B5[0x0003]; // 0xB5(0x3)
	unsigned char bBasePassOutputsVelocity : 1; // 0xB8(0x1)
	unsigned char bVertexDeformationOutputsVelocity : 1; // 0xB8(0x1)
	unsigned char bSelectiveBasePassOutputs : 1; // 0xB8(0x1)
	unsigned char bDefaultParticleCutouts : 1; // 0xB8(0x1)
	unsigned char UnknownData_B8_4 : 4; // 0xB8(0x1)
	unsigned char UnknownData_B9[0x0003]; // 0xB9(0x3)
	int32_t GPUSimulationTextureSizeX; // 0xBC(0x4)
	int32_t GPUSimulationTextureSizeY; // 0xC0(0x4)
	unsigned char bGlobalClipPlane : 1; // 0xC4(0x1)
	unsigned char UnknownData_C4_1 : 7; // 0xC4(0x1)
	unsigned char UnknownData_C5[0x0003]; // 0xC5(0x3)
	enum class EGBufferFormat GBufferFormat; // 0xC8(0x1)
	unsigned char UnknownData_C9[0x0003]; // 0xC9(0x3)
	unsigned char bUseGPUMorphTargets : 1; // 0xCC(0x1)
	unsigned char bNvidiaAftermathEnabled : 1; // 0xCC(0x1)
	unsigned char bMultiView : 1; // 0xCC(0x1)
	unsigned char bMobilePostProcessing : 1; // 0xCC(0x1)
	unsigned char bMobileMultiView : 1; // 0xCC(0x1)
	unsigned char bMobileUseHWsRGBEncoding : 1; // 0xCC(0x1)
	unsigned char bRoundRobinOcclusion : 1; // 0xCC(0x1)
	unsigned char bODSCapture : 1; // 0xCC(0x1)
	unsigned char bMeshStreaming : 1; // 0xCD(0x1)
	unsigned char UnknownData_CD_1 : 7; // 0xCD(0x1)
	unsigned char UnknownData_CE[0x0002]; // 0xCE(0x2)
	float WireframeCullThreshold; // 0xD0(0x4)
	unsigned char bEnableRayTracing : 1; // 0xD4(0x1)
	unsigned char bEnableRayTracingTextureLOD : 1; // 0xD4(0x1)
	unsigned char bSupportStationarySkylight : 1; // 0xD4(0x1)
	unsigned char bSupportLowQualityLightmaps : 1; // 0xD4(0x1)
	unsigned char bSupportPointLightWholeSceneShadows : 1; // 0xD4(0x1)
	unsigned char bSupportAtmosphericFog : 1; // 0xD4(0x1)
	unsigned char bSupportSkyAtmosphere : 1; // 0xD4(0x1)
	unsigned char bSupportSkyAtmosphereAffectsHeightFog : 1; // 0xD4(0x1)
	unsigned char bSupportSkinCacheShaders : 1; // 0xD5(0x1)
	unsigned char UnknownData_D5_1 : 7; // 0xD5(0x1)
	unsigned char UnknownData_D6[0x0002]; // 0xD6(0x2)
	enum class ESkinCacheDefaultBehavior DefaultSkinCacheBehavior; // 0xD8(0x1)
	unsigned char UnknownData_D9[0x0003]; // 0xD9(0x3)
	float SkinCacheSceneMemoryLimitInMB; // 0xDC(0x4)
	unsigned char bMobileEnableStaticAndCSMShadowReceivers : 1; // 0xE0(0x1)
	unsigned char bMobileEnableMovableLightCSMShaderCulling : 1; // 0xE0(0x1)
	unsigned char bMobileAllowDistanceFieldShadows : 1; // 0xE0(0x1)
	unsigned char bMobileAllowMovableDirectionalLights : 1; // 0xE0(0x1)
	unsigned char UnknownData_E0_4 : 4; // 0xE0(0x1)
	unsigned char UnknownData_E1[0x0003]; // 0xE1(0x3)
	uint32_t MobileNumDynamicPointLights; // 0xE4(0x4)
	unsigned char bMobileDynamicPointLightsUseStaticBranch : 1; // 0xE8(0x1)
	unsigned char bMobileAllowMovableSpotlights : 1; // 0xE8(0x1)
	unsigned char bSupport16BitBoneIndex : 1; // 0xE8(0x1)
	unsigned char bGPUSkinLimit2BoneInfluences : 1; // 0xE8(0x1)
	unsigned char bSupportDepthOnlyIndexBuffers : 1; // 0xE8(0x1)
	unsigned char bSupportReversedIndexBuffers : 1; // 0xE8(0x1)
	unsigned char bSupportMaterialLayers : 1; // 0xE8(0x1)
	unsigned char bLPV : 1; // 0xE8(0x1)
	unsigned char UnknownData_E9[0x0007]; // 0xE9(0x7)
};

// Class Engine.RendererOverrideSettings
// Size : 0x40 (Inherited : 0x38)
struct URendererOverrideSettings : UDeveloperSettings {
	unsigned char bSupportAllShaderPermutations : 1; // 0x38(0x1)
	unsigned char bForceRecomputeTangents : 1; // 0x38(0x1)
	unsigned char UnknownData_38_2 : 6; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
};

// Class Engine.ReplicationDriver
// Size : 0x28 (Inherited : 0x28)
struct UReplicationDriver : UObject {
};

// Class Engine.ReplicationConnectionDriver
// Size : 0x28 (Inherited : 0x28)
struct UReplicationConnectionDriver : UObject {
};

// Class Engine.ReporterBase
// Size : 0x30 (Inherited : 0x28)
struct UReporterBase : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
};

// Class Engine.ReporterGraph
// Size : 0xA8 (Inherited : 0x30)
struct UReporterGraph : UReporterBase {
	unsigned char UnknownData_30[0x0078]; // 0x30(0x78)
};

// Class Engine.ReverbEffect
// Size : 0x58 (Inherited : 0x28)
struct UReverbEffect : UObject {
	float Density; // 0x28(0x4)
	float Diffusion; // 0x2C(0x4)
	float Gain; // 0x30(0x4)
	float GainHF; // 0x34(0x4)
	float DecayTime; // 0x38(0x4)
	float DecayHFRatio; // 0x3C(0x4)
	float ReflectionsGain; // 0x40(0x4)
	float ReflectionsDelay; // 0x44(0x4)
	float LateGain; // 0x48(0x4)
	float LateDelay; // 0x4C(0x4)
	float AirAbsorptionGainHF; // 0x50(0x4)
	float RoomRolloffFactor; // 0x54(0x4)
};

// Class Engine.Rig
// Size : 0x50 (Inherited : 0x28)
struct URig : UObject {
	unsigned char UnknownData_28[0x0008]; // 0x28(0x8)
	struct TArray<struct FTransformBase> TransformBases; // 0x30(0x10)
	struct TArray<struct FNode> Nodes; // 0x40(0x10)
};

// Class Engine.RotatingMovementComponent
// Size : 0x110 (Inherited : 0xF0)
struct URotatingMovementComponent : UMovementComponent {
	struct FRotator RotationRate; // 0xF0(0xC)
	struct FVector PivotTranslation; // 0xFC(0xC)
	unsigned char bRotationInLocalSpace : 1; // 0x108(0x1)
	unsigned char UnknownData_108_1 : 7; // 0x108(0x1)
	unsigned char UnknownData_109[0x0007]; // 0x109(0x7)
};

// Class Engine.RuntimeOptionsBase
// Size : 0x38 (Inherited : 0x28)
struct URuntimeOptionsBase : UObject {
	unsigned char UnknownData_28[0x0010]; // 0x28(0x10)
};

// Class Engine.RuntimeVirtualTexture
// Size : 0xA0 (Inherited : 0x28)
struct URuntimeVirtualTexture : UObject {
	enum class ERuntimeVirtualTextureMaterialType MaterialType; // 0x28(0x1)
	bool bCompressTextures; // 0x29(0x1)
	bool bEnable; // 0x2A(0x1)
	bool bClearTextures; // 0x2B(0x1)
	bool bSinglePhysicalSpace; // 0x2C(0x1)
	bool bPrivateSpace; // 0x2D(0x1)
	bool bEnableScalability; // 0x2E(0x1)
	unsigned char UnknownData_2F[0x0001]; // 0x2F(0x1)
	int32_t Size; // 0x30(0x4)
	int32_t TileCount; // 0x34(0x4)
	int32_t TileSize; // 0x38(0x4)
	int32_t TileBorderSize; // 0x3C(0x4)
	int32_t StreamLowMips; // 0x40(0x4)
	unsigned char UnknownData_44[0x0004]; // 0x44(0x4)
	struct URuntimeVirtualTextureStreamingProxy* StreamingTexture; // 0x48(0x8)
	bool bEnableCompressCrunch; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	int32_t RemoveLowMips; // 0x54(0x4)
	unsigned char UnknownData_58[0x0048]; // 0x58(0x48)

	int32_t GetTileSize(); // Function Engine.RuntimeVirtualTexture.GetTileSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557D20C0
	int32_t GetTileCount(); // Function Engine.RuntimeVirtualTexture.GetTileCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557D2080
	int32_t GetTileBorderSize(); // Function Engine.RuntimeVirtualTexture.GetTileBorderSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557D2040
	int32_t GetSize(); // Function Engine.RuntimeVirtualTexture.GetSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557D1FD0
};

// Class Engine.RuntimeVirtualTextureComponent
// Size : 0x210 (Inherited : 0x1F0)
struct URuntimeVirtualTextureComponent : USceneComponent {
	struct URuntimeVirtualTexture* VirtualTexture; // 0x1F0(0x8)
	bool bUseStreamingLowMipsInEditor; // 0x1F8(0x1)
	unsigned char UnknownData_1F9[0x0007]; // 0x1F9(0x7)
	struct AActor* BoundsSourceActor; // 0x200(0x8)
	unsigned char UnknownData_208[0x0008]; // 0x208(0x8)

	struct FTransform GetVirtualTextureTransform(); // Function Engine.RuntimeVirtualTextureComponent.GetVirtualTextureTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x30, 0x7FF6557D2110
};

// Class Engine.RuntimeVirtualTextureStreamingProxy
// Size : 0x100 (Inherited : 0xE8)
struct URuntimeVirtualTextureStreamingProxy : UTexture2D {
	struct FVirtualTextureBuildSettings Settings; // 0xE8(0xC)
	bool bSinglePhysicalSpace; // 0xF4(0x1)
	unsigned char UnknownData_F5[0x0003]; // 0xF5(0x3)
	uint32_t BuildHash; // 0xF8(0x4)
	unsigned char UnknownData_FC[0x0004]; // 0xFC(0x4)
};

// Class Engine.RuntimeVirtualTextureVolume
// Size : 0x228 (Inherited : 0x220)
struct ARuntimeVirtualTextureVolume : AActor {
	struct URuntimeVirtualTextureComponent* VirtualTextureComponent; // 0x220(0x8)
};

// Class Engine.RVOAvoidanceInterface
// Size : 0x28 (Inherited : 0x28)
struct URVOAvoidanceInterface : UInterface {
};

// Class Engine.Scene
// Size : 0x28 (Inherited : 0x28)
struct UScene : UObject {
};

// Class Engine.SceneCapture2D
// Size : 0x238 (Inherited : 0x230)
struct ASceneCapture2D : ASceneCapture {
	struct USceneCaptureComponent2D* CaptureComponent2D; // 0x230(0x8)

	void OnInterpToggle(bool bEnable); // Function Engine.SceneCapture2D.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557B1BB0
};

// Class Engine.SceneCaptureComponent2D
// Size : 0x8A0 (Inherited : 0x290)
struct USceneCaptureComponent2D : USceneCaptureComponent {
	enum class ECameraProjectionMode ProjectionType; // 0x288(0x1)
	float FOVAngle; // 0x28C(0x4)
	float OrthoWidth; // 0x290(0x4)
	struct UTextureRenderTarget2D* TextureTarget; // 0x298(0x8)
	enum class ESceneCaptureCompositeMode CompositeMode; // 0x2A0(0x1)
	unsigned char UnknownData_2A2[0x000E]; // 0x2A2(0xE)
	struct FPostProcessSettings PostProcessSettings; // 0x2B0(0x560)
	float PostProcessBlendWeight; // 0x810(0x4)
	unsigned char bOverride_CustomNearClippingPlane : 1; // 0x814(0x1)
	unsigned char UnknownData_814_1 : 7; // 0x814(0x1)
	unsigned char UnknownData_815[0x0003]; // 0x815(0x3)
	float CustomNearClippingPlane; // 0x818(0x4)
	bool bUseCustomProjectionMatrix; // 0x81C(0x1)
	unsigned char UnknownData_81D[0x0003]; // 0x81D(0x3)
	struct FMatrix CustomProjectionMatrix; // 0x820(0x40)
	bool bEnableClipPlane; // 0x860(0x1)
	unsigned char UnknownData_861[0x0003]; // 0x861(0x3)
	struct FVector ClipPlaneBase; // 0x864(0xC)
	struct FVector ClipPlaneNormal; // 0x870(0xC)
	unsigned char bCameraCutThisFrame : 1; // 0x87C(0x1)
	unsigned char bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // 0x87C(0x1)
	unsigned char UnknownData_87C_2 : 6; // 0x87C(0x1)
	unsigned char UnknownData_87D[0x0003]; // 0x87D(0x3)
	bool bDisableFlipCopyGLES; // 0x880(0x1)
	unsigned char UnknownData_881[0x001F]; // 0x881(0x1F)

	void CaptureScene(); // Function Engine.SceneCaptureComponent2D.CaptureScene // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557D45E0
	void AddOrUpdateBlendable(struct TScriptInterface<None> InBlendableObject, float InWeight); // Function Engine.SceneCaptureComponent2D.AddOrUpdateBlendable // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6557D4490
};

// Class Engine.SceneCaptureComponentCube
// Size : 0x2C0 (Inherited : 0x290)
struct USceneCaptureComponentCube : USceneCaptureComponent {
	struct UTextureRenderTargetCube* TextureTarget; // 0x288(0x8)
	bool bCaptureRotation; // 0x290(0x1)
	struct UTextureRenderTargetCube* TextureTargetLeft; // 0x298(0x8)
	struct UTextureRenderTargetCube* TextureTargetRight; // 0x2A0(0x8)
	struct UTextureRenderTarget2D* TextureTargetODS; // 0x2A8(0x8)
	float IPD; // 0x2B0(0x4)
	unsigned char UnknownData_2B5[0x000B]; // 0x2B5(0xB)

	void CaptureScene(); // Function Engine.SceneCaptureComponentCube.CaptureScene // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557D45E0
};

// Class Engine.SceneCaptureCube
// Size : 0x238 (Inherited : 0x230)
struct ASceneCaptureCube : ASceneCapture {
	struct USceneCaptureComponentCube* CaptureComponentCube; // 0x230(0x8)

	void OnInterpToggle(bool bEnable); // Function Engine.SceneCaptureCube.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557B1BB0
};

// Class Engine.SCS_Node
// Size : 0xD8 (Inherited : 0x28)
struct USCS_Node : UObject {
	class UObject* ComponentClass; // 0x28(0x8)
	struct UActorComponent* ComponentTemplate; // 0x30(0x8)
	struct FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x38(0x48)
	struct FName AttachToName; // 0x80(0x8)
	struct FName ParentComponentOrVariableName; // 0x88(0x8)
	struct FName ParentComponentOwnerClassName; // 0x90(0x8)
	bool bIsParentComponentNative; // 0x98(0x1)
	unsigned char UnknownData_99[0x0007]; // 0x99(0x7)
	struct TArray<struct USCS_Node*> ChildNodes; // 0xA0(0x10)
	struct TArray<struct FBPVariableMetaDataEntry> MetaDataArray; // 0xB0(0x10)
	struct FGuid VariableGuid; // 0xC0(0x10)
	struct FName InternalVariableName; // 0xD0(0x8)
};

// Class Engine.Selection
// Size : 0xA0 (Inherited : 0x28)
struct USelection : UObject {
	unsigned char UnknownData_28[0x0078]; // 0x28(0x78)
};

// Class Engine.ServerStatReplicator
// Size : 0x2E8 (Inherited : 0x220)
struct AServerStatReplicator : AInfo {
	bool bUpdateStatNet; // 0x220(0x1)
	bool bOverwriteClientStats; // 0x221(0x1)
	unsigned char UnknownData_222[0x0002]; // 0x222(0x2)
	uint32_t Channels; // 0x224(0x4)
	uint32_t InRate; // 0x228(0x4)
	uint32_t OutRate; // 0x22C(0x4)
	unsigned char UnknownData_230[0x0004]; // 0x230(0x4)
	uint32_t MaxPacketOverhead; // 0x234(0x4)
	uint32_t InRateClientMax; // 0x238(0x4)
	uint32_t InRateClientMin; // 0x23C(0x4)
	uint32_t InRateClientAvg; // 0x240(0x4)
	uint32_t InPacketsClientMax; // 0x244(0x4)
	uint32_t InPacketsClientMin; // 0x248(0x4)
	uint32_t InPacketsClientAvg; // 0x24C(0x4)
	uint32_t OutRateClientMax; // 0x250(0x4)
	uint32_t OutRateClientMin; // 0x254(0x4)
	uint32_t OutRateClientAvg; // 0x258(0x4)
	uint32_t OutPacketsClientMax; // 0x25C(0x4)
	uint32_t OutPacketsClientMin; // 0x260(0x4)
	uint32_t OutPacketsClientAvg; // 0x264(0x4)
	uint32_t NetNumClients; // 0x268(0x4)
	uint32_t InPackets; // 0x26C(0x4)
	uint32_t OutPackets; // 0x270(0x4)
	uint32_t InBunches; // 0x274(0x4)
	uint32_t OutBunches; // 0x278(0x4)
	uint32_t OutLoss; // 0x27C(0x4)
	uint32_t InLoss; // 0x280(0x4)
	uint32_t VoiceBytesSent; // 0x284(0x4)
	uint32_t VoiceBytesRecv; // 0x288(0x4)
	uint32_t VoicePacketsSent; // 0x28C(0x4)
	uint32_t VoicePacketsRecv; // 0x290(0x4)
	uint32_t PercentInVoice; // 0x294(0x4)
	uint32_t PercentOutVoice; // 0x298(0x4)
	uint32_t NumActorChannels; // 0x29C(0x4)
	uint32_t NumConsideredActors; // 0x2A0(0x4)
	uint32_t PrioritizedActors; // 0x2A4(0x4)
	uint32_t NumRelevantActors; // 0x2A8(0x4)
	uint32_t NumRelevantDeletedActors; // 0x2AC(0x4)
	uint32_t NumReplicatedActorAttempts; // 0x2B0(0x4)
	uint32_t NumReplicatedActors; // 0x2B4(0x4)
	uint32_t NumActors; // 0x2B8(0x4)
	uint32_t NumNetActors; // 0x2BC(0x4)
	uint32_t NumDormantActors; // 0x2C0(0x4)
	uint32_t NumInitiallyDormantActors; // 0x2C4(0x4)
	uint32_t NumNetGUIDsAckd; // 0x2C8(0x4)
	uint32_t NumNetGUIDsPending; // 0x2CC(0x4)
	uint32_t NumNetGUIDsUnAckd; // 0x2D0(0x4)
	uint32_t ObjPathBytes; // 0x2D4(0x4)
	uint32_t NetGUIDOutRate; // 0x2D8(0x4)
	uint32_t NetGUIDInRate; // 0x2DC(0x4)
	uint32_t NetSaturated; // 0x2E0(0x4)
	unsigned char UnknownData_2E4[0x0004]; // 0x2E4(0x4)
};

// Class Engine.ShadowMapTexture2D
// Size : 0xF0 (Inherited : 0xE8)
struct UShadowMapTexture2D : UTexture2D {
	enum class EShadowMapFlags ShadowmapFlags; // 0xE8(0x1)
	unsigned char UnknownData_E9[0x0007]; // 0xE9(0x7)
};

// Class Engine.SimpleConstructionScript
// Size : 0xA0 (Inherited : 0x28)
struct USimpleConstructionScript : UObject {
	struct TArray<struct USCS_Node*> RootNodes; // 0x28(0x10)
	struct TArray<struct USCS_Node*> AllNodes; // 0x38(0x10)
	struct USCS_Node* DefaultSceneRootNode; // 0x48(0x8)
	unsigned char UnknownData_50[0x0050]; // 0x50(0x50)
};

// Class Engine.SkeletalMeshActor
// Size : 0x2A8 (Inherited : 0x220)
struct ASkeletalMeshActor : AActor {
	unsigned char UnknownData_220[0x0008]; // 0x220(0x8)
	unsigned char bShouldDoAnimNotifies : 1; // 0x228(0x1)
	unsigned char bWakeOnLevelStart : 1; // 0x228(0x1)
	unsigned char UnknownData_228_2 : 6; // 0x228(0x1)
	unsigned char UnknownData_229[0x0007]; // 0x229(0x7)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x230(0x8)
	struct USkeletalMesh* ReplicatedMesh; // 0x238(0x8)
	struct UPhysicsAsset* ReplicatedPhysAsset; // 0x240(0x8)
	struct UMaterialInterface* ReplicatedMaterial0; // 0x248(0x8)
	struct UMaterialInterface* ReplicatedMaterial1; // 0x250(0x8)
	unsigned char UnknownData_258[0x0050]; // 0x258(0x50)

	void OnRep_ReplicatedPhysAsset(); // Function Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset // (Native|Public) // Param Size : 0x0, 0x7FF6556F0750
	void OnRep_ReplicatedMesh(); // Function Engine.SkeletalMeshActor.OnRep_ReplicatedMesh // (Native|Public) // Param Size : 0x0, 0x7FF6556FB1C0
	void OnRep_ReplicatedMaterial1(); // Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial1 // (Native|Public) // Param Size : 0x0, 0x7FF655793F10
	void OnRep_ReplicatedMaterial0(); // Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial0 // (Native|Public) // Param Size : 0x0, 0x7FF655794230
};

// Class Engine.SkeletalMeshEditorData
// Size : 0x28 (Inherited : 0x28)
struct USkeletalMeshEditorData : UObject {
};

// Class Engine.SkeletalMeshLODSettings
// Size : 0x50 (Inherited : 0x30)
struct USkeletalMeshLODSettings : UDataAsset {
	struct FPerPlatformInt MinLOD; // 0x30(0x4)
	struct FPerPlatformBool DisableBelowMinLodStripping; // 0x34(0x1)
	struct FPerPlatformBool bSupportLODStreaming; // 0x35(0x1)
	unsigned char UnknownData_36[0x0002]; // 0x36(0x2)
	struct FPerPlatformInt MaxNumStreamedLODs; // 0x38(0x4)
	struct FPerPlatformInt MaxNumOptionalLODs; // 0x3C(0x4)
	struct TArray<struct FSkeletalMeshLODGroupSettings> LODGroups; // 0x40(0x10)
};

// Class Engine.SkeletalMeshSimplificationSettings
// Size : 0x40 (Inherited : 0x38)
struct USkeletalMeshSimplificationSettings : UDeveloperSettings {
	struct FName SkeletalMeshReductionModuleName; // 0x38(0x8)
};

// Class Engine.SkeletalMeshSocket
// Size : 0x60 (Inherited : 0x28)
struct USkeletalMeshSocket : UObject {
	struct FName SocketName; // 0x28(0x8)
	struct FName BoneName; // 0x30(0x8)
	struct FVector RelativeLocation; // 0x38(0xC)
	struct FRotator RelativeRotation; // 0x44(0xC)
	struct FVector RelativeScale; // 0x50(0xC)
	bool bForceAlwaysAnimated; // 0x5C(0x1)
	unsigned char UnknownData_5D[0x0003]; // 0x5D(0x3)

	void InitializeSocketFromLocation(struct USkeletalMeshComponent* SkelComp, struct FVector WorldLocation, struct FVector WorldNormal); // Function Engine.SkeletalMeshSocket.InitializeSocketFromLocation // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x20, 0x7FF6557E4920
	struct FVector GetSocketLocation(struct USkeletalMeshComponent* SkelComp); // Function Engine.SkeletalMeshSocket.GetSocketLocation // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557E46A0
};

// Class Engine.SkyAtmosphereComponent
// Size : 0x2C0 (Inherited : 0x1F0)
struct USkyAtmosphereComponent : USceneComponent {
	enum class ESkyAtmosphereTransformMode TransformMode; // 0x1F0(0x1)
	unsigned char UnknownData_1F1[0x0003]; // 0x1F1(0x3)
	float BottomRadius; // 0x1F4(0x4)
	struct FColor GroundAlbedo; // 0x1F8(0x4)
	float AtmosphereHeight; // 0x1FC(0x4)
	float MultiScatteringFactor; // 0x200(0x4)
	float RayleighScatteringScale; // 0x204(0x4)
	struct FLinearColor RayleighScattering; // 0x208(0x10)
	float RayleighExponentialDistribution; // 0x218(0x4)
	float MieScatteringScale; // 0x21C(0x4)
	struct FLinearColor MieScattering; // 0x220(0x10)
	float MieAbsorptionScale; // 0x230(0x4)
	struct FLinearColor MieAbsorption; // 0x234(0x10)
	float MieAnisotropy; // 0x244(0x4)
	float MieExponentialDistribution; // 0x248(0x4)
	float OtherAbsorptionScale; // 0x24C(0x4)
	struct FLinearColor OtherAbsorption; // 0x250(0x10)
	struct FTentDistribution OtherTentDistribution; // 0x260(0xC)
	struct FLinearColor SkyLuminanceFactor; // 0x26C(0x10)
	float AerialPespectiveViewDistanceScale; // 0x27C(0x4)
	float HeightFogContribution; // 0x280(0x4)
	float TransmittanceMinLightElevationAngle; // 0x284(0x4)
	unsigned char UnknownData_288[0x0024]; // 0x288(0x24)
	struct FGuid bStaticLightingBuiltGUID; // 0x2AC(0x10)
	unsigned char UnknownData_2BC[0x0004]; // 0x2BC(0x4)

	void SetSkyLuminanceFactor(struct FLinearColor NewValue); // Function Engine.SkyAtmosphereComponent.SetSkyLuminanceFactor // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E91A0
	void SetRayleighScatteringScale(float NewValue); // Function Engine.SkyAtmosphereComponent.SetRayleighScatteringScale // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E9120
	void SetRayleighScattering(struct FLinearColor NewValue); // Function Engine.SkyAtmosphereComponent.SetRayleighScattering // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E90A0
	void SetRayleighExponentialDistribution(float NewValue); // Function Engine.SkyAtmosphereComponent.SetRayleighExponentialDistribution // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E9020
	void SetOtherAbsorptionScale(float NewValue); // Function Engine.SkyAtmosphereComponent.SetOtherAbsorptionScale // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8FA0
	void SetOtherAbsorption(struct FLinearColor NewValue); // Function Engine.SkyAtmosphereComponent.SetOtherAbsorption // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E8F20
	void SetMieScatteringScale(float NewValue); // Function Engine.SkyAtmosphereComponent.SetMieScatteringScale // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8C90
	void SetMieScattering(struct FLinearColor NewValue); // Function Engine.SkyAtmosphereComponent.SetMieScattering // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E8C10
	void SetMieExponentialDistribution(float NewValue); // Function Engine.SkyAtmosphereComponent.SetMieExponentialDistribution // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C170
	void SetMieAnisotropy(float NewValue); // Function Engine.SkyAtmosphereComponent.SetMieAnisotropy // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65577C0F0
	void SetMieAbsorptionScale(float NewValue); // Function Engine.SkyAtmosphereComponent.SetMieAbsorptionScale // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8B90
	void SetMieAbsorption(struct FLinearColor NewValue); // Function Engine.SkyAtmosphereComponent.SetMieAbsorption // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E8B10
	void SetHeightFogContribution(float NewValue); // Function Engine.SkyAtmosphereComponent.SetHeightFogContribution // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8880
	void SetAerialPespectiveViewDistanceScale(float NewValue); // Function Engine.SkyAtmosphereComponent.SetAerialPespectiveViewDistanceScale // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8670
	void OverrideAtmosphereLightDirection(int32_t AtmosphereLightIndex, struct FVector LightDirection); // Function Engine.SkyAtmosphereComponent.OverrideAtmosphereLightDirection // (Final|RequiredAPI|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E8580
};

// Class Engine.SkyAtmosphere
// Size : 0x228 (Inherited : 0x220)
struct ASkyAtmosphere : AInfo {
	struct USkyAtmosphereComponent* SkyAtmosphereComponent; // 0x220(0x8)
};

// Class Engine.SkyLightComponent
// Size : 0x3F0 (Inherited : 0x220)
struct USkyLightComponent : ULightComponentBase {
	enum class ESkyLightSourceType SourceType; // 0x220(0x1)
	unsigned char UnknownData_221[0x0007]; // 0x221(0x7)
	struct UTextureCube* Cubemap; // 0x228(0x8)
	float SourceCubemapAngle; // 0x230(0x4)
	int32_t CubemapResolution; // 0x234(0x4)
	float SkyDistanceThreshold; // 0x238(0x4)
	bool bCaptureEmissiveOnly; // 0x23C(0x1)
	bool bLowerHemisphereIsBlack; // 0x23D(0x1)
	unsigned char UnknownData_23E[0x0002]; // 0x23E(0x2)
	struct FLinearColor LowerHemisphereColor; // 0x240(0x10)
	float OcclusionMaxDistance; // 0x250(0x4)
	float Contrast; // 0x254(0x4)
	float OcclusionExponent; // 0x258(0x4)
	float MinOcclusion; // 0x25C(0x4)
	struct FColor OcclusionTint; // 0x260(0x4)
	enum class EOcclusionCombineMode OcclusionCombineMode; // 0x264(0x1)
	unsigned char UnknownData_265[0x00B3]; // 0x265(0xB3)
	struct UTextureCube* BlendDestinationCubemap; // 0x318(0x8)
	unsigned char UnknownData_320[0x00D0]; // 0x320(0xD0)

	void SetVolumetricScatteringIntensity(float NewIntensity); // Function Engine.SkyLightComponent.SetVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E9220
	void SetOcclusionTint(struct FColor InTint); // Function Engine.SkyLightComponent.SetOcclusionTint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8E90
	void SetOcclusionExponent(float InOcclusionExponent); // Function Engine.SkyLightComponent.SetOcclusionExponent // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8E10
	void SetOcclusionContrast(float InOcclusionContrast); // Function Engine.SkyLightComponent.SetOcclusionContrast // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8D90
	void SetMinOcclusion(float InMinOcclusion); // Function Engine.SkyLightComponent.SetMinOcclusion // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8D10
	void SetLowerHemisphereColor(struct FLinearColor InLowerHemisphereColor); // Function Engine.SkyLightComponent.SetLowerHemisphereColor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E8A80
	void SetLightColor(struct FLinearColor NewLightColor); // Function Engine.SkyLightComponent.SetLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x10, 0x7FF6557E8A00
	void SetIntensity(float NewIntensity); // Function Engine.SkyLightComponent.SetIntensity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8980
	void SetIndirectLightingIntensity(float NewIntensity); // Function Engine.SkyLightComponent.SetIndirectLightingIntensity // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557E8900
	void SetCubemapBlend(struct UTextureCube* SourceCubemap, struct UTextureCube* DestinationCubemap, float InBlendFraction); // Function Engine.SkyLightComponent.SetCubemapBlend // (Final|Native|Public|BlueprintCallable) // Param Size : 0x14, 0x7FF6557E8770
	void SetCubemap(struct UTextureCube* NewCubemap); // Function Engine.SkyLightComponent.SetCubemap // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557E86F0
	void RecaptureSky(); // Function Engine.SkyLightComponent.RecaptureSky // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557E8650
};

// Class Engine.SlateBrushAsset
// Size : 0xB0 (Inherited : 0x28)
struct USlateBrushAsset : UObject {
	struct FSlateBrush Brush; // 0x28(0x88)
};

// Class Engine.SlateTextureAtlasInterface
// Size : 0x28 (Inherited : 0x28)
struct USlateTextureAtlasInterface : UInterface {
};

// Class Engine.SmokeTestCommandlet
// Size : 0x80 (Inherited : 0x80)
struct USmokeTestCommandlet : UCommandlet {
};

// Class Engine.SoundAttenuation
// Size : 0x3C8 (Inherited : 0x28)
struct USoundAttenuation : UObject {
	struct FSoundAttenuationSettings Attenuation; // 0x28(0x3A0)
};

// Class Engine.SoundClass
// Size : 0xB8 (Inherited : 0x28)
struct USoundClass : UObject {
	struct FSoundClassProperties Properties; // 0x28(0x58)
	struct TArray<struct USoundClass*> ChildClasses; // 0x80(0x10)
	struct TArray<struct FPassiveSoundMixModifier> PassiveSoundMixModifiers; // 0x90(0x10)
	struct FSoundModulation Modulation; // 0xA0(0x10)
	struct USoundClass* ParentClass; // 0xB0(0x8)
};

// Class Engine.SoundConcurrency
// Size : 0x48 (Inherited : 0x28)
struct USoundConcurrency : UObject {
	struct FSoundConcurrencySettings Concurrency; // 0x28(0x20)
};

// Class Engine.SoundCue
// Size : 0x538 (Inherited : 0x160)
struct USoundCue : USoundBase {
	unsigned char bPrimeOnLoad : 1; // 0x160(0x1)
	unsigned char UnknownData_160_1 : 7; // 0x160(0x1)
	unsigned char UnknownData_161[0x0007]; // 0x161(0x7)
	struct USoundNode* FirstNode; // 0x168(0x8)
	float VolumeMultiplier; // 0x170(0x4)
	float PitchMultiplier; // 0x174(0x4)
	struct FSoundAttenuationSettings AttenuationOverrides; // 0x178(0x3A0)
	float SubtitlePriority; // 0x518(0x4)
	unsigned char UnknownData_51C[0x0004]; // 0x51C(0x4)
	unsigned char bOverrideAttenuation : 1; // 0x520(0x1)
	unsigned char bExcludeFromRandomNodeBranchCulling : 1; // 0x520(0x1)
	unsigned char UnknownData_520_2 : 6; // 0x520(0x1)
	unsigned char UnknownData_521[0x0003]; // 0x521(0x3)
	int32_t CookedQualityIndex; // 0x524(0x4)
	unsigned char bHasPlayWhenSilent : 1; // 0x528(0x1)
	unsigned char UnknownData_528_1 : 7; // 0x528(0x1)
	unsigned char UnknownData_529[0x000F]; // 0x529(0xF)
};

// Class Engine.SoundEffectSourcePresetChain
// Size : 0x40 (Inherited : 0x28)
struct USoundEffectSourcePresetChain : UObject {
	struct TArray<struct FSourceEffectChainEntry> Chain; // 0x28(0x10)
	unsigned char bPlayEffectChainTails : 1; // 0x38(0x1)
	unsigned char UnknownData_38_1 : 7; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
};

// Class Engine.SoundGroups
// Size : 0x88 (Inherited : 0x28)
struct USoundGroups : UObject {
	struct TArray<struct FSoundGroup> SoundGroupProfiles; // 0x28(0x10)
	unsigned char UnknownData_38[0x0050]; // 0x38(0x50)
};

// Class Engine.SoundMix
// Size : 0x90 (Inherited : 0x28)
struct USoundMix : UObject {
	unsigned char bApplyEQ : 1; // 0x28(0x1)
	unsigned char UnknownData_28_1 : 7; // 0x28(0x1)
	unsigned char UnknownData_29[0x0003]; // 0x29(0x3)
	float EQPriority; // 0x2C(0x4)
	struct FAudioEQEffect EQSettings; // 0x30(0x40)
	struct TArray<struct FSoundClassAdjuster> SoundClassEffects; // 0x70(0x10)
	float InitialDelay; // 0x80(0x4)
	float FadeInTime; // 0x84(0x4)
	float Duration; // 0x88(0x4)
	float FadeOutTime; // 0x8C(0x4)
};

// Class Engine.SoundNode
// Size : 0x48 (Inherited : 0x28)
struct USoundNode : UObject {
	struct TArray<struct USoundNode*> ChildNodes; // 0x28(0x10)
	unsigned char UnknownData_38[0x0010]; // 0x38(0x10)
};

// Class Engine.SoundNodeAssetReferencer
// Size : 0x48 (Inherited : 0x48)
struct USoundNodeAssetReferencer : USoundNode {
};

// Class Engine.SoundNodeAttenuation
// Size : 0x3F8 (Inherited : 0x48)
struct USoundNodeAttenuation : USoundNode {
	struct USoundAttenuation* AttenuationSettings; // 0x48(0x8)
	struct FSoundAttenuationSettings AttenuationOverrides; // 0x50(0x3A0)
	unsigned char bOverrideAttenuation : 1; // 0x3F0(0x1)
	unsigned char UnknownData_3F0_1 : 7; // 0x3F0(0x1)
	unsigned char UnknownData_3F1[0x0007]; // 0x3F1(0x7)
};

// Class Engine.SoundNodeBranch
// Size : 0x50 (Inherited : 0x48)
struct USoundNodeBranch : USoundNode {
	struct FName BoolParameterName; // 0x48(0x8)
};

// Class Engine.SoundNodeConcatenator
// Size : 0x58 (Inherited : 0x48)
struct USoundNodeConcatenator : USoundNode {
	struct TArray<float> InputVolume; // 0x48(0x10)
};

// Class Engine.SoundNodeDelay
// Size : 0x50 (Inherited : 0x48)
struct USoundNodeDelay : USoundNode {
	float DelayMin; // 0x48(0x4)
	float DelayMax; // 0x4C(0x4)
};

// Class Engine.SoundNodeDialoguePlayer
// Size : 0x70 (Inherited : 0x48)
struct USoundNodeDialoguePlayer : USoundNode {
	struct FDialogueWaveParameter DialogueWaveParameter; // 0x48(0x20)
	unsigned char bLooping : 1; // 0x68(0x1)
	unsigned char UnknownData_68_1 : 7; // 0x68(0x1)
	unsigned char UnknownData_69[0x0007]; // 0x69(0x7)
};

// Class Engine.SoundNodeDistanceCrossFade
// Size : 0x58 (Inherited : 0x48)
struct USoundNodeDistanceCrossFade : USoundNode {
	struct TArray<struct FDistanceDatum> CrossFadeInput; // 0x48(0x10)
};

// Class Engine.SoundNodeDoppler
// Size : 0x58 (Inherited : 0x48)
struct USoundNodeDoppler : USoundNode {
	float DopplerIntensity; // 0x48(0x4)
	bool bUseSmoothing; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
	float SmoothingInterpSpeed; // 0x50(0x4)
	unsigned char UnknownData_54[0x0004]; // 0x54(0x4)
};

// Class Engine.SoundNodeEnveloper
// Size : 0x190 (Inherited : 0x48)
struct USoundNodeEnveloper : USoundNode {
	float LoopStart; // 0x48(0x4)
	float LoopEnd; // 0x4C(0x4)
	float DurationAfterLoop; // 0x50(0x4)
	int32_t LoopCount; // 0x54(0x4)
	unsigned char bLoopIndefinitely : 1; // 0x58(0x1)
	unsigned char bLoop : 1; // 0x58(0x1)
	unsigned char UnknownData_58_2 : 6; // 0x58(0x1)
	unsigned char UnknownData_59[0x0007]; // 0x59(0x7)
	struct UDistributionFloatConstantCurve* VolumeInterpCurve; // 0x60(0x8)
	struct UDistributionFloatConstantCurve* PitchInterpCurve; // 0x68(0x8)
	struct FRuntimeFloatCurve VolumeCurve; // 0x70(0x88)
	struct FRuntimeFloatCurve PitchCurve; // 0xF8(0x88)
	float PitchMin; // 0x180(0x4)
	float PitchMax; // 0x184(0x4)
	float VolumeMin; // 0x188(0x4)
	float VolumeMax; // 0x18C(0x4)
};

// Class Engine.SoundNodeGroupControl
// Size : 0x58 (Inherited : 0x48)
struct USoundNodeGroupControl : USoundNode {
	struct TArray<int32_t> GroupSizes; // 0x48(0x10)
};

// Class Engine.SoundNodeLooping
// Size : 0x50 (Inherited : 0x48)
struct USoundNodeLooping : USoundNode {
	int32_t LoopCount; // 0x48(0x4)
	unsigned char bLoopIndefinitely : 1; // 0x4C(0x1)
	unsigned char UnknownData_4C_1 : 7; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
};

// Class Engine.SoundNodeMature
// Size : 0x48 (Inherited : 0x48)
struct USoundNodeMature : USoundNode {
};

// Class Engine.SoundNodeMixer
// Size : 0x58 (Inherited : 0x48)
struct USoundNodeMixer : USoundNode {
	struct TArray<float> InputVolume; // 0x48(0x10)
};

// Class Engine.SoundNodeModulator
// Size : 0x58 (Inherited : 0x48)
struct USoundNodeModulator : USoundNode {
	float PitchMin; // 0x48(0x4)
	float PitchMax; // 0x4C(0x4)
	float VolumeMin; // 0x50(0x4)
	float VolumeMax; // 0x54(0x4)
};

// Class Engine.SoundNodeModulatorContinuous
// Size : 0x88 (Inherited : 0x48)
struct USoundNodeModulatorContinuous : USoundNode {
	struct FModulatorContinuousParams PitchModulationParams; // 0x48(0x20)
	struct FModulatorContinuousParams VolumeModulationParams; // 0x68(0x20)
};

// Class Engine.SoundNodeOscillator
// Size : 0x70 (Inherited : 0x48)
struct USoundNodeOscillator : USoundNode {
	unsigned char bModulateVolume : 1; // 0x48(0x1)
	unsigned char bModulatePitch : 1; // 0x48(0x1)
	unsigned char UnknownData_48_2 : 6; // 0x48(0x1)
	unsigned char UnknownData_49[0x0003]; // 0x49(0x3)
	float AmplitudeMin; // 0x4C(0x4)
	float AmplitudeMax; // 0x50(0x4)
	float FrequencyMin; // 0x54(0x4)
	float FrequencyMax; // 0x58(0x4)
	float OffsetMin; // 0x5C(0x4)
	float OffsetMax; // 0x60(0x4)
	float CenterMin; // 0x64(0x4)
	float CenterMax; // 0x68(0x4)
	unsigned char UnknownData_6C[0x0004]; // 0x6C(0x4)
};

// Class Engine.SoundNodeParamCrossFade
// Size : 0x60 (Inherited : 0x58)
struct USoundNodeParamCrossFade : USoundNodeDistanceCrossFade {
	struct FName ParamName; // 0x58(0x8)
};

// Class Engine.SoundNodeQualityLevel
// Size : 0x48 (Inherited : 0x48)
struct USoundNodeQualityLevel : USoundNode {
};

// Class Engine.SoundNodeRandom
// Size : 0x78 (Inherited : 0x48)
struct USoundNodeRandom : USoundNode {
	struct TArray<float> Weights; // 0x48(0x10)
	struct TArray<bool> HasBeenUsed; // 0x58(0x10)
	int32_t NumRandomUsed; // 0x68(0x4)
	int32_t PreselectAtLevelLoad; // 0x6C(0x4)
	unsigned char bShouldExcludeFromBranchCulling : 1; // 0x70(0x1)
	unsigned char bSoundCueExcludedFromBranchCulling : 1; // 0x70(0x1)
	unsigned char bRandomizeWithoutReplacement : 1; // 0x70(0x1)
	unsigned char UnknownData_70_3 : 5; // 0x70(0x1)
	unsigned char UnknownData_71[0x0007]; // 0x71(0x7)
};

// Class Engine.SoundNodeSoundClass
// Size : 0x58 (Inherited : 0x48)
struct USoundNodeSoundClass : USoundNode {
	struct USoundClass* SoundClassOverride; // 0x48(0x8)
	unsigned char UnknownData_50[0x0008]; // 0x50(0x8)
};

// Class Engine.SoundNodeSwitch
// Size : 0x50 (Inherited : 0x48)
struct USoundNodeSwitch : USoundNode {
	struct FName IntParameterName; // 0x48(0x8)
};

// Class Engine.SoundNodeWaveParam
// Size : 0x50 (Inherited : 0x48)
struct USoundNodeWaveParam : USoundNode {
	struct FName WaveParameterName; // 0x48(0x8)
};

// Class Engine.SoundNodeWavePlayer
// Size : 0x80 (Inherited : 0x48)
struct USoundNodeWavePlayer : USoundNodeAssetReferencer {
	struct TSoftObjectPtr<struct USoundWave> SoundWaveAssetPtr; // 0x48(0x28)
	struct USoundWave* SoundWave; // 0x70(0x8)
	unsigned char UnknownData_78_0 : 1; // 0x78(0x1)
	unsigned char bLooping : 1; // 0x78(0x1)
	unsigned char UnknownData_78_2 : 6; // 0x78(0x1)
	unsigned char UnknownData_79[0x0007]; // 0x79(0x7)
};

// Class Engine.SoundSourceBus
// Size : 0x320 (Inherited : 0x308)
struct USoundSourceBus : USoundWave {
	enum class ESourceBusChannels SourceBusChannels; // 0x308(0x1)
	unsigned char UnknownData_309[0x0003]; // 0x309(0x3)
	float SourceBusDuration; // 0x30C(0x4)
	unsigned char bAutoDeactivateWhenSilent : 1; // 0x310(0x1)
	unsigned char UnknownData_310_1 : 7; // 0x310(0x1)
	unsigned char UnknownData_311[0x000F]; // 0x311(0xF)
};

// Class Engine.SoundSubmixBase
// Size : 0x38 (Inherited : 0x28)
struct USoundSubmixBase : UObject {
	struct TArray<struct USoundSubmixBase*> ChildSubmixes; // 0x28(0x10)
};

// Class Engine.SoundSubmixWithParentBase
// Size : 0x40 (Inherited : 0x38)
struct USoundSubmixWithParentBase : USoundSubmixBase {
	struct USoundSubmixBase* ParentSubmix; // 0x38(0x8)
};

// Class Engine.SoundSubmix
// Size : 0x88 (Inherited : 0x40)
struct USoundSubmix : USoundSubmixWithParentBase {
	unsigned char bMuteWhenBackgrounded : 1; // 0x40(0x1)
	unsigned char UnknownData_40_1 : 7; // 0x40(0x1)
	unsigned char UnknownData_41[0x0007]; // 0x41(0x7)
	struct TArray<struct USoundEffectSubmixPreset*> SubmixEffectChain; // 0x48(0x10)
	struct USoundfieldEncodingSettingsBase* AmbisonicsPluginSettings; // 0x58(0x8)
	int32_t EnvelopeFollowerAttackTime; // 0x60(0x4)
	int32_t EnvelopeFollowerReleaseTime; // 0x64(0x4)
	float OutputVolume; // 0x68(0x4)
	unsigned char UnknownData_6C[0x0004]; // 0x6C(0x4)
	struct FMulticastInlineDelegate OnSubmixRecordedFileDone; // 0x70(0x10)
	unsigned char UnknownData_80[0x0008]; // 0x80(0x8)

	void StopRecordingOutput(struct UObject* WorldContextObject, enum class EAudioRecordingExportType ExportType, struct FString Name, struct FString Path, struct USoundWave* ExistingSoundWaveToOverwrite); // Function Engine.SoundSubmix.StopRecordingOutput // (Final|Native|Public|BlueprintCallable) // Param Size : 0x38, 0x7FF6557F5EA0
	void StopEnvelopeFollowing(struct UObject* WorldContextObject); // Function Engine.SoundSubmix.StopEnvelopeFollowing // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557F5E20
	void StartRecordingOutput(struct UObject* WorldContextObject, float ExpectedDuration); // Function Engine.SoundSubmix.StartRecordingOutput // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557F5D50
	void StartEnvelopeFollowing(struct UObject* WorldContextObject); // Function Engine.SoundSubmix.StartEnvelopeFollowing // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557F5CD0
	void SetSubmixOutputVolume(struct UObject* WorldContextObject, float InOutputVolume); // Function Engine.SoundSubmix.SetSubmixOutputVolume // (Final|Native|Public|BlueprintCallable) // Param Size : 0xC, 0x7FF6557F56A0
	void AddEnvelopeFollowerDelegate(struct UObject* WorldContextObject, struct FDelegate OnSubmixEnvelopeBP); // Function Engine.SoundSubmix.AddEnvelopeFollowerDelegate // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF6557F09A0
};

// Class Engine.SoundfieldSubmix
// Size : 0x68 (Inherited : 0x40)
struct USoundfieldSubmix : USoundSubmixWithParentBase {
	struct FName SoundfieldEncodingFormat; // 0x40(0x8)
	struct USoundfieldEncodingSettingsBase* EncodingSettings; // 0x48(0x8)
	struct TArray<struct USoundfieldEffectBase*> SoundfieldEffectChain; // 0x50(0x10)
	class USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x60(0x8)
};

// Class Engine.EndpointSubmix
// Size : 0x50 (Inherited : 0x38)
struct UEndpointSubmix : USoundSubmixBase {
	struct FName EndpointType; // 0x38(0x8)
	class UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40(0x8)
	struct UAudioEndpointSettingsBase* EndpointSettings; // 0x48(0x8)
};

// Class Engine.SoundfieldEndpointSubmix
// Size : 0x70 (Inherited : 0x38)
struct USoundfieldEndpointSubmix : USoundSubmixBase {
	struct FName SoundfieldEndpointType; // 0x38(0x8)
	class UAudioEndpointSettingsBase* EndpointSettingsClass; // 0x40(0x8)
	struct USoundfieldEndpointSettingsBase* EndpointSettings; // 0x48(0x8)
	class USoundfieldEncodingSettingsBase* EncodingSettingsClass; // 0x50(0x8)
	struct USoundfieldEncodingSettingsBase* EncodingSettings; // 0x58(0x8)
	struct TArray<struct USoundfieldEffectBase*> SoundfieldEffectChain; // 0x60(0x10)
};

// Class Engine.SpectatorPawn
// Size : 0x2A8 (Inherited : 0x2A8)
struct ASpectatorPawn : ADefaultPawn {
};

// Class Engine.SpectatorPawnMovement
// Size : 0x158 (Inherited : 0x150)
struct USpectatorPawnMovement : UFloatingPawnMovement {
	unsigned char bIgnoreTimeDilation : 1; // 0x150(0x1)
	unsigned char UnknownData_150_1 : 7; // 0x150(0x1)
	unsigned char UnknownData_151[0x0007]; // 0x151(0x7)
};

// Class Engine.SphereReflectionCapture
// Size : 0x230 (Inherited : 0x228)
struct ASphereReflectionCapture : AReflectionCapture {
	struct UDrawSphereComponent* DrawCaptureRadius; // 0x228(0x8)
};

// Class Engine.SphereReflectionCaptureComponent
// Size : 0x280 (Inherited : 0x270)
struct USphereReflectionCaptureComponent : UReflectionCaptureComponent {
	float InfluenceRadius; // 0x268(0x4)
	float CaptureDistanceScale; // 0x26C(0x4)
	struct UDrawSphereComponent* PreviewInfluenceRadius; // 0x270(0x8)
};

// Class Engine.SplineMetadata
// Size : 0x28 (Inherited : 0x28)
struct USplineMetadata : UObject {
};

// Class Engine.SplineMeshActor
// Size : 0x228 (Inherited : 0x220)
struct ASplineMeshActor : AActor {
	struct USplineMeshComponent* SplineMeshComponent; // 0x220(0x8)
};

// Class Engine.SplineMeshComponent
// Size : 0x530 (Inherited : 0x4A0)
struct USplineMeshComponent : UStaticMeshComponent {
	struct FSplineMeshParams SplineParams; // 0x4A0(0x58)
	struct FVector SplineUpDir; // 0x4F8(0xC)
	float SplineBoundaryMin; // 0x504(0x4)
	struct FGuid CachedMeshBodySetupGuid; // 0x508(0x10)
	struct UBodySetup* BodySetup; // 0x518(0x8)
	float SplineBoundaryMax; // 0x520(0x4)
	unsigned char bAllowSplineEditingPerInstance : 1; // 0x524(0x1)
	unsigned char bSmoothInterpRollScale : 1; // 0x524(0x1)
	unsigned char bMeshDirty : 1; // 0x524(0x1)
	unsigned char UnknownData_524_3 : 5; // 0x524(0x1)
	enum class ESplineMeshAxis ForwardAxis; // 0x525(0x1)
	unsigned char UnknownData_526[0x0002]; // 0x526(0x2)
	float VirtualTextureMainPassMaxDrawDistance; // 0x528(0x4)
	unsigned char UnknownData_52C[0x0004]; // 0x52C(0x4)

	void UpdateMesh(); // Function Engine.SplineMeshComponent.UpdateMesh // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557F9930
	void SetStartTangent(struct FVector StartTangent, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetStartTangent // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557F9850
	void SetStartScale(struct FVector2D StartScale, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetStartScale // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x9, 0x7FF6557F9790
	void SetStartRoll(float StartRoll, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetStartRoll // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557F96C0
	void SetStartPosition(struct FVector StartPos, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetStartPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557F95E0
	void SetStartOffset(struct FVector2D StartOffset, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetStartOffset // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x9, 0x7FF6557F9520
	void SetStartAndEnd(struct FVector StartPos, struct FVector StartTangent, struct FVector EndPos, struct FVector EndTangent, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetStartAndEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x31, 0x7FF6557F9360
	void SetSplineUpDir(struct FVector InSplineUpDir, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetSplineUpDir // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557F9280
	void SetForwardAxis(enum class ESplineMeshAxis InForwardAxis, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetForwardAxis // (Final|Native|Public|BlueprintCallable) // Param Size : 0x2, 0x7FF6557F8FB0
	void SetEndTangent(struct FVector EndTangent, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetEndTangent // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557F8ED0
	void SetEndScale(struct FVector2D EndScale, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetEndScale // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x9, 0x7FF6557F8E10
	void SetEndRoll(float EndRoll, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetEndRoll // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557F8D40
	void SetEndPosition(struct FVector EndPos, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetEndPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0xD, 0x7FF6557F8C60
	void SetEndOffset(struct FVector2D EndOffset, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetEndOffset // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x9, 0x7FF6557F8BA0
	void SetBoundaryMin(float InBoundaryMin, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetBoundaryMin // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557F8AD0
	void SetBoundaryMax(float InBoundaryMax, bool bUpdateMesh); // Function Engine.SplineMeshComponent.SetBoundaryMax // (Final|Native|Public|BlueprintCallable) // Param Size : 0x5, 0x7FF6557F8A00
	struct FVector GetStartTangent(); // Function Engine.SplineMeshComponent.GetStartTangent // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F88D0
	struct FVector2D GetStartScale(); // Function Engine.SplineMeshComponent.GetStartScale // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557F8890
	float GetStartRoll(); // Function Engine.SplineMeshComponent.GetStartRoll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F8860
	struct FVector GetStartPosition(); // Function Engine.SplineMeshComponent.GetStartPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F8820
	struct FVector2D GetStartOffset(); // Function Engine.SplineMeshComponent.GetStartOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557F87E0
	struct FVector GetSplineUpDir(); // Function Engine.SplineMeshComponent.GetSplineUpDir // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F87A0
	enum class ESplineMeshAxis GetForwardAxis(); // Function Engine.SplineMeshComponent.GetForwardAxis // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6557F83F0
	struct FVector GetEndTangent(); // Function Engine.SplineMeshComponent.GetEndTangent // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F83B0
	struct FVector2D GetEndScale(); // Function Engine.SplineMeshComponent.GetEndScale // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557F8370
	float GetEndRoll(); // Function Engine.SplineMeshComponent.GetEndRoll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F8340
	struct FVector GetEndPosition(); // Function Engine.SplineMeshComponent.GetEndPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F8300
	struct FVector2D GetEndOffset(); // Function Engine.SplineMeshComponent.GetEndOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557F82C0
	float GetBoundaryMin(); // Function Engine.SplineMeshComponent.GetBoundaryMin // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F81F0
	float GetBoundaryMax(); // Function Engine.SplineMeshComponent.GetBoundaryMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F81C0
};

// Class Engine.SpotLightComponent
// Size : 0x360 (Inherited : 0x350)
struct USpotLightComponent : UPointLightComponent {
	float InnerConeAngle; // 0x350(0x4)
	float OuterConeAngle; // 0x354(0x4)
	float LightShaftConeAngle; // 0x358(0x4)
	unsigned char UnknownData_35C[0x0004]; // 0x35C(0x4)

	void SetOuterConeAngle(float NewOuterConeAngle); // Function Engine.SpotLightComponent.SetOuterConeAngle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557F9200
	void SetInnerConeAngle(float NewInnerConeAngle); // Function Engine.SpotLightComponent.SetInnerConeAngle // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557F9100
};

// Class Engine.StaticMesh
// Size : 0x138 (Inherited : 0x40)
struct UStaticMesh : UStreamableRenderAsset {
	unsigned char UnknownData_40[0x0020]; // 0x40(0x20)
	struct FPerPlatformInt MinLOD; // 0x60(0x4)
	float LpvBiasMultiplier; // 0x64(0x4)
	struct TArray<struct FStaticMaterial> StaticMaterials; // 0x68(0x10)
	float LightmapUVDensity; // 0x78(0x4)
	int32_t LightMapResolution; // 0x7C(0x4)
	int32_t LightMapCoordinateIndex; // 0x80(0x4)
	float DistanceFieldSelfShadowBias; // 0x84(0x4)
	struct UBodySetup* BodySetup; // 0x88(0x8)
	int32_t LODForCollision; // 0x90(0x4)
	unsigned char bGenerateMeshDistanceField : 1; // 0x94(0x1)
	unsigned char bStripComplexCollisionForConsole : 1; // 0x94(0x1)
	unsigned char bHasNavigationData : 1; // 0x94(0x1)
	unsigned char bSupportUniformlyDistributedSampling : 1; // 0x94(0x1)
	unsigned char bSupportPhysicalMaterialMasks : 1; // 0x94(0x1)
	unsigned char bIsBuiltAtRuntime : 1; // 0x94(0x1)
	unsigned char UnknownData_94_6 : 1; // 0x94(0x1)
	unsigned char bAllowCPUAccess : 1; // 0x94(0x1)
	unsigned char bSupportGpuUniformlyDistributedSampling : 1; // 0x95(0x1)
	unsigned char UnknownData_95_1 : 7; // 0x95(0x1)
	unsigned char UnknownData_96[0x0022]; // 0x96(0x22)
	struct TArray<struct UStaticMeshSocket*> Sockets; // 0xB8(0x10)
	unsigned char UnknownData_C8[0x0010]; // 0xC8(0x10)
	struct FVector PositiveBoundsExtension; // 0xD8(0xC)
	struct FVector NegativeBoundsExtension; // 0xE4(0xC)
	struct FBoxSphereBounds ExtendedBounds; // 0xF0(0x1C)
	int32_t ElementToIgnoreForTexFactor; // 0x10C(0x4)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x110(0x10)
	unsigned char UnknownData_120[0x0008]; // 0x120(0x8)
	struct UObject* EditableMesh; // 0x128(0x8)
	struct UNavCollisionBase* NavCollision; // 0x130(0x8)

	void RemoveSocket(struct UStaticMeshSocket* Socket); // Function Engine.StaticMesh.RemoveSocket // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557F8980
	int32_t GetNumSections(int32_t InLOD); // Function Engine.StaticMesh.GetNumSections // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557F8710
	int32_t GetNumLODs(); // Function Engine.StaticMesh.GetNumLODs // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557F86E0
	void GetMinimumLODForPlatforms(struct TMap<struct FName, int32_t> PlatformMinimumLODs); // Function Engine.StaticMesh.GetMinimumLODForPlatforms // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x50, 0x7FF6557F85C0
	int32_t GetMinimumLODForPlatform(struct FName PlatformName); // Function Engine.StaticMesh.GetMinimumLODForPlatform // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F8540
	int32_t GetMaterialIndex(struct FName MaterialSlotName); // Function Engine.StaticMesh.GetMaterialIndex // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557F84B0
	struct UMaterialInterface* GetMaterial(int32_t MaterialIndex); // Function Engine.StaticMesh.GetMaterial // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F8420
	struct FBoxSphereBounds GetBounds(); // Function Engine.StaticMesh.GetBounds // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F8270
	struct FBox GetBoundingBox(); // Function Engine.StaticMesh.GetBoundingBox // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1C, 0x7FF6557F8220
	struct UStaticMeshSocket* FindSocket(struct FName InSocketName); // Function Engine.StaticMesh.FindSocket // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF6557F8130
	struct UStaticMeshDescription* CreateStaticMeshDescription(struct UObject* Outer); // Function Engine.StaticMesh.CreateStaticMeshDescription // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557F80B0
	void BuildFromStaticMeshDescriptions(struct TArray<struct UStaticMeshDescription*> StaticMeshDescriptions, bool bBuildSimpleCollision); // Function Engine.StaticMesh.BuildFromStaticMeshDescriptions // (Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x11, 0x7FF6557F7FB0
	void AddSocket(struct UStaticMeshSocket* Socket); // Function Engine.StaticMesh.AddSocket // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557F7F30
	struct FName AddMaterial(struct UMaterialInterface* Material); // Function Engine.StaticMesh.AddMaterial // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6557F7EA0
};

// Class Engine.StaticMeshSocket
// Size : 0x68 (Inherited : 0x28)
struct UStaticMeshSocket : UObject {
	struct FName SocketName; // 0x28(0x8)
	struct FVector RelativeLocation; // 0x30(0xC)
	struct FRotator RelativeRotation; // 0x3C(0xC)
	struct FVector RelativeScale; // 0x48(0xC)
	unsigned char UnknownData_54[0x0004]; // 0x54(0x4)
	struct FString Tag; // 0x58(0x10)
};

// Class Engine.StereoLayerComponent
// Size : 0x2E0 (Inherited : 0x1F0)
struct UStereoLayerComponent : USceneComponent {
	unsigned char bLiveTexture : 1; // 0x1F0(0x1)
	unsigned char bSupportsDepth : 1; // 0x1F0(0x1)
	unsigned char bNoAlphaChannel : 1; // 0x1F0(0x1)
	unsigned char UnknownData_1F0_3 : 5; // 0x1F0(0x1)
	unsigned char UnknownData_1F1[0x0007]; // 0x1F1(0x7)
	struct UTexture* Texture; // 0x1F8(0x8)
	struct UTexture* LeftTexture; // 0x200(0x8)
	unsigned char bQuadPreserveTextureRatio : 1; // 0x208(0x1)
	unsigned char UnknownData_208_1 : 7; // 0x208(0x1)
	unsigned char UnknownData_209[0x0003]; // 0x209(0x3)
	struct FVector2D QuadSize; // 0x20C(0x8)
	struct FBox2D UVRect; // 0x214(0x14)
	float CylinderRadius; // 0x228(0x4)
	float CylinderOverlayArc; // 0x22C(0x4)
	int32_t CylinderHeight; // 0x230(0x4)
	struct FEquirectProps EquirectProps; // 0x234(0x48)
	enum class EStereoLayerType StereoLayerType; // 0x27C(0x1)
	enum class EStereoLayerShape StereoLayerShape; // 0x27D(0x1)
	unsigned char UnknownData_27E[0x0002]; // 0x27E(0x2)
	struct UStereoLayerShape* Shape; // 0x280(0x8)
	int32_t Priority; // 0x288(0x4)
	unsigned char UnknownData_28C[0x0054]; // 0x28C(0x54)

	void SetUVRect(struct FBox2D InUVRect); // Function Engine.StereoLayerComponent.SetUVRect // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x14, 0x7FF6557FD730
	void SetTexture(struct UTexture* InTexture); // Function Engine.StereoLayerComponent.SetTexture // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557FD6B0
	void SetQuadSize(struct FVector2D InQuadSize); // Function Engine.StereoLayerComponent.SetQuadSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x8, 0x7FF6557FD380
	void SetPriority(int32_t InPriority); // Function Engine.StereoLayerComponent.SetPriority // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557FD300
	void SetLeftTexture(struct UTexture* InTexture); // Function Engine.StereoLayerComponent.SetLeftTexture // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6557FD180
	void SetEquirectProps(struct FEquirectProps InScaleBiases); // Function Engine.StereoLayerComponent.SetEquirectProps // (Final|Native|Public|BlueprintCallable) // Param Size : 0x48, 0x7FF6557FCE80
	void MarkTextureForUpdate(); // Function Engine.StereoLayerComponent.MarkTextureForUpdate // (Final|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF6557FCD60
	struct FBox2D GetUVRect(); // Function Engine.StereoLayerComponent.GetUVRect // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6557FCD30
	struct UTexture* GetTexture(); // Function Engine.StereoLayerComponent.GetTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557FCD10
	struct FVector2D GetQuadSize(); // Function Engine.StereoLayerComponent.GetQuadSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557FCCE0
	int32_t GetPriority(); // Function Engine.StereoLayerComponent.GetPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6557FCCC0
	struct UTexture* GetLeftTexture(); // Function Engine.StereoLayerComponent.GetLeftTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6557FCBC0
};

// Class Engine.StereoLayerShape
// Size : 0x28 (Inherited : 0x28)
struct UStereoLayerShape : UObject {
};

// Class Engine.StereoLayerShapeQuad
// Size : 0x28 (Inherited : 0x28)
struct UStereoLayerShapeQuad : UStereoLayerShape {
};

// Class Engine.StereoLayerShapeCylinder
// Size : 0x38 (Inherited : 0x28)
struct UStereoLayerShapeCylinder : UStereoLayerShape {
	float Radius; // 0x28(0x4)
	float OverlayArc; // 0x2C(0x4)
	int32_t Height; // 0x30(0x4)
	unsigned char UnknownData_34[0x0004]; // 0x34(0x4)

	void SetRadius(float InRadius); // Function Engine.StereoLayerShapeCylinder.SetRadius // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557FD400
	void SetOverlayArc(float InOverlayArc); // Function Engine.StereoLayerShapeCylinder.SetOverlayArc // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557FD280
	void SetHeight(int32_t InHeight); // Function Engine.StereoLayerShapeCylinder.SetHeight // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6557FD100
};

// Class Engine.StereoLayerShapeCubemap
// Size : 0x28 (Inherited : 0x28)
struct UStereoLayerShapeCubemap : UStereoLayerShape {
};

// Class Engine.StereoLayerShapeEquirect
// Size : 0x70 (Inherited : 0x28)
struct UStereoLayerShapeEquirect : UStereoLayerShape {
	struct FBox2D LeftUVRect; // 0x28(0x14)
	struct FBox2D RightUVRect; // 0x3C(0x14)
	struct FVector2D LeftScale; // 0x50(0x8)
	struct FVector2D RightScale; // 0x58(0x8)
	struct FVector2D LeftBias; // 0x60(0x8)
	struct FVector2D RightBias; // 0x68(0x8)

	void SetEquirectProps(struct FEquirectProps InScaleBiases); // Function Engine.StereoLayerShapeEquirect.SetEquirectProps // (Final|Native|Public|BlueprintCallable) // Param Size : 0x48, 0x7FF6557FCF80
};

// Class Engine.StereoLayerFunctionLibrary
// Size : 0x28 (Inherited : 0x28)
struct UStereoLayerFunctionLibrary : UBlueprintFunctionLibrary {

	void ShowSplashScreen(); // Function Engine.StereoLayerFunctionLibrary.ShowSplashScreen // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A39010
	void SetSplashScreen(struct UTexture* Texture, struct FVector2D Scale, struct FVector Offset, bool bShowLoadingMovie, bool bShowOnSet); // Function Engine.StereoLayerFunctionLibrary.SetSplashScreen // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x1E, 0x7FF6557FD510
	void HideSplashScreen(); // Function Engine.StereoLayerFunctionLibrary.HideSplashScreen // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF654A38120
	void EnableAutoLoadingSplashScreen(bool InAutoShowEnabled); // Function Engine.StereoLayerFunctionLibrary.EnableAutoLoadingSplashScreen // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557FCB40
};

// Class Engine.StringTable
// Size : 0x40 (Inherited : 0x28)
struct UStringTable : UObject {
	unsigned char UnknownData_28[0x0018]; // 0x28(0x18)
};

// Class Engine.SubsurfaceProfile
// Size : 0xB8 (Inherited : 0x28)
struct USubsurfaceProfile : UObject {
	struct FSubsurfaceProfileStruct Settings; // 0x28(0x8C)
	unsigned char UnknownData_B4[0x0004]; // 0xB4(0x4)
};

// Class Engine.SubsystemBlueprintLibrary
// Size : 0x28 (Inherited : 0x28)
struct USubsystemBlueprintLibrary : UBlueprintFunctionLibrary {

	struct UWorldSubsystem* GetWorldSubsystem(struct UObject* ContextObject, class UWorldSubsystem* Class); // Function Engine.SubsystemBlueprintLibrary.GetWorldSubsystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF655800060
	struct ULocalPlayerSubsystem* GetLocalPlayerSubSystemFromPlayerController(struct APlayerController* PlayerController, class ULocalPlayerSubsystem* Class); // Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubSystemFromPlayerController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557FFE60
	struct ULocalPlayerSubsystem* GetLocalPlayerSubsystem(struct UObject* ContextObject, class ULocalPlayerSubsystem* Class); // Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubsystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557FFF20
	struct UGameInstanceSubsystem* GetGameInstanceSubsystem(struct UObject* ContextObject, class UGameInstanceSubsystem* Class); // Function Engine.SubsystemBlueprintLibrary.GetGameInstanceSubsystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x18, 0x7FF6557FFDA0
	struct UEngineSubsystem* GetEngineSubsystem(class UEngineSubsystem* Class); // Function Engine.SubsystemBlueprintLibrary.GetEngineSubsystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // Param Size : 0x10, 0x7FF6557FFD20
};

// Class Engine.SubUVAnimation
// Size : 0x68 (Inherited : 0x28)
struct USubUVAnimation : UObject {
	struct UTexture2D* SubUVTexture; // 0x28(0x8)
	int32_t SubImages_Horizontal; // 0x30(0x4)
	int32_t SubImages_Vertical; // 0x34(0x4)
	enum class ESubUVBoundingVertexCount BoundingMode; // 0x38(0x1)
	enum class EOpacitySourceMode OpacitySourceMode; // 0x39(0x1)
	unsigned char UnknownData_3A[0x0002]; // 0x3A(0x2)
	float AlphaThreshold; // 0x3C(0x4)
	unsigned char UnknownData_40[0x0028]; // 0x40(0x28)
};

// Class Engine.TimecodeProvider
// Size : 0x30 (Inherited : 0x28)
struct UTimecodeProvider : UObject {
	float FrameDelay; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)

	struct FTimecode GetTimecode(); // Function Engine.TimecodeProvider.GetTimecode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF6558034E0
	enum class ETimecodeProviderSynchronizationState GetSynchronizationState(); // Function Engine.TimecodeProvider.GetSynchronizationState // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF6558034B0
	struct FQualifiedFrameTime GetQualifiedFrameTime(); // Function Engine.TimecodeProvider.GetQualifiedFrameTime // (Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF655803470
	struct FFrameRate GetFrameRate(); // Function Engine.TimecodeProvider.GetFrameRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x8, 0x7FF6558033A0
	struct FTimecode GetDelayedTimecode(); // Function Engine.TimecodeProvider.GetDelayedTimecode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x14, 0x7FF655803360
	struct FQualifiedFrameTime GetDelayedQualifiedFrameTime(); // Function Engine.TimecodeProvider.GetDelayedQualifiedFrameTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x10, 0x7FF655803320
};

// Class Engine.SystemTimeTimecodeProvider
// Size : 0x40 (Inherited : 0x30)
struct USystemTimeTimecodeProvider : UTimecodeProvider {
	struct FFrameRate FrameRate; // 0x30(0x8)
	bool bGenerateFullFrame; // 0x38(0x1)
	bool bUseHighPerformanceClock; // 0x39(0x1)
	unsigned char UnknownData_3A[0x0006]; // 0x3A(0x6)
};

// Class Engine.TargetPoint
// Size : 0x220 (Inherited : 0x220)
struct ATargetPoint : AActor {
};

// Class Engine.TextPropertyTestObject
// Size : 0x70 (Inherited : 0x28)
struct UTextPropertyTestObject : UObject {
	struct FText DefaultedText; // 0x28(0x18)
	struct FText UndefaultedText; // 0x40(0x18)
	struct FText TransientText; // 0x58(0x18)
};

// Class Engine.TextRenderActor
// Size : 0x228 (Inherited : 0x220)
struct ATextRenderActor : AActor {
	struct UTextRenderComponent* TextRender; // 0x220(0x8)
};

// Class Engine.TextRenderComponent
// Size : 0x460 (Inherited : 0x410)
struct UTextRenderComponent : UPrimitiveComponent {
	struct FText Text; // 0x408(0x18)
	struct UMaterialInterface* TextMaterial; // 0x420(0x8)
	struct UFont* Font; // 0x428(0x8)
	enum class EHorizTextAligment HorizontalAlignment; // 0x430(0x1)
	enum class EVerticalTextAligment VerticalAlignment; // 0x431(0x1)
	struct FColor TextRenderColor; // 0x434(0x4)
	float XScale; // 0x438(0x4)
	float YScale; // 0x43C(0x4)
	float WorldSize; // 0x440(0x4)
	float InvDefaultSize; // 0x444(0x4)
	float HorizSpacingAdjust; // 0x448(0x4)
	float VertSpacingAdjust; // 0x44C(0x4)
	unsigned char bAlwaysRenderAsText : 1; // 0x450(0x1)
	unsigned char UnknownData_456_1 : 7; // 0x456(0x1)
	unsigned char UnknownData_457[0x0009]; // 0x457(0x9)

	void SetYScale(float Value); // Function Engine.TextRenderComponent.SetYScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF65335E450
	void SetXScale(float Value); // Function Engine.TextRenderComponent.SetXScale // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655800680
	void SetWorldSize(float Value); // Function Engine.TextRenderComponent.SetWorldSize // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655800600
	void SetVertSpacingAdjust(float Value); // Function Engine.TextRenderComponent.SetVertSpacingAdjust // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655800500
	void SetVerticalAlignment(enum class EVerticalTextAligment Value); // Function Engine.TextRenderComponent.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655800580
	void SetTextRenderColor(struct FColor Value); // Function Engine.TextRenderComponent.SetTextRenderColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // Param Size : 0x4, 0x7FF655800490
	void SetTextMaterial(struct UMaterialInterface* Material); // Function Engine.TextRenderComponent.SetTextMaterial // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655800410
	void SetText(struct FString Value); // Function Engine.TextRenderComponent.SetText // (Final|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655800370
	void SetHorizSpacingAdjust(float Value); // Function Engine.TextRenderComponent.SetHorizSpacingAdjust // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655800270
	void SetHorizontalAlignment(enum class EHorizTextAligment Value); // Function Engine.TextRenderComponent.SetHorizontalAlignment // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6558002F0
	void SetFont(struct UFont* Value); // Function Engine.TextRenderComponent.SetFont // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF6558001F0
	void K2_SetText(struct FText Value); // Function Engine.TextRenderComponent.K2_SetText // (Final|Native|Public|HasOutParms|BlueprintCallable) // Param Size : 0x18, 0x7FF655800120
	struct FVector GetTextWorldSize(); // Function Engine.TextRenderComponent.GetTextWorldSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF655800020
	struct FVector GetTextLocalSize(); // Function Engine.TextRenderComponent.GetTextLocalSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // Param Size : 0xC, 0x7FF6557FFFE0
};

// Class Engine.Texture2DArray
// Size : 0x110 (Inherited : 0xB8)
struct UTexture2DArray : UTexture {
	unsigned char UnknownData_B8[0x0058]; // 0xB8(0x58)
};

// Class Engine.TextureLightProfile
// Size : 0xF0 (Inherited : 0xE8)
struct UTextureLightProfile : UTexture2D {
	float Brightness; // 0xE8(0x4)
	float TextureMultiplier; // 0xEC(0x4)
};

// Class Engine.TextureMipDataProviderFactory
// Size : 0x28 (Inherited : 0x28)
struct UTextureMipDataProviderFactory : UAssetUserData {
};

// Class Engine.TextureRenderTargetCube
// Size : 0xD8 (Inherited : 0xC0)
struct UTextureRenderTargetCube : UTextureRenderTarget {
	int32_t SizeX; // 0xC0(0x4)
	struct FLinearColor ClearColor; // 0xC4(0x10)
	enum class EPixelFormat OverrideFormat; // 0xD4(0x1)
	unsigned char bHDR : 1; // 0xD5(0x1)
	unsigned char bForceLinearGamma : 1; // 0xD5(0x1)
	unsigned char UnknownData_D5_2 : 6; // 0xD5(0x1)
	unsigned char UnknownData_D6[0x0002]; // 0xD6(0x2)
};

// Class Engine.ThumbnailInfo
// Size : 0x28 (Inherited : 0x28)
struct UThumbnailInfo : UObject {
};

// Class Engine.TimelineComponent
// Size : 0x150 (Inherited : 0xB0)
struct UTimelineComponent : UActorComponent {
	struct FTimeline TheTimeline; // 0xB0(0x98)
	unsigned char bIgnoreTimeDilation : 1; // 0x148(0x1)
	unsigned char UnknownData_148_1 : 7; // 0x148(0x1)
	unsigned char UnknownData_149[0x0007]; // 0x149(0x7)

	void Stop(); // Function Engine.TimelineComponent.Stop // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655803CF0
	void SetVectorCurve(struct UCurveVector* NewVectorCurve, struct FName VectorTrackName); // Function Engine.TimelineComponent.SetVectorCurve // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655803C30
	void SetTimelineLengthMode(enum class ETimelineLengthMode NewLengthMode); // Function Engine.TimelineComponent.SetTimelineLengthMode // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655803BB0
	void SetTimelineLength(float NewLength); // Function Engine.TimelineComponent.SetTimelineLength // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655803B30
	void SetPlayRate(float NewRate); // Function Engine.TimelineComponent.SetPlayRate // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF6558039A0
	void SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate); // Function Engine.TimelineComponent.SetPlaybackPosition // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x6, 0x7FF655803A20
	void SetNewTime(float NewTime); // Function Engine.TimelineComponent.SetNewTime // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655803920
	void SetLooping(bool bNewLooping); // Function Engine.TimelineComponent.SetLooping // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655803890
	void SetLinearColorCurve(struct UCurveLinearColor* NewLinearColorCurve, struct FName LinearColorTrackName); // Function Engine.TimelineComponent.SetLinearColorCurve // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6558037D0
	void SetIgnoreTimeDilation(bool bNewIgnoreTimeDilation); // Function Engine.TimelineComponent.SetIgnoreTimeDilation // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655803740
	void SetFloatCurve(struct UCurveFloat* NewFloatCurve, struct FName FloatTrackName); // Function Engine.TimelineComponent.SetFloatCurve // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF655803680
	void ReverseFromEnd(); // Function Engine.TimelineComponent.ReverseFromEnd // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655803660
	void Reverse(); // Function Engine.TimelineComponent.Reverse // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655803640
	void PlayFromStart(); // Function Engine.TimelineComponent.PlayFromStart // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655803620
	void Play(); // Function Engine.TimelineComponent.Play // (Final|RequiredAPI|Native|Public|BlueprintCallable) // Param Size : 0x0, 0x7FF655803600
	void OnRep_Timeline(); // Function Engine.TimelineComponent.OnRep_Timeline // (Final|Native|Public) // Param Size : 0x0, 0x7FF6558035E0
	bool IsReversing(); // Function Engine.TimelineComponent.IsReversing // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6558035B0
	bool IsPlaying(); // Function Engine.TimelineComponent.IsPlaying // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF655803580
	bool IsLooping(); // Function Engine.TimelineComponent.IsLooping // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF655803550
	float GetTimelineLength(); // Function Engine.TimelineComponent.GetTimelineLength // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF655803520
	float GetPlayRate(); // Function Engine.TimelineComponent.GetPlayRate // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF655803410
	float GetPlaybackPosition(); // Function Engine.TimelineComponent.GetPlaybackPosition // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x4, 0x7FF655803440
	bool GetIgnoreTimeDilation(); // Function Engine.TimelineComponent.GetIgnoreTimeDilation // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // Param Size : 0x1, 0x7FF6558033E0
};

// Class Engine.TimelineTemplate
// Size : 0xB0 (Inherited : 0x28)
struct UTimelineTemplate : UObject {
	float TimelineLength; // 0x28(0x4)
	enum class ETimelineLengthMode LengthMode; // 0x2C(0x1)
	unsigned char bAutoPlay : 1; // 0x2D(0x1)
	unsigned char bLoop : 1; // 0x2D(0x1)
	unsigned char bReplicated : 1; // 0x2D(0x1)
	unsigned char bIgnoreTimeDilation : 1; // 0x2D(0x1)
	unsigned char UnknownData_2D_4 : 4; // 0x2D(0x1)
	unsigned char UnknownData_2E[0x0002]; // 0x2E(0x2)
	struct TArray<struct FTTEventTrack> EventTracks; // 0x30(0x10)
	struct TArray<struct FTTFloatTrack> FloatTracks; // 0x40(0x10)
	struct TArray<struct FTTVectorTrack> VectorTracks; // 0x50(0x10)
	struct TArray<struct FTTLinearColorTrack> LinearColorTracks; // 0x60(0x10)
	struct TArray<struct FBPVariableMetaDataEntry> MetaDataArray; // 0x70(0x10)
	struct FGuid TimelineGuid; // 0x80(0x10)
	struct FName VariableName; // 0x90(0x8)
	struct FName DirectionPropertyName; // 0x98(0x8)
	struct FName UpdateFunctionName; // 0xA0(0x8)
	struct FName FinishedFunctionName; // 0xA8(0x8)
};

// Class Engine.TireType
// Size : 0x38 (Inherited : 0x30)
struct UTireType : UDataAsset {
	float FrictionScale; // 0x30(0x4)
	unsigned char UnknownData_34[0x0004]; // 0x34(0x4)
};

// Class Engine.TouchInterface
// Size : 0x58 (Inherited : 0x28)
struct UTouchInterface : UObject {
	struct TArray<struct FTouchInputControl> Controls; // 0x28(0x10)
	float ActiveOpacity; // 0x38(0x4)
	float InactiveOpacity; // 0x3C(0x4)
	float TimeUntilDeactive; // 0x40(0x4)
	float TimeUntilReset; // 0x44(0x4)
	float ActivationDelay; // 0x48(0x4)
	bool bPreventRecenter; // 0x4C(0x1)
	unsigned char UnknownData_4D[0x0003]; // 0x4D(0x3)
	float StartupDelay; // 0x50(0x4)
	unsigned char UnknownData_54[0x0004]; // 0x54(0x4)
};

// Class Engine.TriggerCapsule
// Size : 0x228 (Inherited : 0x228)
struct ATriggerCapsule : ATriggerBase {
};

// Class Engine.TriggerSphere
// Size : 0x228 (Inherited : 0x228)
struct ATriggerSphere : ATriggerBase {
};

// Class Engine.TwitterIntegrationBase
// Size : 0x38 (Inherited : 0x38)
struct UTwitterIntegrationBase : UPlatformInterfaceBase {

	bool TwitterRequest(struct FString URL, struct TArray<struct FString> ParamKeysAndValues, enum class ETwitterRequestMethod RequestMethod, int32_t AccountIndex); // Function Engine.TwitterIntegrationBase.TwitterRequest // (Native|Public|HasOutParms) // Param Size : 0x29, 0x7FF655808120
	bool ShowTweetUI(struct FString InitialMessage, struct FString URL, struct FString Picture); // Function Engine.TwitterIntegrationBase.ShowTweetUI // (Native|Public) // Param Size : 0x31, 0x7FF655807FD0
	void Init(); // Function Engine.TwitterIntegrationBase.Init // (Native|Public) // Param Size : 0x0, 0x7FF654A144B0
	int32_t GetNumAccounts(); // Function Engine.TwitterIntegrationBase.GetNumAccounts // (Native|Public) // Param Size : 0x4, 0x7FF655807220
	struct FString GetAccountName(int32_t AccountIndex); // Function Engine.TwitterIntegrationBase.GetAccountName // (Native|Public) // Param Size : 0x18, 0x7FF655807140
	bool CanShowTweetUI(); // Function Engine.TwitterIntegrationBase.CanShowTweetUI // (Native|Public) // Param Size : 0x1, 0x7FF654A14480
	bool AuthorizeAccounts(); // Function Engine.TwitterIntegrationBase.AuthorizeAccounts // (Native|Public) // Param Size : 0x1, 0x7FF65570CA90
};

// Class Engine.UserDefinedEnum
// Size : 0xB0 (Inherited : 0x60)
struct UUserDefinedEnum : UEnum {
	struct TMap<struct FName, struct FText> DisplayNameMap; // 0x60(0x50)
};

// Class Engine.UserDefinedStruct
// Size : 0x108 (Inherited : 0xC0)
struct UUserDefinedStruct : UScriptStruct {
	enum class EUserDefinedStructureStatus Status; // 0xC0(0x1)
	unsigned char UnknownData_C1[0x0003]; // 0xC1(0x3)
	struct FGuid Guid; // 0xC4(0x10)
	unsigned char UnknownData_D4[0x0034]; // 0xD4(0x34)
};

// Class Engine.UserInterfaceSettings
// Size : 0x268 (Inherited : 0x38)
struct UUserInterfaceSettings : UDeveloperSettings {
	enum class ERenderFocusRule RenderFocusRule; // 0x38(0x1)
	unsigned char UnknownData_39[0x0007]; // 0x39(0x7)
	struct TMap<enum class EMouseCursor, struct FHardwareCursorReference> HardwareCursors; // 0x40(0x50)
	struct TMap<enum class EMouseCursor, struct FSoftClassPath> SoftwareCursors; // 0x90(0x50)
	struct FSoftClassPath DefaultCursor; // 0xE0(0x18)
	struct FSoftClassPath TextEditBeamCursor; // 0xF8(0x18)
	struct FSoftClassPath CrosshairsCursor; // 0x110(0x18)
	struct FSoftClassPath HandCursor; // 0x128(0x18)
	struct FSoftClassPath GrabHandCursor; // 0x140(0x18)
	struct FSoftClassPath GrabHandClosedCursor; // 0x158(0x18)
	struct FSoftClassPath SlashedCircleCursor; // 0x170(0x18)
	float ApplicationScale; // 0x188(0x4)
	enum class EUIScalingRule UIScaleRule; // 0x18C(0x1)
	unsigned char UnknownData_18D[0x0003]; // 0x18D(0x3)
	struct FSoftClassPath CustomScalingRuleClass; // 0x190(0x18)
	struct FRuntimeFloatCurve UIScaleCurve; // 0x1A8(0x88)
	bool bAllowHighDPIInGameMode; // 0x230(0x1)
	bool bLoadWidgetsOnDedicatedServer; // 0x231(0x1)
	unsigned char UnknownData_232[0x0006]; // 0x232(0x6)
	struct TArray<struct UObject*> CursorClasses; // 0x238(0x10)
	class UObject* CustomScalingRuleClassInstance; // 0x248(0x8)
	struct UDPICustomScalingRule* CustomScalingRule; // 0x250(0x8)
	unsigned char UnknownData_258[0x0010]; // 0x258(0x10)
};

// Class Engine.VectorField
// Size : 0x48 (Inherited : 0x28)
struct UVectorField : UObject {
	struct FBox Bounds; // 0x28(0x1C)
	float Intensity; // 0x44(0x4)
};

// Class Engine.VectorFieldAnimated
// Size : 0x88 (Inherited : 0x48)
struct UVectorFieldAnimated : UVectorField {
	struct UTexture2D* Texture; // 0x48(0x8)
	enum class EVectorFieldConstructionOp ConstructionOp; // 0x50(0x1)
	unsigned char UnknownData_51[0x0003]; // 0x51(0x3)
	int32_t VolumeSizeX; // 0x54(0x4)
	int32_t VolumeSizeY; // 0x58(0x4)
	int32_t VolumeSizeZ; // 0x5C(0x4)
	int32_t SubImagesX; // 0x60(0x4)
	int32_t SubImagesY; // 0x64(0x4)
	int32_t FrameCount; // 0x68(0x4)
	float FramesPerSecond; // 0x6C(0x4)
	unsigned char bLoop : 1; // 0x70(0x1)
	unsigned char UnknownData_70_1 : 7; // 0x70(0x1)
	unsigned char UnknownData_71[0x0007]; // 0x71(0x7)
	struct UVectorFieldStatic* NoiseField; // 0x78(0x8)
	float NoiseScale; // 0x80(0x4)
	float NoiseMax; // 0x84(0x4)
};

// Class Engine.VectorFieldComponent
// Size : 0x430 (Inherited : 0x410)
struct UVectorFieldComponent : UPrimitiveComponent {
	struct UVectorField* VectorField; // 0x408(0x8)
	float Intensity; // 0x410(0x4)
	float Tightness; // 0x414(0x4)
	unsigned char bPreviewVectorField : 1; // 0x418(0x1)
	unsigned char UnknownData_420_1 : 7; // 0x420(0x1)
	unsigned char UnknownData_421[0x000F]; // 0x421(0xF)

	void SetIntensity(float NewIntensity); // Function Engine.VectorFieldComponent.SetIntensity // (Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807BE0
};

// Class Engine.VectorFieldStatic
// Size : 0x90 (Inherited : 0x48)
struct UVectorFieldStatic : UVectorField {
	int32_t SizeX; // 0x48(0x4)
	int32_t SizeY; // 0x4C(0x4)
	int32_t SizeZ; // 0x50(0x4)
	bool bAllowCPUAccess; // 0x54(0x1)
	unsigned char UnknownData_55[0x002B]; // 0x55(0x2B)
	struct TArray<struct FVector4> CPUData; // 0x80(0x10)
};

// Class Engine.VectorFieldVolume
// Size : 0x228 (Inherited : 0x220)
struct AVectorFieldVolume : AActor {
	struct UVectorFieldComponent* VectorFieldComponent; // 0x220(0x8)
};

// Class Engine.VirtualTexture
// Size : 0x28 (Inherited : 0x28)
struct UVirtualTexture : UObject {
};

// Class Engine.LightMapVirtualTexture
// Size : 0x28 (Inherited : 0x28)
struct ULightMapVirtualTexture : UVirtualTexture {
};

// Class Engine.LightMapVirtualTexture2D
// Size : 0xF8 (Inherited : 0xE8)
struct ULightMapVirtualTexture2D : UTexture2D {
	struct TArray<int8_t> TypeToLayer; // 0xE8(0x10)
};

// Class Engine.VirtualTexturePoolConfig
// Size : 0x40 (Inherited : 0x28)
struct UVirtualTexturePoolConfig : UObject {
	int32_t DefaultSizeInMegabyte; // 0x28(0x4)
	unsigned char UnknownData_2C[0x0004]; // 0x2C(0x4)
	struct TArray<struct FVirtualTextureSpacePoolConfig> Pools; // 0x30(0x10)
};

// Class Engine.VisualLoggerAutomationTests
// Size : 0x28 (Inherited : 0x28)
struct UVisualLoggerAutomationTests : UObject {
};

// Class Engine.VisualLoggerDebugSnapshotInterface
// Size : 0x28 (Inherited : 0x28)
struct UVisualLoggerDebugSnapshotInterface : UInterface {
};

// Class Engine.VisualLoggerKismetLibrary
// Size : 0x28 (Inherited : 0x28)
struct UVisualLoggerKismetLibrary : UBlueprintFunctionLibrary {

	void RedirectVislog(struct UObject* SourceOwner, struct UObject* DestinationOwner); // Function Engine.VisualLoggerKismetLibrary.RedirectVislog // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF65579BF60
	void LogText(struct UObject* WorldContextObject, struct FString Text, struct FName LogCategory, bool bAddToMessageLog); // Function Engine.VisualLoggerKismetLibrary.LogText // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x21, 0x7FF6558079D0
	void LogSegment(struct UObject* WorldContextObject, struct FVector SegmentStart, struct FVector SegmentEnd, struct FString Text, struct FLinearColor ObjectColor, float Thickness, struct FName CategoryName, bool bAddToMessageLog); // Function Engine.VisualLoggerKismetLibrary.LogSegment // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x4D, 0x7FF655807720
	void LogLocation(struct UObject* WorldContextObject, struct FVector Location, struct FString Text, struct FLinearColor ObjectColor, float Radius, struct FName LogCategory, bool bAddToMessageLog); // Function Engine.VisualLoggerKismetLibrary.LogLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x45, 0x7FF6558074B0
	void LogBox(struct UObject* WorldContextObject, struct FBox BoxShape, struct FString Text, struct FLinearColor ObjectColor, struct FName LogCategory, bool bAddToMessageLog); // Function Engine.VisualLoggerKismetLibrary.LogBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // Param Size : 0x51, 0x7FF655807280
	void EnableRecording(bool bEnabled); // Function Engine.VisualLoggerKismetLibrary.EnableRecording // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF6557651F0
};

// Class Engine.VoiceChannel
// Size : 0x80 (Inherited : 0x70)
struct UVoiceChannel : UChannel {
	unsigned char UnknownData_70[0x0010]; // 0x70(0x10)
};

// Class Engine.VOIPTalker
// Size : 0xE8 (Inherited : 0xB0)
struct UVOIPTalker : UActorComponent {
	struct FVoiceSettings Settings; // 0xB0(0x18)
	unsigned char UnknownData_C8[0x0020]; // 0xC8(0x20)

	void RegisterWithPlayerState(struct APlayerState* OwningState); // Function Engine.VOIPTalker.RegisterWithPlayerState // (Final|Native|Public|BlueprintCallable) // Param Size : 0x8, 0x7FF655807B60
	float GetVoiceLevel(); // Function Engine.VOIPTalker.GetVoiceLevel // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807250
	struct UVOIPTalker* CreateTalkerForPlayer(struct APlayerState* OwningState); // Function Engine.VOIPTalker.CreateTalkerForPlayer // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x10, 0x7FF6558070C0
	void BPOnTalkingEnd(); // Function Engine.VOIPTalker.BPOnTalkingEnd // (Native|Event|Protected|BlueprintEvent) // Param Size : 0x0, 0x7FF6558070A0
	void BPOnTalkingBegin(struct UAudioComponent* AudioComponent); // Function Engine.VOIPTalker.BPOnTalkingBegin // (Native|Event|Protected|BlueprintEvent) // Param Size : 0x8, 0x7FF655807010
};

// Class Engine.VOIPStatics
// Size : 0x28 (Inherited : 0x28)
struct UVOIPStatics : UBlueprintFunctionLibrary {

	void SetMicThreshold(float InThreshold); // Function Engine.VOIPStatics.SetMicThreshold // (Final|Native|Static|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807CE0
};

// Class Engine.VolumeTexture
// Size : 0x110 (Inherited : 0xB8)
struct UVolumeTexture : UTexture {
	unsigned char UnknownData_B8[0x0058]; // 0xB8(0x58)
};

// Class Engine.VolumetricLightmapDensityVolume
// Size : 0x260 (Inherited : 0x258)
struct AVolumetricLightmapDensityVolume : AVolume {
	struct FInt32Interval AllowedMipLevelRange; // 0x258(0x8)
};

// Class Engine.WindDirectionalSource
// Size : 0x228 (Inherited : 0x220)
struct AWindDirectionalSource : AInfo {
	struct UWindDirectionalSourceComponent* Component; // 0x220(0x8)
};

// Class Engine.WindDirectionalSourceComponent
// Size : 0x210 (Inherited : 0x1F0)
struct UWindDirectionalSourceComponent : USceneComponent {
	float Strength; // 0x1F0(0x4)
	float Speed; // 0x1F4(0x4)
	float MinGustAmount; // 0x1F8(0x4)
	float MaxGustAmount; // 0x1FC(0x4)
	float Radius; // 0x200(0x4)
	unsigned char bPointWind : 1; // 0x204(0x1)
	unsigned char UnknownData_204_1 : 7; // 0x204(0x1)
	unsigned char UnknownData_205[0x000B]; // 0x205(0xB)

	void SetWindType(enum class EWindSourceType InNewType); // Function Engine.WindDirectionalSourceComponent.SetWindType // (Final|Native|Public|BlueprintCallable) // Param Size : 0x1, 0x7FF655807F50
	void SetStrength(float InNewStrength); // Function Engine.WindDirectionalSourceComponent.SetStrength // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807ED0
	void SetSpeed(float InNewSpeed); // Function Engine.WindDirectionalSourceComponent.SetSpeed // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807E50
	void SetRadius(float InNewRadius); // Function Engine.WindDirectionalSourceComponent.SetRadius // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807DD0
	void SetMinimumGustAmount(float InNewMinGust); // Function Engine.WindDirectionalSourceComponent.SetMinimumGustAmount // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807D50
	void SetMaximumGustAmount(float InNewMaxGust); // Function Engine.WindDirectionalSourceComponent.SetMaximumGustAmount // (Final|Native|Public|BlueprintCallable) // Param Size : 0x4, 0x7FF655807C60
};

// Class Engine.WorldComposition
// Size : 0x68 (Inherited : 0x28)
struct UWorldComposition : UObject {
	unsigned char UnknownData_28[0x0020]; // 0x28(0x20)
	struct TArray<struct ULevelStreaming*> TilesStreaming; // 0x48(0x10)
	double TilesStreamingTimeThreshold; // 0x58(0x8)
	bool bLoadAllTilesDuringCinematic; // 0x60(0x1)
	bool bRebaseOriginIn3DSpace; // 0x61(0x1)
	unsigned char UnknownData_62[0x0002]; // 0x62(0x2)
	float RebaseOriginDistance; // 0x64(0x4)
};

// Class Engine.HierarchicalLODSetup
// Size : 0x60 (Inherited : 0x28)
struct UHierarchicalLODSetup : UObject {
	struct TArray<struct FHierarchicalSimplification> HierarchicalLODSetup; // 0x28(0x10)
	struct TSoftObjectPtr<struct UMaterialInterface> OverrideBaseMaterial; // 0x38(0x28)
};

// Class Engine.WorldSettings
// Size : 0x3A0 (Inherited : 0x220)
struct AWorldSettings : AInfo {
	unsigned char UnknownData_220[0x0008]; // 0x220(0x8)
	int32_t VisibilityCellSize; // 0x228(0x4)
	enum class EVisibilityAggressiveness VisibilityAggressiveness; // 0x22C(0x1)
	unsigned char bPrecomputeVisibility : 1; // 0x22D(0x1)
	unsigned char bPlaceCellsOnlyAlongCameraTracks : 1; // 0x22D(0x1)
	unsigned char bEnableWorldBoundsChecks : 1; // 0x22D(0x1)
	unsigned char bEnableNavigationSystem : 1; // 0x22D(0x1)
	unsigned char bEnableAISystem : 1; // 0x22D(0x1)
	unsigned char bEnableWorldComposition : 1; // 0x22D(0x1)
	unsigned char bUseClientSideLevelStreamingVolumes : 1; // 0x22D(0x1)
	unsigned char bEnableWorldOriginRebasing : 1; // 0x22D(0x1)
	unsigned char bWorldGravitySet : 1; // 0x22E(0x1)
	unsigned char bGlobalGravitySet : 1; // 0x22E(0x1)
	unsigned char bMinimizeBSPSections : 1; // 0x22E(0x1)
	unsigned char bForceNoPrecomputedLighting : 1; // 0x22E(0x1)
	unsigned char bHighPriorityLoading : 1; // 0x22E(0x1)
	unsigned char bHighPriorityLoadingLocal : 1; // 0x22E(0x1)
	unsigned char bOverrideDefaultBroadphaseSettings : 1; // 0x22E(0x1)
	unsigned char UnknownData_22F[0x0001]; // 0x22F(0x1)
	struct UNavigationSystemConfig* NavigationSystemConfig; // 0x230(0x8)
	struct UNavigationSystemConfig* NavigationSystemConfigOverride; // 0x238(0x8)
	float WorldToMeters; // 0x240(0x4)
	float KillZ; // 0x244(0x4)
	class UDamageType* KillZDamageType; // 0x248(0x8)
	float WorldGravityZ; // 0x250(0x4)
	float GlobalGravityZ; // 0x254(0x4)
	class ADefaultPhysicsVolume* DefaultPhysicsVolumeClass; // 0x258(0x8)
	class UPhysicsCollisionHandler* PhysicsCollisionHandlerClass; // 0x260(0x8)
	class AGameModeBase* DefaultGameMode; // 0x268(0x8)
	class AGameNetworkManager* GameNetworkManagerClass; // 0x270(0x8)
	int32_t PackedLightAndShadowMapTextureSize; // 0x278(0x4)
	struct FVector DefaultColorScale; // 0x27C(0xC)
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x288(0x4)
	float GlobalDistanceFieldViewDistance; // 0x28C(0x4)
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x290(0x4)
	unsigned char UnknownData_294[0x0004]; // 0x294(0x4)
	struct FReverbSettings DefaultReverbSettings; // 0x298(0x20)
	struct FInteriorSettings DefaultAmbientZoneSettings; // 0x2B8(0x24)
	float MonoCullingDistance; // 0x2DC(0x4)
	struct USoundMix* DefaultBaseSoundMix; // 0x2E0(0x8)
	float TimeDilation; // 0x2E8(0x4)
	float MatineeTimeDilation; // 0x2EC(0x4)
	float DemoPlayTimeDilation; // 0x2F0(0x4)
	float MinGlobalTimeDilation; // 0x2F4(0x4)
	float MaxGlobalTimeDilation; // 0x2F8(0x4)
	float MinUndilatedFrameTime; // 0x2FC(0x4)
	float MaxUndilatedFrameTime; // 0x300(0x4)
	struct FBroadphaseSettings BroadphaseSettings; // 0x304(0x40)
	unsigned char UnknownData_344[0x0004]; // 0x344(0x4)
	struct APlayerState* Pauser; // 0x348(0x8)
	struct TArray<struct FNetViewer> ReplicationViewers; // 0x350(0x10)
	struct TArray<struct UAssetUserData*> AssetUserData; // 0x360(0x10)
	struct APlayerState* PauserPlayerState; // 0x370(0x8)
	int32_t MaxNumberOfBookmarks; // 0x378(0x4)
	unsigned char UnknownData_37C[0x0004]; // 0x37C(0x4)
	class UBookmarkBase* DefaultBookmarkClass; // 0x380(0x8)
	struct TArray<struct UBookmarkBase*> BookmarkArray; // 0x388(0x10)
	class UBookmarkBase* LastBookmarkClass; // 0x398(0x8)

	void OnRep_WorldGravityZ(); // Function Engine.WorldSettings.OnRep_WorldGravityZ // (Native|Public) // Param Size : 0x0, 0x7FF6556FB1C0
};

